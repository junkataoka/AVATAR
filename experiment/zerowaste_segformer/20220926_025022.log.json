{"env_info": "sys.platform: linux\nPython: 3.8.5 (default, Sep  4 2020, 07:30:14) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1: Tesla P100-PCIE-12GB\nCUDA_HOME: /cm/shared/apps/cuda11.1/toolkit/11.1.1\nNVCC: Build cuda_11.1.TC455_06.29190527_0\nGCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)\nPyTorch: 1.9.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.1\nOpenCV: 4.6.0\nMMCV: 1.4.0\nMMCV Compiler: n/a\nMMCV CUDA Compiler: n/a\nMMSegmentation: 0.16.0+unknown", "seed": 0, "exp_name": "zerowaste_to_zerowastev2_segformer", "mmseg_version": "0.16.0+unknown", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(\n        type='mit_b5', style='pytorch', pretrained='pretrained/mit_b5.pth'),\n    decode_head=dict(\n        type='SegFormerHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=128,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(embed_dim=768, conv_kernel_size=1),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir='/data/home/jkataok1/AVATAR2022/experiment/zerowaste_segformer'\n    ),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'ZeroWasteDataset'\ndata_root = 'data/zerowaste-v2-splits/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1280, 720)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='ZeroWasteDataset',\n        data_root='data/zerowaste-f/train',\n        img_dir='data',\n        ann_dir='sem_seg',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(1280, 720)),\n            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='ZeroWasteDataset',\n        data_root='data/zerowaste-f/test',\n        img_dir='data',\n        ann_dir='sem_seg',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='ZeroWasteV2Dataset',\n        data_root='data/zerowaste-v2-splits/test',\n        img_dir='data',\n        ann_dir='sem_seg',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nn_gpus = 1\nseed = 0\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=8000, max_keep_ckpts=1)\nevaluation = dict(interval=5000, metric='mIoU')\nname = 'zerowaste2zerowastev2_source-only_segformer_mitb5'\nexp = 1\nname_dataset = 'zerowaste2zerowastev2'\nname_architecture = 'segformer_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'segformer'\nname_uda = 'source-only'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = '/data/home/jkataok1/AVATAR2022/experiment/zerowaste_segformer'\ngit_rev = '8d6e710700ff5e6a053c77bfe384ba44d4672cbe'\ngpu_ids = range(0, 1)\n", "CLASSES": ["background", "rigid_plastic", "cardboard", "metal", "soft_plastic"], "PALETTE": [[0, 0, 0], [128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 7343, "data_time": 0.02617, "decode.loss_seg": 2.92557, "decode.acc_seg": 7.63689, "loss": 2.92557, "time": 0.77723}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 7343, "data_time": 0.00738, "decode.loss_seg": 2.31066, "decode.acc_seg": 48.31501, "loss": 2.31066, "time": 0.71389}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 7343, "data_time": 0.00749, "decode.loss_seg": 1.53351, "decode.acc_seg": 73.29603, "loss": 1.53351, "time": 0.71216}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 7343, "data_time": 0.00623, "decode.loss_seg": 0.98564, "decode.acc_seg": 79.94059, "loss": 0.98564, "time": 0.70485}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 7343, "data_time": 0.00682, "decode.loss_seg": 0.70418, "decode.acc_seg": 83.08581, "loss": 0.70418, "time": 0.71389}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 7343, "data_time": 0.00697, "decode.loss_seg": 0.58396, "decode.acc_seg": 82.93758, "loss": 0.58396, "time": 0.71521}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 7343, "data_time": 0.0066, "decode.loss_seg": 0.49669, "decode.acc_seg": 84.31533, "loss": 0.49669, "time": 0.70238}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 7343, "data_time": 0.05797, "decode.loss_seg": 0.5152, "decode.acc_seg": 82.65155, "loss": 0.5152, "time": 0.75517}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 7343, "data_time": 0.00695, "decode.loss_seg": 0.44525, "decode.acc_seg": 85.34771, "loss": 0.44525, "time": 0.71406}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 7343, "data_time": 0.00616, "decode.loss_seg": 0.46147, "decode.acc_seg": 83.11025, "loss": 0.46147, "time": 0.69814}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 7343, "data_time": 0.00775, "decode.loss_seg": 0.45883, "decode.acc_seg": 84.84096, "loss": 0.45883, "time": 0.71676}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 7343, "data_time": 0.00764, "decode.loss_seg": 0.43874, "decode.acc_seg": 84.48668, "loss": 0.43874, "time": 0.71123}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 7343, "data_time": 0.00649, "decode.loss_seg": 0.41827, "decode.acc_seg": 85.24892, "loss": 0.41827, "time": 0.71214}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 7343, "data_time": 0.00589, "decode.loss_seg": 0.46524, "decode.acc_seg": 83.86672, "loss": 0.46524, "time": 0.70145}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 7343, "data_time": 0.04735, "decode.loss_seg": 0.43545, "decode.acc_seg": 84.51345, "loss": 0.43545, "time": 0.74554}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 7343, "data_time": 0.00628, "decode.loss_seg": 0.40884, "decode.acc_seg": 85.04601, "loss": 0.40884, "time": 0.70821}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 7343, "data_time": 0.00643, "decode.loss_seg": 0.45322, "decode.acc_seg": 83.73307, "loss": 0.45322, "time": 0.71267}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 7343, "data_time": 0.00682, "decode.loss_seg": 0.40721, "decode.acc_seg": 85.3132, "loss": 0.40721, "time": 0.70293}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 7343, "data_time": 0.00714, "decode.loss_seg": 0.41733, "decode.acc_seg": 85.02727, "loss": 0.41733, "time": 0.70727}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 7343, "data_time": 0.00676, "decode.loss_seg": 0.43082, "decode.acc_seg": 83.73727, "loss": 0.43082, "time": 0.70425}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 7343, "data_time": 0.01906, "decode.loss_seg": 0.38594, "decode.acc_seg": 87.11605, "loss": 0.38594, "time": 0.72024}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 7343, "data_time": 0.00636, "decode.loss_seg": 0.40871, "decode.acc_seg": 86.00145, "loss": 0.40871, "time": 0.71191}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 7343, "data_time": 0.00674, "decode.loss_seg": 0.38476, "decode.acc_seg": 86.65332, "loss": 0.38476, "time": 0.71264}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 7343, "data_time": 0.00655, "decode.loss_seg": 0.39663, "decode.acc_seg": 85.90024, "loss": 0.39663, "time": 0.70023}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 7343, "data_time": 0.0058, "decode.loss_seg": 0.40958, "decode.acc_seg": 84.64762, "loss": 0.40958, "time": 0.71486}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 7343, "data_time": 0.00639, "decode.loss_seg": 0.36218, "decode.acc_seg": 86.88203, "loss": 0.36218, "time": 0.7094}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 7343, "data_time": 0.00621, "decode.loss_seg": 0.48386, "decode.acc_seg": 83.01692, "loss": 0.48386, "time": 0.70047}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 7343, "data_time": 0.01201, "decode.loss_seg": 0.45888, "decode.acc_seg": 83.73094, "loss": 0.45888, "time": 0.71497}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 7343, "data_time": 0.0065, "decode.loss_seg": 0.40413, "decode.acc_seg": 84.94287, "loss": 0.40413, "time": 0.71552}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 7343, "data_time": 0.00719, "decode.loss_seg": 0.40599, "decode.acc_seg": 84.42237, "loss": 0.40599, "time": 0.70898}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 6e-05, "memory": 7343, "data_time": 0.07758, "decode.loss_seg": 0.41296, "decode.acc_seg": 84.55854, "loss": 0.41296, "time": 0.79703}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 6e-05, "memory": 7343, "data_time": 0.01703, "decode.loss_seg": 0.35644, "decode.acc_seg": 88.03864, "loss": 0.35644, "time": 0.72504}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 6e-05, "memory": 7343, "data_time": 0.01861, "decode.loss_seg": 0.40015, "decode.acc_seg": 85.86722, "loss": 0.40015, "time": 0.72321}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 6e-05, "memory": 7343, "data_time": 0.01749, "decode.loss_seg": 0.43097, "decode.acc_seg": 84.67173, "loss": 0.43097, "time": 0.72552}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 6e-05, "memory": 7343, "data_time": 0.01765, "decode.loss_seg": 0.44456, "decode.acc_seg": 84.07986, "loss": 0.44456, "time": 0.73216}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 6e-05, "memory": 7343, "data_time": 0.018, "decode.loss_seg": 0.37961, "decode.acc_seg": 86.66065, "loss": 0.37961, "time": 0.72871}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 6e-05, "memory": 7343, "data_time": 0.01819, "decode.loss_seg": 0.38494, "decode.acc_seg": 86.1059, "loss": 0.38494, "time": 0.72147}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 6e-05, "memory": 7343, "data_time": 0.01763, "decode.loss_seg": 0.37801, "decode.acc_seg": 86.51599, "loss": 0.37801, "time": 0.72674}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 6e-05, "memory": 7343, "data_time": 0.01873, "decode.loss_seg": 0.36746, "decode.acc_seg": 86.36958, "loss": 0.36746, "time": 0.72901}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 6e-05, "memory": 7343, "data_time": 0.01662, "decode.loss_seg": 0.30628, "decode.acc_seg": 89.40497, "loss": 0.30628, "time": 0.72823}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 6e-05, "memory": 7343, "data_time": 0.01738, "decode.loss_seg": 0.39962, "decode.acc_seg": 86.16727, "loss": 0.39962, "time": 0.726}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 6e-05, "memory": 7343, "data_time": 0.01871, "decode.loss_seg": 0.38587, "decode.acc_seg": 85.67586, "loss": 0.38587, "time": 0.72449}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 6e-05, "memory": 7343, "data_time": 0.06778, "decode.loss_seg": 0.2948, "decode.acc_seg": 89.9968, "loss": 0.2948, "time": 0.77229}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 6e-05, "memory": 7343, "data_time": 0.01769, "decode.loss_seg": 0.34734, "decode.acc_seg": 88.28679, "loss": 0.34734, "time": 0.7303}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 6e-05, "memory": 7343, "data_time": 0.01769, "decode.loss_seg": 0.3392, "decode.acc_seg": 88.60365, "loss": 0.3392, "time": 0.73207}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 6e-05, "memory": 7343, "data_time": 0.01726, "decode.loss_seg": 0.32249, "decode.acc_seg": 88.65424, "loss": 0.32249, "time": 0.72351}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 6e-05, "memory": 7343, "data_time": 0.01894, "decode.loss_seg": 0.36249, "decode.acc_seg": 86.69025, "loss": 0.36249, "time": 0.72518}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 6e-05, "memory": 7343, "data_time": 0.01691, "decode.loss_seg": 0.3145, "decode.acc_seg": 88.67991, "loss": 0.3145, "time": 0.73021}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 6e-05, "memory": 7343, "data_time": 0.01742, "decode.loss_seg": 0.33966, "decode.acc_seg": 87.29236, "loss": 0.33966, "time": 0.72583}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 6e-05, "memory": 7343, "data_time": 0.01783, "decode.loss_seg": 0.30493, "decode.acc_seg": 89.13918, "loss": 0.30493, "time": 0.73155}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 6e-05, "memory": 7343, "data_time": 0.0168, "decode.loss_seg": 0.32961, "decode.acc_seg": 87.65894, "loss": 0.32961, "time": 0.7278}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 6e-05, "memory": 7343, "data_time": 0.01821, "decode.loss_seg": 0.2612, "decode.acc_seg": 90.73808, "loss": 0.2612, "time": 0.72001}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 6e-05, "memory": 7343, "data_time": 0.03425, "decode.loss_seg": 0.33688, "decode.acc_seg": 88.57294, "loss": 0.33688, "time": 0.74256}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 6e-05, "memory": 7343, "data_time": 0.01745, "decode.loss_seg": 0.3442, "decode.acc_seg": 87.93908, "loss": 0.3442, "time": 0.72904}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 6e-05, "memory": 7343, "data_time": 0.01703, "decode.loss_seg": 0.29414, "decode.acc_seg": 89.40678, "loss": 0.29414, "time": 0.72907}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 6e-05, "memory": 7343, "data_time": 0.01835, "decode.loss_seg": 0.31966, "decode.acc_seg": 88.89016, "loss": 0.31966, "time": 0.73006}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 6e-05, "memory": 7343, "data_time": 0.01852, "decode.loss_seg": 0.32596, "decode.acc_seg": 87.92795, "loss": 0.32596, "time": 0.72375}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 6e-05, "memory": 7343, "data_time": 0.01758, "decode.loss_seg": 0.37525, "decode.acc_seg": 86.58376, "loss": 0.37525, "time": 0.72868}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 6e-05, "memory": 7343, "data_time": 0.01777, "decode.loss_seg": 0.38476, "decode.acc_seg": 86.7136, "loss": 0.38476, "time": 0.72734}
{"mode": "train", "epoch": 2, "iter": 3000, "lr": 6e-05, "memory": 7343, "data_time": 0.01553, "decode.loss_seg": 0.3364, "decode.acc_seg": 88.39861, "loss": 0.3364, "time": 0.72165}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 6e-05, "memory": 7343, "data_time": 0.0754, "decode.loss_seg": 0.29687, "decode.acc_seg": 89.65664, "loss": 0.29687, "time": 0.79285}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 6e-05, "memory": 7343, "data_time": 0.01784, "decode.loss_seg": 0.36152, "decode.acc_seg": 86.47552, "loss": 0.36152, "time": 0.72684}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 6e-05, "memory": 7343, "data_time": 0.01771, "decode.loss_seg": 0.30698, "decode.acc_seg": 89.32088, "loss": 0.30698, "time": 0.72135}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 6e-05, "memory": 7343, "data_time": 0.04187, "decode.loss_seg": 0.29512, "decode.acc_seg": 89.95076, "loss": 0.29512, "time": 0.7478}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 6e-05, "memory": 7343, "data_time": 0.07364, "decode.loss_seg": 0.30408, "decode.acc_seg": 88.72515, "loss": 0.30408, "time": 0.7773}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 6e-05, "memory": 7343, "data_time": 0.07249, "decode.loss_seg": 0.30731, "decode.acc_seg": 89.62339, "loss": 0.30731, "time": 0.77614}
{"mode": "train", "epoch": 3, "iter": 3350, "lr": 5e-05, "memory": 7343, "data_time": 0.01722, "decode.loss_seg": 0.28524, "decode.acc_seg": 90.08055, "loss": 0.28524, "time": 0.72199}
{"mode": "train", "epoch": 3, "iter": 3400, "lr": 5e-05, "memory": 7343, "data_time": 0.01782, "decode.loss_seg": 0.28156, "decode.acc_seg": 90.50958, "loss": 0.28156, "time": 0.72861}
{"mode": "train", "epoch": 3, "iter": 3450, "lr": 5e-05, "memory": 7343, "data_time": 0.01865, "decode.loss_seg": 0.34251, "decode.acc_seg": 87.24686, "loss": 0.34251, "time": 0.7329}
{"mode": "train", "epoch": 3, "iter": 3500, "lr": 5e-05, "memory": 7343, "data_time": 0.01752, "decode.loss_seg": 0.32474, "decode.acc_seg": 88.26015, "loss": 0.32474, "time": 0.72629}
{"mode": "train", "epoch": 3, "iter": 3550, "lr": 5e-05, "memory": 7343, "data_time": 0.01722, "decode.loss_seg": 0.36364, "decode.acc_seg": 87.29995, "loss": 0.36364, "time": 0.71917}
{"mode": "train", "epoch": 3, "iter": 3600, "lr": 5e-05, "memory": 7343, "data_time": 0.0572, "decode.loss_seg": 0.3157, "decode.acc_seg": 89.0344, "loss": 0.3157, "time": 0.76504}
{"mode": "train", "epoch": 3, "iter": 3650, "lr": 5e-05, "memory": 7343, "data_time": 0.06154, "decode.loss_seg": 0.34328, "decode.acc_seg": 88.26868, "loss": 0.34328, "time": 0.7672}
{"mode": "train", "epoch": 3, "iter": 3700, "lr": 5e-05, "memory": 7343, "data_time": 0.01695, "decode.loss_seg": 0.30262, "decode.acc_seg": 89.12147, "loss": 0.30262, "time": 0.73073}
{"mode": "train", "epoch": 3, "iter": 3750, "lr": 5e-05, "memory": 7343, "data_time": 0.01691, "decode.loss_seg": 0.36294, "decode.acc_seg": 87.55333, "loss": 0.36294, "time": 0.72988}
{"mode": "train", "epoch": 3, "iter": 3800, "lr": 5e-05, "memory": 7343, "data_time": 0.01828, "decode.loss_seg": 0.26968, "decode.acc_seg": 90.99874, "loss": 0.26968, "time": 0.72083}
{"mode": "train", "epoch": 3, "iter": 3850, "lr": 5e-05, "memory": 7343, "data_time": 0.018, "decode.loss_seg": 0.30064, "decode.acc_seg": 90.17027, "loss": 0.30064, "time": 0.72535}
{"mode": "train", "epoch": 3, "iter": 3900, "lr": 5e-05, "memory": 7343, "data_time": 0.01704, "decode.loss_seg": 0.30377, "decode.acc_seg": 88.86749, "loss": 0.30377, "time": 0.72832}
{"mode": "train", "epoch": 3, "iter": 3950, "lr": 5e-05, "memory": 7343, "data_time": 0.01768, "decode.loss_seg": 0.3158, "decode.acc_seg": 88.91971, "loss": 0.3158, "time": 0.72909}
{"mode": "train", "epoch": 3, "iter": 4000, "lr": 5e-05, "memory": 7343, "data_time": 0.01715, "decode.loss_seg": 0.35422, "decode.acc_seg": 88.09081, "loss": 0.35422, "time": 0.72198}
{"mode": "train", "epoch": 3, "iter": 4050, "lr": 5e-05, "memory": 7343, "data_time": 0.01902, "decode.loss_seg": 0.28171, "decode.acc_seg": 90.23828, "loss": 0.28171, "time": 0.7258}
{"mode": "train", "epoch": 3, "iter": 4100, "lr": 5e-05, "memory": 7343, "data_time": 0.06092, "decode.loss_seg": 0.2891, "decode.acc_seg": 89.88818, "loss": 0.2891, "time": 0.76852}
{"mode": "train", "epoch": 3, "iter": 4150, "lr": 5e-05, "memory": 7343, "data_time": 0.01771, "decode.loss_seg": 0.26558, "decode.acc_seg": 90.96907, "loss": 0.26558, "time": 0.72548}
{"mode": "train", "epoch": 3, "iter": 4200, "lr": 5e-05, "memory": 7343, "data_time": 0.01798, "decode.loss_seg": 0.26681, "decode.acc_seg": 89.85508, "loss": 0.26681, "time": 0.72893}
{"mode": "train", "epoch": 3, "iter": 4250, "lr": 5e-05, "memory": 7343, "data_time": 0.01739, "decode.loss_seg": 0.28675, "decode.acc_seg": 89.80747, "loss": 0.28675, "time": 0.72353}
{"mode": "train", "epoch": 3, "iter": 4300, "lr": 5e-05, "memory": 7343, "data_time": 0.01866, "decode.loss_seg": 0.34441, "decode.acc_seg": 87.23682, "loss": 0.34441, "time": 0.7227}
{"mode": "train", "epoch": 3, "iter": 4350, "lr": 5e-05, "memory": 7343, "data_time": 0.05627, "decode.loss_seg": 0.27066, "decode.acc_seg": 90.69762, "loss": 0.27066, "time": 0.76128}
{"mode": "train", "epoch": 3, "iter": 4400, "lr": 5e-05, "memory": 7343, "data_time": 0.06723, "decode.loss_seg": 0.29397, "decode.acc_seg": 89.18435, "loss": 0.29397, "time": 0.77101}
{"mode": "train", "epoch": 3, "iter": 4450, "lr": 5e-05, "memory": 7343, "data_time": 0.01766, "decode.loss_seg": 0.35682, "decode.acc_seg": 87.5518, "loss": 0.35682, "time": 0.72564}
{"mode": "train", "epoch": 3, "iter": 4500, "lr": 5e-05, "memory": 7343, "data_time": 0.01546, "decode.loss_seg": 0.31093, "decode.acc_seg": 89.30852, "loss": 0.31093, "time": 0.71956}
{"mode": "train", "epoch": 4, "iter": 4550, "lr": 5e-05, "memory": 7343, "data_time": 0.07619, "decode.loss_seg": 0.25971, "decode.acc_seg": 90.92739, "loss": 0.25971, "time": 0.79522}
{"mode": "train", "epoch": 4, "iter": 4600, "lr": 5e-05, "memory": 7343, "data_time": 0.01723, "decode.loss_seg": 0.26448, "decode.acc_seg": 90.76727, "loss": 0.26448, "time": 0.72178}
{"mode": "train", "epoch": 4, "iter": 4650, "lr": 5e-05, "memory": 7343, "data_time": 0.0191, "decode.loss_seg": 0.26478, "decode.acc_seg": 90.17656, "loss": 0.26478, "time": 0.72256}
{"mode": "train", "epoch": 4, "iter": 4700, "lr": 5e-05, "memory": 7343, "data_time": 0.0175, "decode.loss_seg": 0.25288, "decode.acc_seg": 90.45578, "loss": 0.25288, "time": 0.72866}
{"mode": "train", "epoch": 4, "iter": 4750, "lr": 5e-05, "memory": 7343, "data_time": 0.01754, "decode.loss_seg": 0.27388, "decode.acc_seg": 90.70105, "loss": 0.27388, "time": 0.72659}
{"mode": "train", "epoch": 4, "iter": 4800, "lr": 5e-05, "memory": 7343, "data_time": 0.01796, "decode.loss_seg": 0.27256, "decode.acc_seg": 90.59858, "loss": 0.27256, "time": 0.7287}
{"mode": "train", "epoch": 4, "iter": 4850, "lr": 5e-05, "memory": 7343, "data_time": 0.01864, "decode.loss_seg": 0.2763, "decode.acc_seg": 89.84865, "loss": 0.2763, "time": 0.72178}
{"mode": "train", "epoch": 4, "iter": 4900, "lr": 5e-05, "memory": 7343, "data_time": 0.0542, "decode.loss_seg": 0.28369, "decode.acc_seg": 89.72216, "loss": 0.28369, "time": 0.75933}
{"mode": "train", "epoch": 4, "iter": 4950, "lr": 5e-05, "memory": 7343, "data_time": 0.06858, "decode.loss_seg": 0.33164, "decode.acc_seg": 88.25718, "loss": 0.33164, "time": 0.77608}
{"mode": "train", "epoch": 4, "iter": 5000, "lr": 5e-05, "memory": 7343, "data_time": 0.01688, "decode.loss_seg": 0.29568, "decode.acc_seg": 89.25573, "loss": 0.29568, "time": 0.72263}
