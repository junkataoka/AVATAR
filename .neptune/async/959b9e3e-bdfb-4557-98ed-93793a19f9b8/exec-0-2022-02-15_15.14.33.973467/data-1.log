{"obj": {"type": "AssignString", "path": ["sys", "name"], "value": "Untitled"}, "version": 1}
{"obj": {"type": "AssignString", "path": ["sys", "description"], "value": ""}, "version": 2}
{"obj": {"type": "AssignString", "path": ["sys", "hostname"], "value": "compute130"}, "version": 3}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": false}, "version": 4}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stdout"]}, "version": 5}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stderr"]}, "version": 6}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "cpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 7}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "cpu"]}, "version": 8}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "memory"], "min": 0.0, "max": 125.80869674682617, "unit": "GB"}, "version": 9}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "memory"]}, "version": 10}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 11}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu"]}, "version": 12}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu_memory"], "min": 0.0, "max": 11.9124755859375, "unit": "GB"}, "version": 13}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu_memory"]}, "version": 14}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 2.7, "step": null, "ts": 1644956074.145114}]}, "version": 15}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.3736419677734375, "step": null, "ts": 1644956074.145114}]}, "version": 16}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 0.9229736328125, "step": null, "ts": 1644956074.145114}]}, "version": 17}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "", "step": null, "ts": 1644956074.1558125}]}, "version": 18}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "https://app.neptune.ai/junkataoka/SRDC/e/SRDC-231\n", "step": null, "ts": 1644956074.1567245}]}, "version": 19}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Remember to stop your run once you\u2019ve finished logging your metadata (https://docs.neptune.ai/api-reference/run#stop). It will be stopped automatically only when the notebook kernel/interactive console is terminated.\n", "step": null, "ts": 1644956074.1578093}]}, "version": 20}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "begin training", "step": null, "ts": 1644956074.2690074}]}, "version": 21}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956074.2697465}]}, "version": 22}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.4, "step": null, "ts": 1644956084.1558459}]}, "version": 23}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.810222625732422, "step": null, "ts": 1644956084.1558459}]}, "version": 24}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 52.0, "step": null, "ts": 1644956084.1558459}]}, "version": 25}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 4.0382080078125, "step": null, "ts": 1644956084.1558459}]}, "version": 26}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.668 (0.668)\tD 0.542 (0.542)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1956 (0.1956)", "step": null, "ts": 1644956090.1534193}]}, "version": 27}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956090.1676693}]}, "version": 28}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644956094.1656063}]}, "version": 29}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.735679626464844, "step": null, "ts": 1644956094.1656063}]}, "version": 30}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 12.0, "step": null, "ts": 1644956094.1656063}]}, "version": 31}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9600830078125, "step": null, "ts": 1644956094.1656063}]}, "version": 32}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.471 (0.475)\tD 0.358 (0.356)\tT@1 76.190 (81.530)\tT@5 100.000 (94.517)\tL 0.8891 (0.7919)", "step": null, "ts": 1644956094.7108772}]}, "version": 33}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956094.7237072}]}, "version": 34}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956100.6973407}]}, "version": 35}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.4, "step": null, "ts": 1644956104.1705813}]}, "version": 36}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.667629241943359, "step": null, "ts": 1644956104.1705813}]}, "version": 37}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644956104.1705813}]}, "version": 38}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956109.8384356}]}, "version": 39}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956110.7398522}]}, "version": 40}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644956110.7425401}]}, "version": 41}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956110.743173}]}, "version": 42}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.666 (0.666)\tLoss 0.1956 (0.1956)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644956111.4116828}]}, "version": 43}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956111.4191084}]}, "version": 44}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956114.174538}]}, "version": 45}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.7734832763671875, "step": null, "ts": 1644956114.174538}]}, "version": 46}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644956114.174538}]}, "version": 47}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.467 (0.473)\tLoss 0.8891 (0.7919)\tPrec@1 76.190 (81.530)\tPrec@5 100.000 (94.517)", "step": null, "ts": 1644956115.9467764}]}, "version": 48}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956115.9529026}]}, "version": 49}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644956116.628352}]}, "version": 50}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.6289704}]}, "version": 51}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.012, Prec@1 74.465", "step": null, "ts": 1644956116.6423287}]}, "version": 52}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.643158}]}, "version": 53}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.060, Prec@1 81.258", "step": null, "ts": 1644956116.751272}]}, "version": 54}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.7523873}]}, "version": 55}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.061, Prec@1 82.013", "step": null, "ts": 1644956116.8140318}]}, "version": 56}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.8151426}]}, "version": 57}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.061, Prec@1 82.138", "step": null, "ts": 1644956116.8757794}]}, "version": 58}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.8768451}]}, "version": 59}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.061, Prec@1 82.642", "step": null, "ts": 1644956116.937193}]}, "version": 60}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956116.9381928}]}, "version": 61}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 77.610", "step": null, "ts": 1644956117.05631}]}, "version": 62}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956117.0572453}]}, "version": 63}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.030, Prec@1 83.648", "step": null, "ts": 1644956117.1152887}]}, "version": 64}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956117.1162655}]}, "version": 65}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.040, Prec@1 85.283", "step": null, "ts": 1644956117.174583}]}, "version": 66}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956117.175474}]}, "version": 67}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.045, Prec@1 86.038", "step": null, "ts": 1644956117.233674}]}, "version": 68}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956117.2346845}]}, "version": 69}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.047, Prec@1 86.289", "step": null, "ts": 1644956117.292691}]}, "version": 70}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956117.2937918}]}, "version": 71}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644956117.7149737}]}, "version": 72}
{"obj": {"type": "LogFloats", "path": ["metrics", "best_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644956117.748321}]}, "version": 73}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8525060415267944, "step": null, "ts": 1644956120.1674829}]}, "version": 74}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6642e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956120.1728268}]}, "version": 75}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956120.1740823}]}, "version": 76}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.2756e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956120.176114}]}, "version": 77}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956120.17724}]}, "version": 78}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.8544e-06, 7.5972e-07, 1.9681e-06,  ..., 3.4270e-06, 5.0153e-06,\n         1.7943e-06],\n        [2.9377e-06, 2.7264e-06, 2.5797e-06,  ..., 3.7805e-06, 2.1584e-06,\n         4.2486e-06],\n        [1.3760e-05, 1.2341e-06, 1.7665e-06,  ..., 2.0983e-06, 3.5339e-06,\n         3.7392e-06],\n        ...,\n        [4.4316e-06, 1.5221e-06, 2.7150e-06,  ..., 2.5922e-06, 3.5841e-06,\n         3.4166e-06],\n        [3.8542e-06, 2.1942e-06, 2.6430e-06,  ..., 3.5453e-06, 2.4020e-06,\n         3.3445e-06],\n        [4.5888e-06, 2.0686e-06, 3.9462e-06,  ..., 3.4028e-06, 3.7669e-06,\n         1.8468e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956120.1817796}]}, "version": 79}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956120.1828952}]}, "version": 80}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0726],\n        [0.0289],\n        [0.0271],\n        [0.0191],\n        [0.0220],\n        [0.0414],\n        [0.0271],\n        [0.0243],\n        [0.0246],\n        [0.0569],\n        [0.0320],\n        [0.0297],\n        [0.0301],\n        [0.0270],\n        [0.0253],\n        [0.0154],\n        [0.0334],\n        [0.0229],\n        [0.0289],\n        [0.0398],\n        [0.0360],\n        [0.0324],\n        [0.0445],\n        [0.0829],\n        [0.0298],\n        [0.0409],\n        [0.0418],\n        [0.0177],\n        [0.0278],\n        [0.0351],\n        [0.0205],\n        [0.0305],\n        [0.0376],\n        [0.0296],\n        [0.0339],\n        [0.0369],\n        [0.0310],\n        [0.0347],\n        [0.0217],\n        [0.0337],\n        [0.0299],\n        [0.0484]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956120.1876945}]}, "version": 81}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956120.1888187}]}, "version": 82}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.94764709472656, "step": null, "ts": 1644956120.1908154}]}, "version": 83}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.32100024819374084, "step": null, "ts": 1644956120.2961826}]}, "version": 84}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.648619651794434, "step": null, "ts": 1644956120.302993}]}, "version": 85}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 2.046 (2.046)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956121.4367669}]}, "version": 86}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.4381845}]}, "version": 87}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.000000", "step": null, "ts": 1644956121.439928}]}, "version": 88}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.4408824}]}, "version": 89}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6724255084991455, "step": null, "ts": 1644956121.6509886}]}, "version": 90}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2346e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956121.6681728}]}, "version": 91}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.6692317}]}, "version": 92}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5484e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956121.6706436}]}, "version": 93}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.671433}]}, "version": 94}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.0371e-06, 3.3703e-06, 1.6255e-06,  ..., 3.0672e-06, 4.2483e-06,\n         2.3840e-06],\n        [4.2352e-06, 2.0902e-06, 2.3474e-06,  ..., 3.4691e-06, 2.8662e-06,\n         7.1305e-06],\n        [3.7481e-06, 2.8704e-06, 2.4213e-06,  ..., 3.7532e-06, 3.0357e-06,\n         2.9217e-06],\n        ...,\n        [4.9146e-06, 3.0962e-06, 2.9827e-06,  ..., 2.2146e-06, 3.9045e-06,\n         1.4883e-06],\n        [4.5960e-06, 3.6808e-06, 1.9907e-06,  ..., 3.2861e-06, 4.5799e-06,\n         3.5763e-06],\n        [4.6166e-06, 2.1926e-06, 3.2675e-06,  ..., 5.3391e-06, 2.6674e-06,\n         3.0482e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956121.674405}]}, "version": 95}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.675062}]}, "version": 96}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0222],\n        [0.0202],\n        [0.0324],\n        [0.0315],\n        [0.0323],\n        [0.0310],\n        [0.0245],\n        [0.0267],\n        [0.0485],\n        [0.0267],\n        [0.0508],\n        [0.0323],\n        [0.0289],\n        [0.0666],\n        [0.0375],\n        [0.0290],\n        [0.0435],\n        [0.0304],\n        [0.0407],\n        [0.0275],\n        [0.0190],\n        [0.0340],\n        [0.0233],\n        [0.0409],\n        [0.0288],\n        [0.0458],\n        [0.0336],\n        [0.0231],\n        [0.0336],\n        [0.0350],\n        [0.0286],\n        [0.0299],\n        [0.0354],\n        [0.0358],\n        [0.0170],\n        [0.0338],\n        [0.0537],\n        [0.0361],\n        [0.0264],\n        [0.0381],\n        [0.0384],\n        [0.0167]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956121.6788402}]}, "version": 97}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956121.6835077}]}, "version": 98}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.71768188476562, "step": null, "ts": 1644956121.6852465}]}, "version": 99}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24318927526474, "step": null, "ts": 1644956121.779693}]}, "version": 100}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.635259628295898, "step": null, "ts": 1644956121.787605}]}, "version": 101}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8772714138031006, "step": null, "ts": 1644956122.2253687}]}, "version": 102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.2671e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956122.234582}]}, "version": 103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.2478642}]}, "version": 104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.9657e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956122.2585616}]}, "version": 105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.2596364}]}, "version": 106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.4367e-06, 2.6984e-06, 4.0020e-06,  ..., 3.5084e-06, 2.3653e-06,\n         3.0355e-06],\n        [4.8559e-06, 1.2193e-06, 2.9400e-06,  ..., 2.5142e-06, 3.6374e-06,\n         3.9399e-06],\n        [5.1615e-06, 1.2435e-06, 2.2309e-06,  ..., 2.1898e-06, 1.5005e-06,\n         2.1397e-06],\n        ...,\n        [3.0793e-06, 1.6965e-06, 1.7569e-06,  ..., 4.2860e-06, 3.3663e-06,\n         3.1761e-06],\n        [4.7685e-06, 1.7805e-06, 2.4134e-06,  ..., 2.5705e-06, 3.8941e-06,\n         2.4777e-06],\n        [6.4760e-06, 2.3558e-06, 2.6384e-06,  ..., 2.2091e-06, 3.4421e-06,\n         1.6164e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956122.2622712}]}, "version": 107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.2633104}]}, "version": 108}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0397],\n        [0.0603],\n        [0.0262],\n        [0.0439],\n        [0.0311],\n        [0.0307],\n        [0.0239],\n        [0.0444],\n        [0.0247],\n        [0.0254],\n        [0.0405],\n        [0.0718],\n        [0.0255],\n        [0.0394],\n        [0.0364],\n        [0.0314],\n        [0.0312],\n        [0.0407],\n        [0.0362],\n        [0.0343],\n        [0.0260],\n        [0.0219],\n        [0.0396],\n        [0.0283],\n        [0.0317],\n        [0.0363],\n        [0.0377],\n        [0.0323],\n        [0.0494],\n        [0.0377],\n        [0.0340],\n        [0.0438],\n        [0.0349],\n        [0.0324],\n        [0.0136],\n        [0.0090],\n        [0.0277],\n        [0.0294],\n        [0.0321],\n        [0.0455],\n        [0.0256],\n        [0.0284]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956122.266399}]}, "version": 109}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.2672124}]}, "version": 110}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.8525848388672, "step": null, "ts": 1644956122.268421}]}, "version": 111}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21641245484352112, "step": null, "ts": 1644956122.3691192}]}, "version": 112}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.598548889160156, "step": null, "ts": 1644956122.3732295}]}, "version": 113}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9187378883361816, "step": null, "ts": 1644956122.8093734}]}, "version": 114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2690e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956122.8187478}]}, "version": 115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.8258648}]}, "version": 116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.8217e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956122.8270245}]}, "version": 117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.8280263}]}, "version": 118}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.7214e-06, 1.7026e-06, 4.2315e-06,  ..., 2.7188e-06, 3.2913e-06,\n         4.4945e-06],\n        [5.3874e-06, 1.0492e-06, 2.0444e-06,  ..., 1.8423e-06, 2.6634e-06,\n         3.3127e-06],\n        [8.1003e-06, 1.6337e-06, 2.4680e-06,  ..., 2.5333e-06, 2.4170e-06,\n         2.8052e-06],\n        ...,\n        [4.9526e-06, 3.9405e-06, 1.8720e-06,  ..., 1.8640e-06, 3.3400e-06,\n         2.3790e-06],\n        [4.3983e-06, 2.2012e-06, 2.9847e-06,  ..., 2.8775e-06, 3.6084e-06,\n         2.8926e-06],\n        [5.5789e-06, 5.1089e-07, 3.2360e-06,  ..., 1.0255e-06, 3.2283e-06,\n         2.0613e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956122.8303883}]}, "version": 119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.8313282}]}, "version": 120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0445],\n        [0.0440],\n        [0.0281],\n        [0.0416],\n        [0.0285],\n        [0.0291],\n        [0.0260],\n        [0.0250],\n        [0.0312],\n        [0.1128],\n        [0.0329],\n        [0.0213],\n        [0.0339],\n        [0.0240],\n        [0.0263],\n        [0.0163],\n        [0.0356],\n        [0.0135],\n        [0.0433],\n        [0.0263],\n        [0.0212],\n        [0.0314],\n        [0.0536],\n        [0.0347],\n        [0.0309],\n        [0.0323],\n        [0.0256],\n        [0.0322],\n        [0.0150],\n        [0.0296],\n        [0.0313],\n        [0.0370],\n        [0.0198],\n        [0.0779],\n        [0.0293],\n        [0.0310],\n        [0.0306],\n        [0.0273],\n        [0.0603],\n        [0.0184],\n        [0.0360],\n        [0.0285]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956122.8344462}]}, "version": 121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956122.835397}]}, "version": 122}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.79611206054688, "step": null, "ts": 1644956122.836834}]}, "version": 123}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20896472036838531, "step": null, "ts": 1644956122.9287627}]}, "version": 124}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.762739181518555, "step": null, "ts": 1644956122.9392884}]}, "version": 125}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7246026992797852, "step": null, "ts": 1644956123.3767474}]}, "version": 126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6592e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956123.385498}]}, "version": 127}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.3863745}]}, "version": 128}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9050e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956123.3878667}]}, "version": 129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.388789}]}, "version": 130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.1666e-06, 6.4551e-07, 1.9548e-06,  ..., 1.5824e-06, 1.4689e-06,\n         1.3853e-06],\n        [6.0647e-06, 2.0746e-06, 2.0505e-06,  ..., 1.9880e-06, 2.7057e-06,\n         2.8225e-06],\n        [4.7432e-06, 3.2158e-06, 3.4032e-06,  ..., 2.8043e-06, 2.5202e-06,\n         3.5905e-06],\n        ...,\n        [5.4588e-06, 1.7344e-06, 2.2431e-06,  ..., 3.5099e-06, 3.7303e-06,\n         2.2731e-06],\n        [4.7436e-06, 1.4759e-06, 3.4972e-06,  ..., 3.1268e-06, 2.1974e-06,\n         2.1367e-06],\n        [6.4954e-06, 7.6543e-07, 5.8262e-06,  ..., 3.9312e-06, 4.2960e-06,\n         1.9280e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956123.3910618}]}, "version": 131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.3920908}]}, "version": 132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0548],\n        [0.0306],\n        [0.0310],\n        [0.0375],\n        [0.0398],\n        [0.0246],\n        [0.0350],\n        [0.0279],\n        [0.0263],\n        [0.0462],\n        [0.0365],\n        [0.0231],\n        [0.0285],\n        [0.0154],\n        [0.0217],\n        [0.0366],\n        [0.0192],\n        [0.0355],\n        [0.0144],\n        [0.0299],\n        [0.0416],\n        [0.0207],\n        [0.0285],\n        [0.0303],\n        [0.0248],\n        [0.0316],\n        [0.0329],\n        [0.0347],\n        [0.0359],\n        [0.0319],\n        [0.0458],\n        [0.0282],\n        [0.0406],\n        [0.0257],\n        [0.0258],\n        [0.0352],\n        [0.0244],\n        [0.0390],\n        [0.0326],\n        [0.0383],\n        [0.0515],\n        [0.0810]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956123.3950274}]}, "version": 133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.3960533}]}, "version": 134}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.9472198486328, "step": null, "ts": 1644956123.3972785}]}, "version": 135}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.31185558438301086, "step": null, "ts": 1644956123.494785}]}, "version": 136}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.804479598999023, "step": null, "ts": 1644956123.507391}]}, "version": 137}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0130712985992432, "step": null, "ts": 1644956123.9346745}]}, "version": 138}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2832e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956123.9438732}]}, "version": 139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.9519699}]}, "version": 140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.1912e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956123.9533503}]}, "version": 141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.954119}]}, "version": 142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.5382e-06, 8.4847e-07, 6.0802e-06,  ..., 2.3771e-06, 4.0077e-06,\n         1.2943e-06],\n        [4.4093e-06, 1.7489e-06, 2.9499e-06,  ..., 3.8212e-06, 3.4363e-06,\n         3.1700e-06],\n        [4.3132e-06, 2.1042e-06, 2.9800e-06,  ..., 3.4835e-06, 2.4400e-06,\n         2.8797e-06],\n        ...,\n        [3.9694e-06, 2.2677e-06, 2.3735e-06,  ..., 2.2498e-06, 2.4065e-06,\n         2.7454e-06],\n        [3.6280e-06, 1.5325e-06, 3.0131e-06,  ..., 3.2872e-06, 2.1304e-06,\n         3.1377e-06],\n        [6.9502e-06, 3.0130e-06, 1.9939e-06,  ..., 2.6076e-06, 3.0406e-06,\n         2.6533e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956123.9564037}]}, "version": 143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.9574468}]}, "version": 144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0887],\n        [0.0277],\n        [0.0264],\n        [0.0296],\n        [0.0496],\n        [0.0181],\n        [0.0346],\n        [0.0253],\n        [0.0141],\n        [0.0370],\n        [0.0213],\n        [0.0508],\n        [0.0329],\n        [0.0198],\n        [0.0339],\n        [0.0286],\n        [0.0400],\n        [0.0320],\n        [0.0370],\n        [0.0268],\n        [0.0359],\n        [0.0219],\n        [0.0428],\n        [0.0165],\n        [0.0263],\n        [0.0280],\n        [0.0361],\n        [0.0338],\n        [0.0366],\n        [0.0383],\n        [0.0450],\n        [0.0208],\n        [0.0399],\n        [0.0303],\n        [0.0340],\n        [0.0270],\n        [0.0452],\n        [0.0206],\n        [0.0363],\n        [0.0375],\n        [0.0453],\n        [0.0293]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956123.960247}]}, "version": 145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956123.968352}]}, "version": 146}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.0684051513672, "step": null, "ts": 1644956123.9696784}]}, "version": 147}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3622385859489441, "step": null, "ts": 1644956124.0585232}]}, "version": 148}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.8977689743042, "step": null, "ts": 1644956124.068206}]}, "version": 149}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.2, "step": null, "ts": 1644956124.1782074}]}, "version": 150}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.001392364501953, "step": null, "ts": 1644956124.1782074}]}, "version": 151}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 78.0, "step": null, "ts": 1644956124.1782074}]}, "version": 152}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644956124.1782074}]}, "version": 153}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0309388637542725, "step": null, "ts": 1644956124.5258536}]}, "version": 154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2518e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956124.5391161}]}, "version": 155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956124.5401828}]}, "version": 156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.9480e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956124.5413902}]}, "version": 157}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956124.5423462}]}, "version": 158}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.9612e-06, 2.3063e-06, 2.2559e-06,  ..., 2.2806e-06, 3.8655e-06,\n         2.7231e-06],\n        [3.3807e-06, 2.0744e-06, 2.6007e-06,  ..., 2.6979e-06, 3.9115e-06,\n         2.7554e-06],\n        [7.8045e-06, 3.0172e-06, 2.3878e-06,  ..., 1.7170e-06, 2.4892e-06,\n         1.6947e-06],\n        ...,\n        [2.7605e-06, 3.0888e-06, 1.8254e-06,  ..., 2.3516e-06, 4.6579e-06,\n         2.6811e-06],\n        [6.4607e-06, 1.2703e-06, 5.3899e-06,  ..., 3.1466e-06, 1.2820e-06,\n         2.3819e-06],\n        [7.9203e-06, 1.6391e-06, 2.7158e-06,  ..., 2.6814e-06, 2.9210e-06,\n         2.6616e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956124.5449092}]}, "version": 159}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956124.5459278}]}, "version": 160}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0343],\n        [0.0266],\n        [0.0273],\n        [0.0225],\n        [0.0295],\n        [0.0401],\n        [0.0177],\n        [0.0302],\n        [0.0529],\n        [0.0313],\n        [0.0378],\n        [0.0303],\n        [0.0337],\n        [0.0343],\n        [0.0724],\n        [0.0262],\n        [0.0406],\n        [0.0279],\n        [0.0351],\n        [0.0344],\n        [0.0303],\n        [0.0623],\n        [0.0487],\n        [0.0228],\n        [0.0267],\n        [0.0213],\n        [0.0270],\n        [0.0325],\n        [0.0220],\n        [0.0483],\n        [0.0274],\n        [0.0177],\n        [0.0454],\n        [0.0458],\n        [0.0369],\n        [0.0336],\n        [0.0459],\n        [0.0261],\n        [0.0159],\n        [0.0285],\n        [0.0214],\n        [0.0346]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956124.548985}]}, "version": 161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956124.5498693}]}, "version": 162}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.62799072265625, "step": null, "ts": 1644956124.551279}]}, "version": 163}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3614720106124878, "step": null, "ts": 1644956124.639449}]}, "version": 164}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.823277473449707, "step": null, "ts": 1644956124.6492743}]}, "version": 165}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5970225930213928, "step": null, "ts": 1644956125.1135545}]}, "version": 166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2424e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956125.125907}]}, "version": 167}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.13373}]}, "version": 168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.7626e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956125.1349733}]}, "version": 169}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.1359293}]}, "version": 170}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.1394e-06, 1.5307e-06, 1.9427e-06,  ..., 3.3990e-06, 2.7820e-06,\n         2.9270e-06],\n        [4.1468e-06, 1.7159e-06, 3.0371e-06,  ..., 3.6099e-06, 4.5362e-06,\n         2.2766e-06],\n        [6.3634e-06, 4.0432e-06, 3.4017e-06,  ..., 2.2122e-06, 3.1359e-06,\n         2.9718e-06],\n        ...,\n        [8.4965e-06, 7.4897e-07, 3.0185e-06,  ..., 1.5205e-06, 3.7425e-06,\n         2.4791e-06],\n        [4.1206e-06, 1.1315e-06, 3.2592e-06,  ..., 4.8709e-06, 1.6302e-06,\n         2.6130e-06],\n        [3.8898e-06, 1.7457e-06, 6.7043e-06,  ..., 1.9520e-06, 2.6064e-06,\n         2.5594e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956125.1382902}]}, "version": 171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.139194}]}, "version": 172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0441],\n        [0.0377],\n        [0.0215],\n        [0.0294],\n        [0.0393],\n        [0.0230],\n        [0.0424],\n        [0.0198],\n        [0.0308],\n        [0.0345],\n        [0.0304],\n        [0.0258],\n        [0.0251],\n        [0.0324],\n        [0.0273],\n        [0.0357],\n        [0.0529],\n        [0.0261],\n        [0.0333],\n        [0.0391],\n        [0.0328],\n        [0.0423],\n        [0.0421],\n        [0.0291],\n        [0.0281],\n        [0.0328],\n        [0.0412],\n        [0.0223],\n        [0.0352],\n        [0.0454],\n        [0.0333],\n        [0.0328],\n        [0.0306],\n        [0.0299],\n        [0.0437],\n        [0.0363],\n        [0.0165],\n        [0.0265],\n        [0.0568],\n        [0.0377],\n        [0.0251],\n        [0.0223]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956125.1420593}]}, "version": 173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.1431043}]}, "version": 174}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.16050720214844, "step": null, "ts": 1644956125.144259}]}, "version": 175}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4371557831764221, "step": null, "ts": 1644956125.244148}]}, "version": 176}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.62890625, "step": null, "ts": 1644956125.2482264}]}, "version": 177}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.4467088580131531, "step": null, "ts": 1644956125.7285895}]}, "version": 178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8752e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956125.7376194}]}, "version": 179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.7386749}]}, "version": 180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0720e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956125.740215}]}, "version": 181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.7412996}]}, "version": 182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.7612e-06, 2.0109e-06, 4.1376e-06,  ..., 5.4826e-06, 2.2761e-06,\n         3.4101e-06],\n        [4.3783e-06, 2.7807e-06, 3.5292e-06,  ..., 3.5259e-06, 2.9312e-06,\n         2.6263e-06],\n        [6.4287e-06, 2.0704e-06, 3.3830e-06,  ..., 3.0911e-06, 2.5759e-06,\n         2.9539e-06],\n        ...,\n        [5.5392e-06, 1.6220e-06, 3.0658e-06,  ..., 2.1782e-06, 2.6617e-06,\n         2.5700e-06],\n        [1.1597e-05, 9.4241e-07, 1.7146e-06,  ..., 1.3654e-06, 1.7344e-06,\n         2.2129e-06],\n        [7.2048e-06, 9.1593e-07, 1.9214e-06,  ..., 3.0458e-06, 1.5946e-06,\n         2.8645e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956125.7438655}]}, "version": 183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.7447472}]}, "version": 184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0325],\n        [0.0233],\n        [0.0135],\n        [0.0359],\n        [0.0359],\n        [0.0294],\n        [0.0354],\n        [0.0332],\n        [0.0333],\n        [0.0280],\n        [0.0467],\n        [0.0253],\n        [0.0769],\n        [0.0280],\n        [0.0260],\n        [0.0320],\n        [0.0213],\n        [0.0268],\n        [0.0468],\n        [0.0226],\n        [0.0239],\n        [0.0345],\n        [0.0486],\n        [0.0377],\n        [0.0265],\n        [0.0696],\n        [0.0391],\n        [0.0401],\n        [0.0286],\n        [0.0371],\n        [0.0365],\n        [0.0209],\n        [0.0272],\n        [0.0202],\n        [0.0214],\n        [0.0247],\n        [0.0456],\n        [0.0293],\n        [0.0169],\n        [0.0244],\n        [0.0423],\n        [0.0300]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956125.747765}]}, "version": 185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956125.7487185}]}, "version": 186}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.67575073242188, "step": null, "ts": 1644956125.7499604}]}, "version": 187}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19878487288951874, "step": null, "ts": 1644956125.8382132}]}, "version": 188}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.911066055297852, "step": null, "ts": 1644956125.84498}]}, "version": 189}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8735694885253906, "step": null, "ts": 1644956126.3240402}]}, "version": 190}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4253e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956126.3321812}]}, "version": 191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.337299}]}, "version": 192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.0905e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956126.3384824}]}, "version": 193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.3390207}]}, "version": 194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3773e-06, 2.1775e-06, 3.3517e-06,  ..., 2.3033e-06, 3.3539e-06,\n         3.5050e-06],\n        [4.5202e-06, 1.5202e-06, 2.0388e-06,  ..., 5.1585e-06, 2.8530e-06,\n         2.7021e-06],\n        [6.3702e-06, 1.3819e-06, 2.0451e-06,  ..., 5.1994e-06, 3.2833e-06,\n         3.4418e-06],\n        ...,\n        [3.1465e-06, 3.1871e-06, 1.8528e-06,  ..., 3.8427e-06, 3.1005e-06,\n         2.0295e-06],\n        [4.7783e-06, 1.2704e-06, 3.1241e-06,  ..., 2.6870e-06, 3.3402e-06,\n         7.1009e-06],\n        [3.5455e-06, 1.9268e-06, 3.5588e-06,  ..., 2.6846e-06, 3.6184e-06,\n         3.6962e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956126.3411686}]}, "version": 195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.3417304}]}, "version": 196}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0270],\n        [0.0271],\n        [0.0347],\n        [0.0363],\n        [0.0220],\n        [0.0254],\n        [0.0278],\n        [0.0280],\n        [0.0514],\n        [0.0424],\n        [0.0275],\n        [0.0256],\n        [0.0390],\n        [0.0271],\n        [0.0489],\n        [0.0332],\n        [0.0218],\n        [0.0386],\n        [0.0413],\n        [0.0371],\n        [0.0484],\n        [0.0306],\n        [0.0254],\n        [0.0386],\n        [0.0348],\n        [0.0201],\n        [0.0588],\n        [0.0376],\n        [0.0219],\n        [0.0396],\n        [0.0347],\n        [0.0190],\n        [0.0216],\n        [0.0270],\n        [0.0311],\n        [0.0282],\n        [0.0391],\n        [0.0421],\n        [0.0337],\n        [0.0228],\n        [0.0390],\n        [0.0378]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956126.3443968}]}, "version": 197}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.3493874}]}, "version": 198}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.30079650878906, "step": null, "ts": 1644956126.3505478}]}, "version": 199}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29908090829849243, "step": null, "ts": 1644956126.4385767}]}, "version": 200}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.709577560424805, "step": null, "ts": 1644956126.4532194}]}, "version": 201}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8777305483818054, "step": null, "ts": 1644956126.9102452}]}, "version": 202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4144e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956126.9245172}]}, "version": 203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.9323654}]}, "version": 204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1533e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956126.9339008}]}, "version": 205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.934939}]}, "version": 206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[9.5790e-06, 1.2530e-06, 2.8744e-06,  ..., 2.6441e-06, 2.5883e-06,\n         4.3568e-06],\n        [3.5971e-06, 1.9635e-06, 2.5873e-06,  ..., 2.5195e-06, 2.5820e-06,\n         2.7713e-06],\n        [3.8659e-06, 2.7112e-06, 2.7890e-06,  ..., 2.2283e-06, 5.0090e-06,\n         1.5812e-06],\n        ...,\n        [8.1012e-06, 1.0850e-06, 1.7545e-06,  ..., 2.6042e-06, 1.6227e-06,\n         2.3022e-06],\n        [3.5730e-06, 1.4127e-06, 3.7377e-06,  ..., 2.5440e-06, 2.8786e-06,\n         3.1283e-06],\n        [4.7333e-06, 1.7922e-06, 2.9433e-06,  ..., 2.8974e-06, 3.3633e-06,\n         3.6666e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956126.9373982}]}, "version": 207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.938362}]}, "version": 208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0316],\n        [0.0307],\n        [0.0317],\n        [0.0872],\n        [0.0370],\n        [0.0303],\n        [0.0366],\n        [0.0273],\n        [0.0304],\n        [0.0240],\n        [0.0470],\n        [0.0352],\n        [0.0338],\n        [0.0365],\n        [0.0158],\n        [0.0501],\n        [0.0210],\n        [0.0357],\n        [0.0334],\n        [0.0691],\n        [0.0276],\n        [0.0388],\n        [0.0266],\n        [0.0245],\n        [0.0277],\n        [0.0299],\n        [0.0345],\n        [0.0197],\n        [0.0314],\n        [0.0230],\n        [0.0289],\n        [0.0272],\n        [0.0292],\n        [0.0527],\n        [0.0258],\n        [0.0221],\n        [0.0201],\n        [0.0292],\n        [0.0243],\n        [0.0282],\n        [0.0371],\n        [0.0402]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956126.941547}]}, "version": 209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956126.9427743}]}, "version": 210}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.23463439941406, "step": null, "ts": 1644956126.9439902}]}, "version": 211}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38284701108932495, "step": null, "ts": 1644956127.032397}]}, "version": 212}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.759143829345703, "step": null, "ts": 1644956127.0450196}]}, "version": 213}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.588 (0.588)\tDT 0.000 (0.000)\tS@1 90.476 (90.476)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956127.2895987}]}, "version": 214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956127.290663}]}, "version": 215}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1661700010299683, "step": null, "ts": 1644956127.5223188}]}, "version": 216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1917e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956127.5307627}]}, "version": 217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956127.5397248}]}, "version": 218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.0509e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956127.541213}]}, "version": 219}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956127.5421379}]}, "version": 220}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.0097e-06, 1.4148e-06, 4.9182e-06,  ..., 1.9360e-06, 1.8304e-06,\n         4.1188e-06],\n        [4.1950e-06, 2.5451e-06, 2.9335e-06,  ..., 2.7080e-06, 2.6609e-06,\n         3.0782e-06],\n        [4.2363e-06, 1.6859e-06, 2.6242e-06,  ..., 3.0398e-06, 2.7959e-06,\n         3.4623e-06],\n        ...,\n        [3.8606e-06, 2.6591e-06, 2.7515e-06,  ..., 3.1358e-06, 2.5260e-06,\n         2.8516e-06],\n        [6.6087e-06, 1.6852e-06, 3.9485e-06,  ..., 3.7643e-06, 2.4705e-06,\n         4.4587e-06],\n        [5.2103e-06, 1.9778e-06, 3.1265e-06,  ..., 2.0379e-06, 3.9311e-06,\n         2.4462e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956127.5444293}]}, "version": 221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956127.5453656}]}, "version": 222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0212],\n        [0.0329],\n        [0.0358],\n        [0.0392],\n        [0.0349],\n        [0.0390],\n        [0.0256],\n        [0.0326],\n        [0.0353],\n        [0.0312],\n        [0.0313],\n        [0.0463],\n        [0.0261],\n        [0.0208],\n        [0.0407],\n        [0.0342],\n        [0.0295],\n        [0.0187],\n        [0.0309],\n        [0.0326],\n        [0.0385],\n        [0.0301],\n        [0.0263],\n        [0.0398],\n        [0.0234],\n        [0.0451],\n        [0.0261],\n        [0.0268],\n        [0.0421],\n        [0.0313],\n        [0.0370],\n        [0.0512],\n        [0.0355],\n        [0.0271],\n        [0.0333],\n        [0.0246],\n        [0.0348],\n        [0.0491],\n        [0.0238],\n        [0.0283],\n        [0.0328],\n        [0.0244]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956127.548435}]}, "version": 223}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956127.552268}]}, "version": 224}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.7039031982422, "step": null, "ts": 1644956127.553425}]}, "version": 225}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18519705533981323, "step": null, "ts": 1644956127.642039}]}, "version": 226}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.730284690856934, "step": null, "ts": 1644956127.654232}]}, "version": 227}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7115516662597656, "step": null, "ts": 1644956128.1317356}]}, "version": 228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4027e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956128.1399848}]}, "version": 229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.141041}]}, "version": 230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.7192e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956128.1425173}]}, "version": 231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.1435127}]}, "version": 232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.7432e-06, 1.0079e-06, 4.7263e-06,  ..., 3.6046e-06, 3.9155e-06,\n         1.7815e-06],\n        [6.0123e-06, 1.7378e-06, 2.9705e-06,  ..., 3.7153e-06, 2.4367e-06,\n         2.7631e-06],\n        [4.6226e-06, 2.6427e-06, 2.6207e-06,  ..., 3.3007e-06, 2.4820e-06,\n         2.6280e-06],\n        ...,\n        [3.8382e-06, 1.9654e-06, 1.5577e-06,  ..., 2.7611e-06, 4.4853e-06,\n         3.2730e-06],\n        [8.2111e-06, 1.1586e-06, 2.8019e-06,  ..., 3.0122e-06, 5.3204e-06,\n         4.0817e-06],\n        [4.3752e-06, 1.7755e-06, 2.6190e-06,  ..., 3.9539e-06, 2.6188e-06,\n         2.4421e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956128.1460962}]}, "version": 233}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.1471276}]}, "version": 234}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.1122],\n        [0.0280],\n        [0.0251],\n        [0.0336],\n        [0.0167],\n        [0.0220],\n        [0.0530],\n        [0.0297],\n        [0.0470],\n        [0.0361],\n        [0.0368],\n        [0.0451],\n        [0.0238],\n        [0.0113],\n        [0.0177],\n        [0.0217],\n        [0.0261],\n        [0.0417],\n        [0.0400],\n        [0.0188],\n        [0.0228],\n        [0.0414],\n        [0.0189],\n        [0.0272],\n        [0.0437],\n        [0.0369],\n        [0.0479],\n        [0.0409],\n        [0.0329],\n        [0.0339],\n        [0.0336],\n        [0.0364],\n        [0.0325],\n        [0.0439],\n        [0.0192],\n        [0.0379],\n        [0.0281],\n        [0.0295],\n        [0.0231],\n        [0.0301],\n        [0.0360],\n        [0.0418]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956128.1501808}]}, "version": 235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.153614}]}, "version": 236}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.18325805664062, "step": null, "ts": 1644956128.1550553}]}, "version": 237}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.26593178510665894, "step": null, "ts": 1644956128.243283}]}, "version": 238}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.801610946655273, "step": null, "ts": 1644956128.256722}]}, "version": 239}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6423642039299011, "step": null, "ts": 1644956128.7328126}]}, "version": 240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9103e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956128.7516418}]}, "version": 241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.752678}]}, "version": 242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.1414e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956128.7540953}]}, "version": 243}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.7549388}]}, "version": 244}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.5216e-06, 2.0838e-06, 1.9843e-06,  ..., 3.1712e-06, 2.4872e-06,\n         3.4254e-06],\n        [3.2530e-06, 1.4551e-06, 2.5154e-06,  ..., 1.9411e-06, 3.7226e-06,\n         3.1856e-06],\n        [4.4273e-06, 2.1054e-06, 3.0957e-06,  ..., 3.7323e-06, 1.9493e-06,\n         3.3775e-06],\n        ...,\n        [4.8941e-06, 1.1336e-06, 3.0533e-06,  ..., 1.8950e-06, 4.8842e-06,\n         2.0777e-06],\n        [4.4273e-06, 2.0743e-06, 3.9594e-06,  ..., 2.6335e-06, 3.6112e-06,\n         2.5300e-06],\n        [3.7657e-06, 1.8510e-06, 2.3418e-06,  ..., 3.5295e-06, 2.4819e-06,\n         3.1542e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956128.757313}]}, "version": 245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.7582946}]}, "version": 246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0387],\n        [0.0466],\n        [0.0190],\n        [0.0426],\n        [0.0619],\n        [0.0254],\n        [0.0460],\n        [0.1141],\n        [0.0538],\n        [0.0343],\n        [0.0362],\n        [0.0159],\n        [0.0302],\n        [0.0279],\n        [0.0389],\n        [0.0200],\n        [0.0284],\n        [0.0303],\n        [0.0321],\n        [0.0255],\n        [0.0278],\n        [0.0352],\n        [0.0350],\n        [0.0260],\n        [0.0328],\n        [0.0190],\n        [0.0584],\n        [0.0163],\n        [0.0158],\n        [0.0236],\n        [0.0205],\n        [0.0170],\n        [0.0380],\n        [0.0306],\n        [0.0479],\n        [0.0417],\n        [0.0250],\n        [0.0268],\n        [0.0257],\n        [0.0236],\n        [0.0393],\n        [0.0527]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956128.7614477}]}, "version": 247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956128.7625144}]}, "version": 248}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.13108825683594, "step": null, "ts": 1644956128.764008}]}, "version": 249}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2825164198875427, "step": null, "ts": 1644956128.8490562}]}, "version": 250}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.855091094970703, "step": null, "ts": 1644956128.865124}]}, "version": 251}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8185580968856812, "step": null, "ts": 1644956129.3552856}]}, "version": 252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5723e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956129.3637276}]}, "version": 253}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.3647642}]}, "version": 254}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.3568e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956129.3662586}]}, "version": 255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.3673708}]}, "version": 256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.8322e-06, 2.9345e-06, 2.1117e-06,  ..., 3.8090e-06, 2.5341e-06,\n         2.8519e-06],\n        [3.3658e-06, 2.4104e-06, 3.3836e-06,  ..., 1.7267e-06, 4.9891e-06,\n         2.8393e-06],\n        [5.0726e-06, 1.4414e-06, 4.0576e-06,  ..., 2.1232e-06, 2.1517e-06,\n         2.6639e-06],\n        ...,\n        [6.6272e-06, 1.3904e-06, 1.8760e-06,  ..., 1.6567e-06, 3.0488e-06,\n         2.6459e-06],\n        [4.8814e-06, 2.0287e-06, 2.6376e-06,  ..., 4.9121e-06, 2.4526e-06,\n         2.4532e-06],\n        [4.6840e-06, 1.5075e-06, 2.6405e-06,  ..., 3.5553e-06, 3.1809e-06,\n         2.4346e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956129.3700285}]}, "version": 257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.3718665}]}, "version": 258}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0248],\n        [0.0225],\n        [0.0404],\n        [0.0538],\n        [0.0287],\n        [0.0268],\n        [0.0297],\n        [0.0349],\n        [0.0433],\n        [0.0421],\n        [0.0570],\n        [0.0226],\n        [0.0283],\n        [0.0357],\n        [0.0230],\n        [0.0172],\n        [0.0399],\n        [0.0287],\n        [0.0270],\n        [0.0309],\n        [0.0353],\n        [0.0128],\n        [0.0318],\n        [0.0300],\n        [0.0416],\n        [0.0569],\n        [0.0252],\n        [0.0234],\n        [0.0315],\n        [0.0405],\n        [0.0343],\n        [0.0228],\n        [0.0297],\n        [0.0333],\n        [0.0401],\n        [0.0237],\n        [0.0337],\n        [0.0409],\n        [0.0206],\n        [0.0389],\n        [0.0380],\n        [0.0345]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956129.3747096}]}, "version": 259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.3756168}]}, "version": 260}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.34593200683594, "step": null, "ts": 1644956129.3769271}]}, "version": 261}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2794089615345001, "step": null, "ts": 1644956129.4659846}]}, "version": 262}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.811773300170898, "step": null, "ts": 1644956129.476017}]}, "version": 263}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8446807265281677, "step": null, "ts": 1644956129.9377315}]}, "version": 264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1336e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956129.9486897}]}, "version": 265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.9543405}]}, "version": 266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9602e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956129.9556468}]}, "version": 267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.9562953}]}, "version": 268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.2796e-06, 1.6838e-06, 2.0412e-06,  ..., 2.6715e-06, 2.3510e-06,\n         3.5980e-06],\n        [4.2532e-06, 2.9619e-06, 2.1923e-06,  ..., 3.6593e-06, 3.4091e-06,\n         2.7234e-06],\n        [4.8724e-06, 1.8138e-06, 1.4421e-06,  ..., 1.5906e-06, 2.8746e-06,\n         3.1432e-06],\n        ...,\n        [6.8690e-06, 9.5966e-07, 9.1860e-06,  ..., 2.6449e-06, 7.2554e-06,\n         1.1693e-06],\n        [6.0603e-06, 2.3815e-06, 3.2350e-06,  ..., 6.2208e-06, 2.5294e-06,\n         3.2140e-06],\n        [4.1652e-06, 2.1866e-06, 2.7154e-06,  ..., 3.3420e-06, 3.2144e-06,\n         3.2309e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956129.9584398}]}, "version": 269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.9619336}]}, "version": 270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0432],\n        [0.0382],\n        [0.0226],\n        [0.0362],\n        [0.0429],\n        [0.0272],\n        [0.0339],\n        [0.0272],\n        [0.0215],\n        [0.0265],\n        [0.0313],\n        [0.0226],\n        [0.0776],\n        [0.0396],\n        [0.0239],\n        [0.0377],\n        [0.0266],\n        [0.0281],\n        [0.0226],\n        [0.0282],\n        [0.0565],\n        [0.0382],\n        [0.0286],\n        [0.0153],\n        [0.0316],\n        [0.0158],\n        [0.0534],\n        [0.0528],\n        [0.0339],\n        [0.0422],\n        [0.0201],\n        [0.0276],\n        [0.0221],\n        [0.0291],\n        [0.0269],\n        [0.0171],\n        [0.0265],\n        [0.0365],\n        [0.0308],\n        [0.0818],\n        [0.0237],\n        [0.0273]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956129.9648085}]}, "version": 271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956129.9657447}]}, "version": 272}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.77284240722656, "step": null, "ts": 1644956129.9669402}]}, "version": 273}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18837934732437134, "step": null, "ts": 1644956130.0601802}]}, "version": 274}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.724830627441406, "step": null, "ts": 1644956130.0679233}]}, "version": 275}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7663546204566956, "step": null, "ts": 1644956130.5339863}]}, "version": 276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6749e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956130.5415468}]}, "version": 277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956130.542508}]}, "version": 278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8546e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956130.544001}]}, "version": 279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956130.5449433}]}, "version": 280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.4552e-06, 3.1541e-06, 2.4774e-06,  ..., 3.1216e-06, 2.6422e-06,\n         2.3869e-06],\n        [4.8060e-06, 1.4468e-06, 2.2898e-06,  ..., 3.3498e-06, 4.2431e-06,\n         2.5956e-06],\n        [3.1540e-06, 8.2553e-07, 2.2546e-06,  ..., 3.6532e-06, 2.5868e-06,\n         3.6939e-06],\n        ...,\n        [7.5861e-06, 1.8544e-06, 2.8260e-06,  ..., 3.3773e-06, 1.9874e-06,\n         1.9489e-06],\n        [6.2339e-06, 1.4949e-06, 3.4373e-06,  ..., 1.4438e-06, 2.3709e-06,\n         3.7218e-06],\n        [4.9539e-06, 1.7227e-06, 1.8132e-06,  ..., 3.5183e-06, 2.4123e-06,\n         3.2536e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956130.5473368}]}, "version": 281}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956130.5486016}]}, "version": 282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0167],\n        [0.0390],\n        [0.0416],\n        [0.0347],\n        [0.0399],\n        [0.0250],\n        [0.0310],\n        [0.0333],\n        [0.0245],\n        [0.0405],\n        [0.0594],\n        [0.0438],\n        [0.0341],\n        [0.0321],\n        [0.0400],\n        [0.0366],\n        [0.0274],\n        [0.0257],\n        [0.0308],\n        [0.0335],\n        [0.0173],\n        [0.0360],\n        [0.0245],\n        [0.0320],\n        [0.0384],\n        [0.0297],\n        [0.0444],\n        [0.0182],\n        [0.0317],\n        [0.0405],\n        [0.0193],\n        [0.0483],\n        [0.0384],\n        [0.0342],\n        [0.0444],\n        [0.0330],\n        [0.0219],\n        [0.0290],\n        [0.0256],\n        [0.0346],\n        [0.0236],\n        [0.0387]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956130.5518105}]}, "version": 283}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956130.5552034}]}, "version": 284}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.38853454589844, "step": null, "ts": 1644956130.5563335}]}, "version": 285}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2777021527290344, "step": null, "ts": 1644956130.6553385}]}, "version": 286}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.576826095581055, "step": null, "ts": 1644956130.6624267}]}, "version": 287}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5561956167221069, "step": null, "ts": 1644956131.1300836}]}, "version": 288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8593e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956131.1319053}]}, "version": 289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.1329033}]}, "version": 290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.0381e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956131.1342044}]}, "version": 291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.135163}]}, "version": 292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.1037e-06, 1.7886e-06, 1.8279e-06,  ..., 2.8163e-06, 3.8374e-06,\n         3.8199e-06],\n        [4.4362e-06, 1.6939e-06, 1.8927e-06,  ..., 3.7653e-06, 2.3201e-06,\n         3.6412e-06],\n        [3.8771e-06, 1.4182e-06, 2.6444e-06,  ..., 2.6966e-06, 2.8243e-06,\n         1.7930e-06],\n        ...,\n        [6.8124e-06, 2.5457e-06, 2.6206e-06,  ..., 2.4276e-06, 2.9457e-06,\n         2.6949e-06],\n        [4.3955e-06, 1.7771e-06, 3.2165e-06,  ..., 2.3086e-06, 3.0370e-06,\n         3.3090e-06],\n        [3.8045e-06, 1.9754e-06, 3.6386e-06,  ..., 3.1133e-06, 4.0164e-06,\n         1.9149e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956131.1375182}]}, "version": 293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.1385567}]}, "version": 294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0337],\n        [0.0238],\n        [0.0293],\n        [0.0408],\n        [0.0363],\n        [0.0265],\n        [0.0245],\n        [0.0301],\n        [0.0379],\n        [0.0239],\n        [0.0376],\n        [0.0408],\n        [0.0367],\n        [0.0568],\n        [0.0295],\n        [0.0375],\n        [0.0245],\n        [0.0183],\n        [0.0246],\n        [0.0433],\n        [0.0318],\n        [0.0236],\n        [0.0309],\n        [0.0170],\n        [0.0419],\n        [0.0342],\n        [0.0323],\n        [0.0337],\n        [0.0469],\n        [0.0462],\n        [0.0168],\n        [0.0397],\n        [0.0448],\n        [0.0587],\n        [0.0402],\n        [0.0355],\n        [0.0221],\n        [0.0335],\n        [0.0326],\n        [0.0332],\n        [0.0285],\n        [0.0340]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956131.1418824}]}, "version": 295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.1428163}]}, "version": 296}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.885986328125, "step": null, "ts": 1644956131.144123}]}, "version": 297}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29699212312698364, "step": null, "ts": 1644956131.2384932}]}, "version": 298}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.72066593170166, "step": null, "ts": 1644956131.2577941}]}, "version": 299}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7657560110092163, "step": null, "ts": 1644956131.9688642}]}, "version": 300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7985e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956131.9838922}]}, "version": 301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.989502}]}, "version": 302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.1204e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956131.9976628}]}, "version": 303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956131.9987419}]}, "version": 304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.8479e-06, 1.9296e-06, 2.3936e-06,  ..., 2.0447e-06, 4.5078e-06,\n         3.6228e-06],\n        [8.0849e-06, 2.1649e-06, 2.8636e-06,  ..., 3.5092e-06, 1.7216e-06,\n         2.1035e-06],\n        [5.4941e-06, 2.0108e-06, 2.5772e-06,  ..., 3.4869e-06, 2.1252e-06,\n         3.3730e-06],\n        ...,\n        [5.1677e-06, 2.6005e-06, 3.3079e-06,  ..., 2.5798e-06, 3.3756e-06,\n         3.6783e-06],\n        [5.4517e-06, 2.3257e-06, 3.0724e-06,  ..., 5.1008e-06, 2.5635e-06,\n         2.9027e-06],\n        [5.0319e-06, 2.0402e-06, 2.4836e-06,  ..., 2.1412e-06, 4.4977e-06,\n         3.0017e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956132.0016139}]}, "version": 305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.0027127}]}, "version": 306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0285],\n        [0.0368],\n        [0.0286],\n        [0.0203],\n        [0.0181],\n        [0.0304],\n        [0.0329],\n        [0.0241],\n        [0.0325],\n        [0.0361],\n        [0.0397],\n        [0.0333],\n        [0.0410],\n        [0.0456],\n        [0.0415],\n        [0.0433],\n        [0.0405],\n        [0.0270],\n        [0.0209],\n        [0.0221],\n        [0.0309],\n        [0.0288],\n        [0.0222],\n        [0.0257],\n        [0.0169],\n        [0.0473],\n        [0.0315],\n        [0.0293],\n        [0.0395],\n        [0.0258],\n        [0.0538],\n        [0.0371],\n        [0.0426],\n        [0.0354],\n        [0.0206],\n        [0.0338],\n        [0.0980],\n        [0.0277],\n        [0.0311],\n        [0.0234],\n        [0.0326],\n        [0.0216]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956132.0060885}]}, "version": 307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.0069785}]}, "version": 308}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.08799743652344, "step": null, "ts": 1644956132.0083594}]}, "version": 309}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3938589096069336, "step": null, "ts": 1644956132.1076694}]}, "version": 310}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.755021095275879, "step": null, "ts": 1644956132.1115496}]}, "version": 311}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6978300213813782, "step": null, "ts": 1644956132.5605762}]}, "version": 312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1852e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956132.5725608}]}, "version": 313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.5735483}]}, "version": 314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.5176e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956132.5751073}]}, "version": 315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.5761216}]}, "version": 316}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3350e-06, 2.2402e-06, 2.4869e-06,  ..., 2.1779e-06, 3.4119e-06,\n         2.3323e-06],\n        [4.6640e-06, 2.6644e-06, 2.6716e-06,  ..., 1.6776e-06, 3.9860e-06,\n         2.4697e-06],\n        [5.2516e-06, 2.0971e-06, 4.3039e-06,  ..., 4.6148e-06, 1.6431e-06,\n         2.7313e-06],\n        ...,\n        [6.4995e-06, 2.5571e-06, 3.5900e-06,  ..., 3.4000e-06, 3.3634e-06,\n         2.4521e-06],\n        [6.0747e-06, 1.4830e-06, 2.8693e-06,  ..., 2.7174e-06, 2.0549e-06,\n         3.1044e-06],\n        [4.0938e-06, 2.0563e-06, 3.0889e-06,  ..., 2.9566e-06, 1.6260e-06,\n         3.8121e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956132.578439}]}, "version": 317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.5794456}]}, "version": 318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0419],\n        [0.0324],\n        [0.0322],\n        [0.0246],\n        [0.0441],\n        [0.0297],\n        [0.0352],\n        [0.0358],\n        [0.0257],\n        [0.0207],\n        [0.0408],\n        [0.0443],\n        [0.0147],\n        [0.0335],\n        [0.0297],\n        [0.0250],\n        [0.0501],\n        [0.0299],\n        [0.0378],\n        [0.0284],\n        [0.0290],\n        [0.0438],\n        [0.0305],\n        [0.0328],\n        [0.0332],\n        [0.0263],\n        [0.0232],\n        [0.0259],\n        [0.0331],\n        [0.0439],\n        [0.0385],\n        [0.0359],\n        [0.0203],\n        [0.0335],\n        [0.0250],\n        [0.1218],\n        [0.0168],\n        [0.0328],\n        [0.0295],\n        [0.0299],\n        [0.0220],\n        [0.0244]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956132.5825987}]}, "version": 319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956132.583584}]}, "version": 320}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.00912475585938, "step": null, "ts": 1644956132.585068}]}, "version": 321}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.42228972911834717, "step": null, "ts": 1644956132.6766157}]}, "version": 322}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.856247901916504, "step": null, "ts": 1644956132.685354}]}, "version": 323}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8129492402076721, "step": null, "ts": 1644956133.1364202}]}, "version": 324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4495e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956133.1450102}]}, "version": 325}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.1461127}]}, "version": 326}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5145e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956133.1474848}]}, "version": 327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.1484199}]}, "version": 328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.7436e-06, 1.8909e-06, 2.9561e-06,  ..., 2.6797e-06, 3.8024e-06,\n         3.4802e-06],\n        [3.4392e-06, 2.3930e-06, 2.4319e-06,  ..., 2.7137e-06, 4.0745e-06,\n         2.2516e-06],\n        [8.0887e-06, 1.3719e-06, 1.8692e-06,  ..., 4.7473e-06, 2.8153e-06,\n         3.8375e-06],\n        ...,\n        [5.5563e-06, 1.6260e-06, 3.5982e-06,  ..., 4.2149e-06, 2.0348e-06,\n         4.1063e-06],\n        [1.4495e-05, 1.0623e-06, 3.3896e-06,  ..., 1.0779e-06, 1.6411e-06,\n         1.3228e-06],\n        [4.5603e-06, 1.2663e-06, 1.8693e-06,  ..., 2.3921e-06, 3.8169e-06,\n         4.6730e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956133.1509032}]}, "version": 329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.151839}]}, "version": 330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0377],\n        [0.0314],\n        [0.0380],\n        [0.0313],\n        [0.0404],\n        [0.0256],\n        [0.0396],\n        [0.0276],\n        [0.0449],\n        [0.0207],\n        [0.0215],\n        [0.0203],\n        [0.0228],\n        [0.0407],\n        [0.0415],\n        [0.0182],\n        [0.0335],\n        [0.0349],\n        [0.0560],\n        [0.0218],\n        [0.0403],\n        [0.0448],\n        [0.0372],\n        [0.0257],\n        [0.0289],\n        [0.0279],\n        [0.0496],\n        [0.0352],\n        [0.0293],\n        [0.0238],\n        [0.0317],\n        [0.0235],\n        [0.0302],\n        [0.0295],\n        [0.0316],\n        [0.0279],\n        [0.1150],\n        [0.0490],\n        [0.0270],\n        [0.0265],\n        [0.0142],\n        [0.0113]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956133.15486}]}, "version": 331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.1607866}]}, "version": 332}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.66432189941406, "step": null, "ts": 1644956133.162327}]}, "version": 333}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21753357350826263, "step": null, "ts": 1644956133.2483497}]}, "version": 334}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.7516450881958, "step": null, "ts": 1644956133.25527}]}, "version": 335}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.566 (0.566)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956133.4998398}]}, "version": 336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.5010028}]}, "version": 337}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0312994718551636, "step": null, "ts": 1644956133.7423575}]}, "version": 338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2772e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956133.7505476}]}, "version": 339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.7515953}]}, "version": 340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.6379e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956133.7530668}]}, "version": 341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.754108}]}, "version": 342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.4309e-06, 2.2636e-06, 5.4450e-06,  ..., 2.4716e-06, 2.0807e-06,\n         3.6580e-06],\n        [6.6381e-06, 2.4603e-06, 2.2008e-06,  ..., 2.4039e-06, 2.6030e-06,\n         2.8054e-06],\n        [5.0549e-06, 2.1986e-06, 2.7001e-06,  ..., 2.3381e-06, 3.9486e-06,\n         6.0497e-06],\n        ...,\n        [4.2535e-06, 1.8410e-06, 3.2098e-06,  ..., 1.9613e-06, 3.7962e-06,\n         3.5853e-06],\n        [4.6927e-06, 2.0201e-06, 2.2234e-06,  ..., 2.7854e-06, 3.0246e-06,\n         2.7126e-06],\n        [5.0246e-06, 1.7194e-06, 2.6558e-06,  ..., 3.2747e-06, 2.7837e-06,\n         3.4861e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956133.7563903}]}, "version": 343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.7573617}]}, "version": 344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0290],\n        [0.0411],\n        [0.0256],\n        [0.0275],\n        [0.0304],\n        [0.0294],\n        [0.0298],\n        [0.0223],\n        [0.0408],\n        [0.0484],\n        [0.0306],\n        [0.0177],\n        [0.0250],\n        [0.0197],\n        [0.0406],\n        [0.0256],\n        [0.0345],\n        [0.0296],\n        [0.0332],\n        [0.0460],\n        [0.0242],\n        [0.0288],\n        [0.0322],\n        [0.0198],\n        [0.0309],\n        [0.0312],\n        [0.0560],\n        [0.0419],\n        [0.0404],\n        [0.0348],\n        [0.0570],\n        [0.0150],\n        [0.0288],\n        [0.0332],\n        [0.0382],\n        [0.0301],\n        [0.0421],\n        [0.0451],\n        [0.0246],\n        [0.0346],\n        [0.0297],\n        [0.0417]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956133.7604725}]}, "version": 345}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956133.761292}]}, "version": 346}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.80763244628906, "step": null, "ts": 1644956133.7624314}]}, "version": 347}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5515051484107971, "step": null, "ts": 1644956133.8536942}]}, "version": 348}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.713589668273926, "step": null, "ts": 1644956133.8645144}]}, "version": 349}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956134.1850448}]}, "version": 350}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.0583648681640625, "step": null, "ts": 1644956134.1850448}]}, "version": 351}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644956134.1850448}]}, "version": 352}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644956134.1850448}]}, "version": 353}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5437225699424744, "step": null, "ts": 1644956134.349744}]}, "version": 354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.6734e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956134.3586676}]}, "version": 355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.3597004}]}, "version": 356}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5962e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956134.3611948}]}, "version": 357}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.3621588}]}, "version": 358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.3286e-06, 2.7351e-06, 1.7563e-06,  ..., 2.7879e-06, 4.0988e-06,\n         2.4986e-06],\n        [3.4452e-06, 1.3253e-06, 2.9219e-06,  ..., 2.9432e-06, 3.9646e-06,\n         3.7594e-06],\n        [4.0367e-06, 1.4472e-06, 1.9554e-06,  ..., 2.5455e-06, 3.6800e-06,\n         3.1521e-06],\n        ...,\n        [8.4673e-06, 1.1744e-06, 1.1070e-06,  ..., 1.3977e-06, 2.0889e-06,\n         3.5073e-06],\n        [5.4101e-06, 1.1761e-06, 6.3705e-06,  ..., 2.1178e-06, 2.0344e-06,\n         3.4394e-06],\n        [2.9817e-06, 2.4340e-06, 2.3084e-06,  ..., 2.8849e-06, 4.3960e-06,\n         3.1241e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956134.3644035}]}, "version": 359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.3652525}]}, "version": 360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0260],\n        [0.0331],\n        [0.0392],\n        [0.0285],\n        [0.0271],\n        [0.0347],\n        [0.0388],\n        [0.0216],\n        [0.0277],\n        [0.0362],\n        [0.0295],\n        [0.0316],\n        [0.0296],\n        [0.0333],\n        [0.0198],\n        [0.0313],\n        [0.0246],\n        [0.0397],\n        [0.0109],\n        [0.0344],\n        [0.0342],\n        [0.0281],\n        [0.0344],\n        [0.0201],\n        [0.0257],\n        [0.0459],\n        [0.0293],\n        [0.0258],\n        [0.0473],\n        [0.0445],\n        [0.0471],\n        [0.0364],\n        [0.0423],\n        [0.0272],\n        [0.0411],\n        [0.0352],\n        [0.0245],\n        [0.0592],\n        [0.0495],\n        [0.0255],\n        [0.0295],\n        [0.0292]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956134.3681328}]}, "version": 361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.3691447}]}, "version": 362}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.01425170898438, "step": null, "ts": 1644956134.3702562}]}, "version": 363}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25448518991470337, "step": null, "ts": 1644956134.4671693}]}, "version": 364}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.726600646972656, "step": null, "ts": 1644956134.4787142}]}, "version": 365}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.974042534828186, "step": null, "ts": 1644956134.9459572}]}, "version": 366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4276e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956134.9595747}]}, "version": 367}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.96057}]}, "version": 368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1547e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956134.9621763}]}, "version": 369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.96319}]}, "version": 370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0263e-06, 2.7736e-06, 2.9885e-06,  ..., 2.6766e-06, 2.5890e-06,\n         3.2590e-06],\n        [4.4899e-06, 1.9244e-06, 5.2585e-06,  ..., 3.8820e-06, 2.9784e-06,\n         2.2616e-06],\n        [3.9763e-06, 6.0999e-07, 4.0124e-06,  ..., 1.0639e-06, 3.5086e-06,\n         2.1983e-06],\n        ...,\n        [3.3875e-06, 1.8278e-06, 2.5501e-06,  ..., 3.6094e-06, 3.1745e-06,\n         3.5364e-06],\n        [5.5369e-06, 2.5485e-06, 2.6691e-06,  ..., 3.0949e-06, 2.6349e-06,\n         4.1341e-06],\n        [7.6824e-06, 1.6335e-06, 2.4926e-06,  ..., 4.0409e-06, 2.4699e-06,\n         3.1057e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956134.9656036}]}, "version": 371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.9667227}]}, "version": 372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0186],\n        [0.0400],\n        [0.0440],\n        [0.0527],\n        [0.0284],\n        [0.0378],\n        [0.0308],\n        [0.0234],\n        [0.0340],\n        [0.0376],\n        [0.0245],\n        [0.0307],\n        [0.0295],\n        [0.0381],\n        [0.0277],\n        [0.0169],\n        [0.0350],\n        [0.0328],\n        [0.0200],\n        [0.0272],\n        [0.0369],\n        [0.0609],\n        [0.0301],\n        [0.0325],\n        [0.0309],\n        [0.0279],\n        [0.0365],\n        [0.0341],\n        [0.0292],\n        [0.0266],\n        [0.0335],\n        [0.0298],\n        [0.0219],\n        [0.0240],\n        [0.0235],\n        [0.0460],\n        [0.0354],\n        [0.0347],\n        [0.0297],\n        [0.0335],\n        [0.0330],\n        [0.0440]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956134.9696887}]}, "version": 373}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956134.970518}]}, "version": 374}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.07772827148438, "step": null, "ts": 1644956134.9720774}]}, "version": 375}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.30886322259902954, "step": null, "ts": 1644956135.0656621}]}, "version": 376}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.675251007080078, "step": null, "ts": 1644956135.0698178}]}, "version": 377}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8365299701690674, "step": null, "ts": 1644956135.5490582}]}, "version": 378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7931e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956135.560359}]}, "version": 379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956135.5656528}]}, "version": 380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.3396e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956135.5669465}]}, "version": 381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956135.5677168}]}, "version": 382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.5179e-06, 1.7461e-06, 5.4358e-06,  ..., 2.4590e-06, 4.1366e-06,\n         2.8573e-06],\n        [6.2263e-06, 2.3614e-06, 4.2134e-06,  ..., 2.8696e-06, 2.4543e-06,\n         2.8374e-06],\n        [4.6053e-06, 3.5212e-06, 9.3361e-07,  ..., 1.3686e-06, 6.1606e-06,\n         9.2846e-07],\n        ...,\n        [4.6599e-06, 2.5139e-06, 4.1836e-06,  ..., 3.0967e-06, 3.1205e-06,\n         2.4545e-06],\n        [3.7712e-06, 1.0990e-06, 1.7638e-06,  ..., 1.1379e-06, 2.3305e-06,\n         4.4707e-06],\n        [4.8867e-06, 1.3202e-06, 2.6766e-06,  ..., 6.9553e-06, 2.7120e-06,\n         2.5304e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956135.5702062}]}, "version": 383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956135.5711417}]}, "version": 384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0331],\n        [0.0406],\n        [0.0358],\n        [0.0336],\n        [0.0400],\n        [0.0367],\n        [0.0362],\n        [0.0237],\n        [0.0470],\n        [0.0360],\n        [0.0303],\n        [0.0225],\n        [0.0260],\n        [0.0321],\n        [0.0320],\n        [0.0330],\n        [0.0321],\n        [0.0247],\n        [0.0213],\n        [0.0318],\n        [0.0398],\n        [0.0376],\n        [0.0409],\n        [0.0332],\n        [0.0245],\n        [0.0249],\n        [0.0209],\n        [0.0214],\n        [0.0346],\n        [0.0364],\n        [0.0356],\n        [0.0444],\n        [0.0319],\n        [0.0306],\n        [0.0287],\n        [0.0342],\n        [0.0501],\n        [0.0333],\n        [0.0518],\n        [0.0224],\n        [0.0483],\n        [0.0249]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956135.5739336}]}, "version": 385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956135.5747025}]}, "version": 386}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.79409790039062, "step": null, "ts": 1644956135.5759387}]}, "version": 387}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5077724456787109, "step": null, "ts": 1644956135.671325}]}, "version": 388}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.776876449584961, "step": null, "ts": 1644956135.6782303}]}, "version": 389}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8185476660728455, "step": null, "ts": 1644956136.152402}]}, "version": 390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9346e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956136.1599805}]}, "version": 391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.1607304}]}, "version": 392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.2174e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956136.1619387}]}, "version": 393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.1626723}]}, "version": 394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.8779e-06, 2.2888e-06, 2.7937e-06,  ..., 4.2477e-06, 3.7136e-06,\n         2.8957e-06],\n        [5.8436e-06, 2.0323e-06, 3.0225e-06,  ..., 3.9879e-06, 2.9173e-06,\n         2.8655e-06],\n        [6.5618e-06, 1.3841e-06, 4.6352e-06,  ..., 2.2849e-06, 3.4941e-06,\n         3.2186e-06],\n        ...,\n        [5.2156e-06, 1.0208e-06, 3.7523e-06,  ..., 2.7601e-06, 3.5876e-06,\n         4.0908e-06],\n        [3.4669e-06, 2.5859e-06, 2.5638e-06,  ..., 3.1406e-06, 3.1063e-06,\n         3.4244e-06],\n        [4.2171e-06, 2.5534e-06, 2.3231e-06,  ..., 1.4398e-06, 5.4442e-06,\n         9.6151e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956136.1649482}]}, "version": 395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.1656687}]}, "version": 396}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0316],\n        [0.0341],\n        [0.0287],\n        [0.0332],\n        [0.0354],\n        [0.0275],\n        [0.0244],\n        [0.0575],\n        [0.0278],\n        [0.0214],\n        [0.0335],\n        [0.0295],\n        [0.0370],\n        [0.0341],\n        [0.0254],\n        [0.0888],\n        [0.0381],\n        [0.0317],\n        [0.0217],\n        [0.0261],\n        [0.0295],\n        [0.0309],\n        [0.0303],\n        [0.0453],\n        [0.0362],\n        [0.0332],\n        [0.0348],\n        [0.0249],\n        [0.0282],\n        [0.0309],\n        [0.0337],\n        [0.0284],\n        [0.0320],\n        [0.0264],\n        [0.0536],\n        [0.0428],\n        [0.0183],\n        [0.0305],\n        [0.0554],\n        [0.0231],\n        [0.0215],\n        [0.0312]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956136.1684396}]}, "version": 397}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.1740572}]}, "version": 398}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.3162841796875, "step": null, "ts": 1644956136.1751606}]}, "version": 399}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27577370405197144, "step": null, "ts": 1644956136.266606}]}, "version": 400}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.724051475524902, "step": null, "ts": 1644956136.274815}]}, "version": 401}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117434144020081, "step": null, "ts": 1644956136.7542362}]}, "version": 402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2515e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956136.76202}]}, "version": 403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.7629805}]}, "version": 404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1398e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956136.7642596}]}, "version": 405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.765156}]}, "version": 406}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.8466e-06, 3.2965e-06, 2.6884e-06,  ..., 2.8638e-06, 2.1354e-06,\n         2.9864e-06],\n        [7.1024e-06, 1.7731e-06, 1.4258e-06,  ..., 2.8214e-06, 3.4311e-06,\n         2.6186e-06],\n        [3.8676e-06, 1.8197e-06, 1.6975e-06,  ..., 3.2159e-06, 2.1131e-06,\n         2.4516e-06],\n        ...,\n        [4.0542e-06, 2.6668e-06, 1.6003e-06,  ..., 1.7254e-06, 2.7078e-06,\n         3.5905e-06],\n        [4.0276e-06, 1.6325e-06, 2.2981e-06,  ..., 3.9143e-06, 2.5683e-06,\n         3.0395e-06],\n        [5.6937e-06, 1.3831e-06, 3.7183e-06,  ..., 3.1836e-06, 3.8172e-06,\n         2.9253e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956136.7674487}]}, "version": 407}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.7680135}]}, "version": 408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0357],\n        [0.0264],\n        [0.0601],\n        [0.0296],\n        [0.0329],\n        [0.0255],\n        [0.0296],\n        [0.0242],\n        [0.0402],\n        [0.0303],\n        [0.0378],\n        [0.0140],\n        [0.0299],\n        [0.0376],\n        [0.0201],\n        [0.0383],\n        [0.0218],\n        [0.0269],\n        [0.0463],\n        [0.0199],\n        [0.0293],\n        [0.1069],\n        [0.0462],\n        [0.0419],\n        [0.0272],\n        [0.0436],\n        [0.0335],\n        [0.0280],\n        [0.0282],\n        [0.0253],\n        [0.0264],\n        [0.0279],\n        [0.0334],\n        [0.0372],\n        [0.0431],\n        [0.0177],\n        [0.0261],\n        [0.0204],\n        [0.0272],\n        [0.0419],\n        [0.0378],\n        [0.0379]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956136.7707665}]}, "version": 409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956136.7714813}]}, "version": 410}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.81124877929688, "step": null, "ts": 1644956136.772922}]}, "version": 411}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3120547831058502, "step": null, "ts": 1644956136.864306}]}, "version": 412}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.720636367797852, "step": null, "ts": 1644956136.885935}]}, "version": 413}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.796909511089325, "step": null, "ts": 1644956137.3598063}]}, "version": 414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5983e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956137.3712587}]}, "version": 415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.3785214}]}, "version": 416}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2972e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956137.3799746}]}, "version": 417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.3810601}]}, "version": 418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.1977e-06, 1.7201e-06, 1.6082e-06,  ..., 8.2015e-07, 1.2321e-06,\n         1.9007e-06],\n        [4.0876e-06, 3.0656e-06, 2.3070e-06,  ..., 2.6954e-06, 5.7445e-06,\n         1.7329e-06],\n        [4.5295e-06, 1.7011e-06, 2.1420e-06,  ..., 3.5924e-06, 2.4859e-06,\n         3.0789e-06],\n        ...,\n        [5.5809e-06, 2.7017e-06, 2.8917e-06,  ..., 3.7899e-06, 3.3408e-06,\n         3.5030e-06],\n        [3.6767e-06, 2.8367e-06, 2.5662e-06,  ..., 2.4989e-06, 3.5037e-06,\n         3.9972e-06],\n        [4.8139e-06, 1.5904e-06, 2.6619e-06,  ..., 3.7812e-06, 3.4195e-06,\n         3.2723e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956137.3833375}]}, "version": 419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.3842418}]}, "version": 420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0177],\n        [0.0361],\n        [0.0293],\n        [0.0114],\n        [0.0234],\n        [0.0216],\n        [0.0199],\n        [0.0352],\n        [0.0397],\n        [0.0235],\n        [0.0224],\n        [0.0352],\n        [0.0301],\n        [0.0468],\n        [0.0435],\n        [0.0325],\n        [0.0237],\n        [0.0324],\n        [0.0175],\n        [0.0288],\n        [0.0239],\n        [0.0388],\n        [0.0376],\n        [0.0286],\n        [0.1237],\n        [0.0470],\n        [0.0327],\n        [0.0347],\n        [0.0330],\n        [0.0511],\n        [0.0390],\n        [0.0288],\n        [0.0346],\n        [0.0175],\n        [0.0388],\n        [0.0204],\n        [0.0310],\n        [0.0324],\n        [0.0338],\n        [0.0301],\n        [0.0283],\n        [0.0314]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956137.3871996}]}, "version": 421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.3882363}]}, "version": 422}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 159.245849609375, "step": null, "ts": 1644956137.3893251}]}, "version": 423}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38608184456825256, "step": null, "ts": 1644956137.4778905}]}, "version": 424}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.773512840270996, "step": null, "ts": 1644956137.501004}]}, "version": 425}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6743407845497131, "step": null, "ts": 1644956137.959659}]}, "version": 426}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0626e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956137.9727087}]}, "version": 427}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.975893}]}, "version": 428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.7165e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956137.9770193}]}, "version": 429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.9779913}]}, "version": 430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.8956e-06, 1.7518e-06, 2.6287e-06,  ..., 1.6885e-06, 3.1397e-06,\n         4.8459e-06],\n        [4.3123e-06, 2.1143e-06, 2.7111e-06,  ..., 2.8731e-06, 3.5657e-06,\n         3.7653e-06],\n        [6.2364e-06, 9.6563e-07, 3.7912e-06,  ..., 2.0365e-06, 3.4850e-06,\n         4.3305e-06],\n        ...,\n        [6.9448e-06, 2.0999e-06, 3.4690e-06,  ..., 2.9828e-06, 1.3225e-06,\n         2.1192e-06],\n        [4.0963e-06, 2.2873e-06, 3.0454e-06,  ..., 4.2850e-06, 3.5391e-06,\n         3.8846e-06],\n        [5.1189e-06, 2.4458e-06, 2.8315e-06,  ..., 3.8474e-06, 2.4670e-06,\n         2.4236e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956137.9802673}]}, "version": 431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.981243}]}, "version": 432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0514],\n        [0.0320],\n        [0.0431],\n        [0.0360],\n        [0.0348],\n        [0.0378],\n        [0.0337],\n        [0.0255],\n        [0.0350],\n        [0.0218],\n        [0.0471],\n        [0.0210],\n        [0.0263],\n        [0.0298],\n        [0.0365],\n        [0.0324],\n        [0.0406],\n        [0.0415],\n        [0.0349],\n        [0.0202],\n        [0.0299],\n        [0.0194],\n        [0.0213],\n        [0.0190],\n        [0.0284],\n        [0.0307],\n        [0.0362],\n        [0.0270],\n        [0.0324],\n        [0.0390],\n        [0.0375],\n        [0.0494],\n        [0.0416],\n        [0.0262],\n        [0.0305],\n        [0.0260],\n        [0.0358],\n        [0.0446],\n        [0.0447],\n        [0.0222],\n        [0.0505],\n        [0.0280]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956137.984132}]}, "version": 433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956137.9867733}]}, "version": 434}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.07232666015625, "step": null, "ts": 1644956137.9879477}]}, "version": 435}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3410724103450775, "step": null, "ts": 1644956138.0827217}]}, "version": 436}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.6726713180542, "step": null, "ts": 1644956138.0912983}]}, "version": 437}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343256115913391, "step": null, "ts": 1644956138.5540464}]}, "version": 438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8867e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956138.5615141}]}, "version": 439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956138.5624642}]}, "version": 440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3964e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956138.5640428}]}, "version": 441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956138.565146}]}, "version": 442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.8891e-06, 2.0809e-06, 3.0291e-06,  ..., 3.0023e-06, 3.6197e-06,\n         3.8783e-06],\n        [8.1738e-06, 3.4630e-06, 2.5738e-06,  ..., 1.3696e-06, 3.4193e-06,\n         2.9751e-06],\n        [4.9737e-06, 2.3199e-06, 2.2247e-06,  ..., 3.0314e-06, 2.8068e-06,\n         3.5561e-06],\n        ...,\n        [4.5052e-06, 1.1986e-06, 3.3220e-06,  ..., 2.8821e-06, 3.0194e-06,\n         2.4699e-06],\n        [7.5131e-06, 3.1467e-06, 5.2148e-06,  ..., 5.0169e-06, 3.1370e-06,\n         1.4558e-06],\n        [3.5633e-06, 8.6505e-07, 2.4215e-06,  ..., 2.3822e-06, 2.9423e-06,\n         4.0824e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956138.5673943}]}, "version": 443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956138.5683272}]}, "version": 444}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0317],\n        [0.0115],\n        [0.0221],\n        [0.0262],\n        [0.0354],\n        [0.0285],\n        [0.0243],\n        [0.0274],\n        [0.0301],\n        [0.0304],\n        [0.0274],\n        [0.0669],\n        [0.0243],\n        [0.0446],\n        [0.0219],\n        [0.0300],\n        [0.0272],\n        [0.0240],\n        [0.0642],\n        [0.0326],\n        [0.0204],\n        [0.0307],\n        [0.0497],\n        [0.0451],\n        [0.0321],\n        [0.0402],\n        [0.0450],\n        [0.0405],\n        [0.0351],\n        [0.0293],\n        [0.0202],\n        [0.0324],\n        [0.0328],\n        [0.0344],\n        [0.0333],\n        [0.0368],\n        [0.0295],\n        [0.0471],\n        [0.0200],\n        [0.0485],\n        [0.0175],\n        [0.0222]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956138.571436}]}, "version": 445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956138.5744977}]}, "version": 446}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.8209686279297, "step": null, "ts": 1644956138.5759482}]}, "version": 447}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15337224304676056, "step": null, "ts": 1644956138.6793897}]}, "version": 448}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.793169975280762, "step": null, "ts": 1644956138.6927836}]}, "version": 449}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8938287496566772, "step": null, "ts": 1644956139.1570022}]}, "version": 450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8139e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956139.1649208}]}, "version": 451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.165949}]}, "version": 452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1917e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956139.1671517}]}, "version": 453}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.1681252}]}, "version": 454}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.6610e-06, 1.7581e-06, 3.5963e-06,  ..., 4.2451e-06, 3.1556e-06,\n         3.6071e-06],\n        [4.8066e-06, 3.0125e-06, 2.7999e-06,  ..., 2.1255e-06, 2.5668e-06,\n         2.1902e-06],\n        [5.8406e-06, 1.6396e-06, 1.9075e-06,  ..., 2.1339e-06, 3.7176e-06,\n         2.5650e-06],\n        ...,\n        [5.0034e-06, 1.5382e-06, 3.0378e-06,  ..., 4.3728e-06, 3.1640e-06,\n         2.9537e-06],\n        [3.5281e-06, 6.2500e-07, 5.4881e-06,  ..., 3.4610e-06, 1.8458e-06,\n         1.7684e-06],\n        [5.8123e-06, 1.6733e-06, 1.5205e-06,  ..., 2.7039e-06, 4.6384e-06,\n         5.8614e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956139.170419}]}, "version": 455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.173319}]}, "version": 456}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0352],\n        [0.0293],\n        [0.0220],\n        [0.0271],\n        [0.0288],\n        [0.0236],\n        [0.0345],\n        [0.0317],\n        [0.0265],\n        [0.0398],\n        [0.0209],\n        [0.0318],\n        [0.0285],\n        [0.0588],\n        [0.0234],\n        [0.0259],\n        [0.0367],\n        [0.0448],\n        [0.0269],\n        [0.0398],\n        [0.0230],\n        [0.0346],\n        [0.0257],\n        [0.0316],\n        [0.0344],\n        [0.0435],\n        [0.0597],\n        [0.0206],\n        [0.0356],\n        [0.0248],\n        [0.0209],\n        [0.0248],\n        [0.0457],\n        [0.0317],\n        [0.0597],\n        [0.0281],\n        [0.0263],\n        [0.0420],\n        [0.0342],\n        [0.0292],\n        [0.0395],\n        [0.0299]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956139.176484}]}, "version": 457}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.1774056}]}, "version": 458}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.96182250976562, "step": null, "ts": 1644956139.178722}]}, "version": 459}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23163534700870514, "step": null, "ts": 1644956139.2882955}]}, "version": 460}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.696610450744629, "step": null, "ts": 1644956139.3002229}]}, "version": 461}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.605 (0.605)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956139.546072}]}, "version": 462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.5471885}]}, "version": 463}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7544659376144409, "step": null, "ts": 1644956139.7735758}]}, "version": 464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5131e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956139.78452}]}, "version": 465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.7854514}]}, "version": 466}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.9736e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956139.7868905}]}, "version": 467}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.787841}]}, "version": 468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.7192e-06, 1.2070e-06, 3.3422e-06,  ..., 2.2041e-06, 3.1627e-06,\n         2.5339e-06],\n        [4.7266e-06, 1.8118e-06, 2.1993e-06,  ..., 4.8754e-06, 3.0882e-06,\n         2.9182e-06],\n        [3.8841e-06, 2.1257e-06, 4.7523e-06,  ..., 6.0108e-06, 1.9008e-06,\n         2.0982e-06],\n        ...,\n        [2.5059e-06, 2.5998e-06, 2.1610e-06,  ..., 3.1813e-06, 5.0989e-06,\n         2.9133e-06],\n        [5.5116e-06, 2.0767e-06, 2.7982e-06,  ..., 2.7863e-06, 2.5457e-06,\n         2.3470e-06],\n        [6.0218e-06, 1.2699e-06, 2.2804e-06,  ..., 2.2285e-06, 4.0160e-06,\n         4.8394e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956139.7901068}]}, "version": 469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.7910285}]}, "version": 470}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0308],\n        [0.0331],\n        [0.0551],\n        [0.0230],\n        [0.0206],\n        [0.0284],\n        [0.0314],\n        [0.0300],\n        [0.0193],\n        [0.0379],\n        [0.0264],\n        [0.0237],\n        [0.0308],\n        [0.0520],\n        [0.0460],\n        [0.0424],\n        [0.0506],\n        [0.0220],\n        [0.0277],\n        [0.0359],\n        [0.0348],\n        [0.0407],\n        [0.0420],\n        [0.0409],\n        [0.0480],\n        [0.0238],\n        [0.0345],\n        [0.0292],\n        [0.0269],\n        [0.0141],\n        [0.0336],\n        [0.0367],\n        [0.0399],\n        [0.0198],\n        [0.0395],\n        [0.0156],\n        [0.0267],\n        [0.0253],\n        [0.0769],\n        [0.0302],\n        [0.0237],\n        [0.0371]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956139.7939103}]}, "version": 471}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956139.794797}]}, "version": 472}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.89337158203125, "step": null, "ts": 1644956139.796188}]}, "version": 473}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.295915424823761, "step": null, "ts": 1644956139.8846967}]}, "version": 474}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.780372619628906, "step": null, "ts": 1644956139.9040704}]}, "version": 475}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7592187523841858, "step": null, "ts": 1644956140.3522747}]}, "version": 476}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3224e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956140.360002}]}, "version": 477}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.3610237}]}, "version": 478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.1497e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956140.3622994}]}, "version": 479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.363272}]}, "version": 480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.6055e-06, 1.5995e-06, 2.4575e-06,  ..., 2.2803e-06, 2.0648e-06,\n         2.2883e-06],\n        [3.5885e-06, 1.8143e-06, 2.1248e-06,  ..., 2.5639e-06, 2.5804e-06,\n         5.3172e-06],\n        [4.8503e-06, 1.0108e-06, 3.1998e-06,  ..., 1.8032e-06, 5.4070e-06,\n         1.8600e-06],\n        ...,\n        [3.9750e-06, 1.8957e-06, 2.8807e-06,  ..., 3.5295e-06, 3.6128e-06,\n         4.5469e-06],\n        [7.2522e-06, 1.5307e-06, 1.9840e-06,  ..., 2.3578e-06, 4.1071e-06,\n         3.0964e-06],\n        [3.0168e-06, 2.8742e-06, 2.1766e-06,  ..., 1.8503e-06, 3.7889e-06,\n         1.5768e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956140.3658383}]}, "version": 481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.3665698}]}, "version": 482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0469],\n        [0.0215],\n        [0.0386],\n        [0.0420],\n        [0.0279],\n        [0.0299],\n        [0.0293],\n        [0.0273],\n        [0.0514],\n        [0.0189],\n        [0.0225],\n        [0.0272],\n        [0.0416],\n        [0.0587],\n        [0.0238],\n        [0.0193],\n        [0.0309],\n        [0.0440],\n        [0.0272],\n        [0.0358],\n        [0.0291],\n        [0.0266],\n        [0.0308],\n        [0.0645],\n        [0.0358],\n        [0.0377],\n        [0.0408],\n        [0.0218],\n        [0.0573],\n        [0.0192],\n        [0.0367],\n        [0.0232],\n        [0.0352],\n        [0.0372],\n        [0.0272],\n        [0.0386],\n        [0.0403],\n        [0.0213],\n        [0.0199],\n        [0.0413],\n        [0.0231],\n        [0.0221]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956140.3696187}]}, "version": 483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.3705823}]}, "version": 484}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.08567810058594, "step": null, "ts": 1644956140.372077}]}, "version": 485}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40869471430778503, "step": null, "ts": 1644956140.4603543}]}, "version": 486}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.695950508117676, "step": null, "ts": 1644956140.4737353}]}, "version": 487}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6433932781219482, "step": null, "ts": 1644956140.9370642}]}, "version": 488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2804e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956140.9461448}]}, "version": 489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.9471905}]}, "version": 490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2641e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956140.9483342}]}, "version": 491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.9491951}]}, "version": 492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.2488e-06, 2.1689e-06, 2.3630e-06,  ..., 3.1509e-06, 2.4374e-06,\n         2.9363e-06],\n        [2.7772e-06, 1.0300e-06, 5.8799e-06,  ..., 3.7289e-06, 2.6452e-06,\n         2.4162e-06],\n        [5.4366e-06, 1.8889e-06, 1.9774e-06,  ..., 4.8165e-06, 2.0753e-06,\n         2.1358e-06],\n        ...,\n        [3.9073e-06, 3.2417e-06, 2.1883e-06,  ..., 4.1388e-06, 2.7959e-06,\n         1.9078e-06],\n        [3.5921e-06, 1.5577e-06, 2.8714e-06,  ..., 2.0137e-06, 4.5894e-06,\n         3.2944e-06],\n        [6.7836e-06, 2.7601e-06, 2.4926e-06,  ..., 2.7976e-06, 2.4083e-06,\n         2.4006e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956140.9514546}]}, "version": 493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.9523122}]}, "version": 494}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0265],\n        [0.0687],\n        [0.0361],\n        [0.0370],\n        [0.0227],\n        [0.0112],\n        [0.0375],\n        [0.0535],\n        [0.0372],\n        [0.0308],\n        [0.0368],\n        [0.0271],\n        [0.0289],\n        [0.0110],\n        [0.0285],\n        [0.0248],\n        [0.0271],\n        [0.0707],\n        [0.0259],\n        [0.0385],\n        [0.0301],\n        [0.0362],\n        [0.0259],\n        [0.0615],\n        [0.0317],\n        [0.0284],\n        [0.0234],\n        [0.0239],\n        [0.0291],\n        [0.0697],\n        [0.0405],\n        [0.0289],\n        [0.0307],\n        [0.0317],\n        [0.0346],\n        [0.0308],\n        [0.0352],\n        [0.0324],\n        [0.0315],\n        [0.0328],\n        [0.0384],\n        [0.0282]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956140.955382}]}, "version": 495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956140.9594631}]}, "version": 496}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.333984375, "step": null, "ts": 1644956140.9609134}]}, "version": 497}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27200648188591003, "step": null, "ts": 1644956141.0491636}]}, "version": 498}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.657362937927246, "step": null, "ts": 1644956141.0590568}]}, "version": 499}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6693803668022156, "step": null, "ts": 1644956141.5579557}]}, "version": 500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9456e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956141.5661569}]}, "version": 501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956141.5733254}]}, "version": 502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5218e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956141.5748122}]}, "version": 503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956141.5758085}]}, "version": 504}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.2398e-06, 1.9735e-06, 2.7078e-06,  ..., 2.3102e-06, 2.2407e-06,\n         3.8314e-06],\n        [5.2692e-06, 2.1287e-06, 2.3353e-06,  ..., 6.6241e-06, 2.1861e-06,\n         2.0139e-06],\n        [4.4426e-06, 3.6975e-06, 2.3293e-06,  ..., 2.2183e-06, 5.6553e-06,\n         2.7568e-06],\n        ...,\n        [4.1370e-06, 2.2079e-06, 3.2970e-06,  ..., 3.7244e-06, 2.0436e-06,\n         2.3562e-06],\n        [6.4500e-06, 2.3209e-06, 3.8403e-06,  ..., 5.6154e-06, 1.4809e-06,\n         1.7638e-06],\n        [5.0426e-06, 1.4239e-06, 1.6204e-06,  ..., 3.4460e-06, 1.8945e-06,\n         2.3188e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956141.5781505}]}, "version": 505}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956141.5792258}]}, "version": 506}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0352],\n        [0.0248],\n        [0.0252],\n        [0.0253],\n        [0.0248],\n        [0.0489],\n        [0.0478],\n        [0.0218],\n        [0.0397],\n        [0.0468],\n        [0.0279],\n        [0.0399],\n        [0.0312],\n        [0.0429],\n        [0.0380],\n        [0.0315],\n        [0.0318],\n        [0.0585],\n        [0.0297],\n        [0.0245],\n        [0.0290],\n        [0.0300],\n        [0.0319],\n        [0.0363],\n        [0.0361],\n        [0.0289],\n        [0.0405],\n        [0.0222],\n        [0.0289],\n        [0.0355],\n        [0.0274],\n        [0.0214],\n        [0.0336],\n        [0.0429],\n        [0.0225],\n        [0.0429],\n        [0.0241],\n        [0.0214],\n        [0.0175],\n        [0.0254],\n        [0.0268],\n        [0.0437]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956141.582093}]}, "version": 507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956141.5831199}]}, "version": 508}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.32716369628906, "step": null, "ts": 1644956141.5842617}]}, "version": 509}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5564521551132202, "step": null, "ts": 1644956141.6789494}]}, "version": 510}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.66445255279541, "step": null, "ts": 1644956141.6857023}]}, "version": 511}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0379257202148438, "step": null, "ts": 1644956142.1559591}]}, "version": 512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5098e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956142.157761}]}, "version": 513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956142.1587064}]}, "version": 514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5115e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956142.160215}]}, "version": 515}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956142.1613133}]}, "version": 516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.7773e-06, 2.3354e-06, 1.4875e-06,  ..., 2.3998e-06, 2.1707e-06,\n         2.7288e-06],\n        [3.8705e-06, 1.7077e-06, 2.4210e-06,  ..., 1.9998e-06, 2.2620e-06,\n         2.9314e-06],\n        [9.1601e-06, 1.8157e-06, 3.4752e-06,  ..., 3.9221e-06, 3.8865e-06,\n         3.0206e-06],\n        ...,\n        [4.0654e-06, 1.8173e-06, 3.2558e-06,  ..., 2.6219e-06, 3.9048e-06,\n         3.1809e-06],\n        [3.2683e-06, 2.4480e-06, 2.9296e-06,  ..., 2.8482e-06, 5.8662e-06,\n         6.3342e-06],\n        [5.3506e-06, 2.2150e-06, 3.7428e-06,  ..., 2.2373e-06, 2.0783e-06,\n         3.4663e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956142.1639307}]}, "version": 517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956142.1649733}]}, "version": 518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0358],\n        [0.0401],\n        [0.0283],\n        [0.0194],\n        [0.0277],\n        [0.0548],\n        [0.0335],\n        [0.0250],\n        [0.0312],\n        [0.0280],\n        [0.0602],\n        [0.0226],\n        [0.0324],\n        [0.1254],\n        [0.0324],\n        [0.0250],\n        [0.0169],\n        [0.0348],\n        [0.0327],\n        [0.0453],\n        [0.0318],\n        [0.0364],\n        [0.0374],\n        [0.0264],\n        [0.0313],\n        [0.0368],\n        [0.0395],\n        [0.0339],\n        [0.0309],\n        [0.0263],\n        [0.0446],\n        [0.0190],\n        [0.0356],\n        [0.0195],\n        [0.0296],\n        [0.0178],\n        [0.0273],\n        [0.0286],\n        [0.0406],\n        [0.0277],\n        [0.0373],\n        [0.0225]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956142.1681015}]}, "version": 519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956142.169225}]}, "version": 520}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.75665283203125, "step": null, "ts": 1644956142.1702895}]}, "version": 521}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22683650255203247, "step": null, "ts": 1644956142.2727726}]}, "version": 522}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.780863761901855, "step": null, "ts": 1644956142.276769}]}, "version": 523}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9422849416732788, "step": null, "ts": 1644956142.9804957}]}, "version": 524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7320e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956142.9897761}]}, "version": 525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.0014422}]}, "version": 526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.5184e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956143.0028994}]}, "version": 527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.0039742}]}, "version": 528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.7480e-06, 7.6906e-07, 1.6303e-06,  ..., 2.1972e-06, 1.5566e-06,\n         7.0686e-06],\n        [3.7003e-06, 2.1056e-06, 2.6277e-06,  ..., 2.8563e-06, 3.1220e-06,\n         2.7003e-06],\n        [4.1780e-06, 1.3893e-06, 2.4834e-06,  ..., 4.9396e-06, 2.6596e-06,\n         2.5441e-06],\n        ...,\n        [6.9958e-06, 3.2170e-06, 2.7941e-06,  ..., 3.5606e-06, 2.3293e-06,\n         2.7647e-06],\n        [5.7486e-06, 2.0781e-06, 2.0305e-06,  ..., 2.1252e-06, 2.8428e-06,\n         2.9762e-06],\n        [3.0549e-06, 1.2640e-06, 2.2332e-06,  ..., 2.4703e-06, 2.5951e-06,\n         3.0299e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956143.0063522}]}, "version": 529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.0073402}]}, "version": 530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0198],\n        [0.0270],\n        [0.0189],\n        [0.0600],\n        [0.0315],\n        [0.0455],\n        [0.0309],\n        [0.0476],\n        [0.0219],\n        [0.0551],\n        [0.0251],\n        [0.0226],\n        [0.0195],\n        [0.0278],\n        [0.0293],\n        [0.0408],\n        [0.0344],\n        [0.0226],\n        [0.0186],\n        [0.0374],\n        [0.0264],\n        [0.0352],\n        [0.0272],\n        [0.0332],\n        [0.0175],\n        [0.0236],\n        [0.0302],\n        [0.0264],\n        [0.0414],\n        [0.0271],\n        [0.0505],\n        [0.0429],\n        [0.0321],\n        [0.0275],\n        [0.0413],\n        [0.0247],\n        [0.0302],\n        [0.0845],\n        [0.0365],\n        [0.0155],\n        [0.0318],\n        [0.0328]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956143.010467}]}, "version": 531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.0112522}]}, "version": 532}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 159.2202606201172, "step": null, "ts": 1644956143.0127017}]}, "version": 533}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.33237215876579285, "step": null, "ts": 1644956143.1041687}]}, "version": 534}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.659872055053711, "step": null, "ts": 1644956143.2120214}]}, "version": 535}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9249364137649536, "step": null, "ts": 1644956143.6443036}]}, "version": 536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3343e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956143.6503122}]}, "version": 537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.6576188}]}, "version": 538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4888e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956143.6591322}]}, "version": 539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.6601505}]}, "version": 540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.8866e-06, 2.5369e-06, 2.5021e-06,  ..., 2.9302e-06, 2.3390e-06,\n         3.3092e-06],\n        [3.4360e-06, 2.5672e-06, 3.1832e-06,  ..., 3.1068e-06, 3.0756e-06,\n         3.0821e-06],\n        [4.2550e-06, 1.7428e-06, 4.4136e-06,  ..., 3.1134e-06, 2.5552e-06,\n         2.4656e-06],\n        ...,\n        [3.6507e-06, 2.3831e-06, 2.5015e-06,  ..., 3.0414e-06, 3.1791e-06,\n         2.9957e-06],\n        [4.3687e-06, 2.0935e-06, 2.9606e-06,  ..., 2.8164e-06, 3.0615e-06,\n         2.7589e-06],\n        [1.3343e-05, 3.2131e-06, 2.4150e-06,  ..., 3.2318e-06, 5.1579e-06,\n         2.5755e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956143.662619}]}, "version": 541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.6636577}]}, "version": 542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0281],\n        [0.0312],\n        [0.0317],\n        [0.0271],\n        [0.0263],\n        [0.0186],\n        [0.0217],\n        [0.0296],\n        [0.0249],\n        [0.0338],\n        [0.0326],\n        [0.0318],\n        [0.0460],\n        [0.0295],\n        [0.0470],\n        [0.0395],\n        [0.0269],\n        [0.0428],\n        [0.0271],\n        [0.0183],\n        [0.0399],\n        [0.0258],\n        [0.0305],\n        [0.0298],\n        [0.0327],\n        [0.0209],\n        [0.0854],\n        [0.0348],\n        [0.0370],\n        [0.0327],\n        [0.0327],\n        [0.0257],\n        [0.0395],\n        [0.0248],\n        [0.0348],\n        [0.0194],\n        [0.0496],\n        [0.0550],\n        [0.0300],\n        [0.0352],\n        [0.0365],\n        [0.0219]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956143.6668553}]}, "version": 543}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956143.6677108}]}, "version": 544}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.9172821044922, "step": null, "ts": 1644956143.668816}]}, "version": 545}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2608734965324402, "step": null, "ts": 1644956143.7537773}]}, "version": 546}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.726537704467773, "step": null, "ts": 1644956143.7730737}]}, "version": 547}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956144.189628}]}, "version": 548}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.055328369140625, "step": null, "ts": 1644956144.189628}]}, "version": 549}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 94.0, "step": null, "ts": 1644956144.189628}]}, "version": 550}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644956144.189628}]}, "version": 551}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5658231377601624, "step": null, "ts": 1644956144.2032554}]}, "version": 552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4801e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956144.209523}]}, "version": 553}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.210381}]}, "version": 554}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9165e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956144.2118046}]}, "version": 555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.2127106}]}, "version": 556}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.5376e-06, 1.6785e-06, 2.1196e-06,  ..., 2.7446e-06, 1.0236e-06,\n         6.3356e-06],\n        [3.3114e-06, 1.4706e-06, 2.6032e-06,  ..., 1.8492e-06, 4.1820e-06,\n         3.1227e-06],\n        [5.5109e-06, 1.6435e-06, 2.4904e-06,  ..., 3.0546e-06, 2.8004e-06,\n         3.5163e-06],\n        ...,\n        [6.5655e-06, 1.9570e-06, 3.0494e-06,  ..., 3.4602e-06, 3.0082e-06,\n         2.2443e-06],\n        [4.2871e-06, 1.6432e-06, 3.2777e-06,  ..., 3.9337e-06, 4.4830e-06,\n         3.8686e-06],\n        [6.8478e-06, 1.2849e-06, 2.1034e-06,  ..., 2.9334e-06, 2.9496e-06,\n         2.9057e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956144.215036}]}, "version": 557}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.215799}]}, "version": 558}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0148],\n        [0.0376],\n        [0.0489],\n        [0.0151],\n        [0.0266],\n        [0.0258],\n        [0.0434],\n        [0.0349],\n        [0.0339],\n        [0.0358],\n        [0.0158],\n        [0.0250],\n        [0.0359],\n        [0.0462],\n        [0.0282],\n        [0.0117],\n        [0.0406],\n        [0.0366],\n        [0.0175],\n        [0.0233],\n        [0.0251],\n        [0.0372],\n        [0.0646],\n        [0.0373],\n        [0.0406],\n        [0.0348],\n        [0.0879],\n        [0.0206],\n        [0.0403],\n        [0.0353],\n        [0.0276],\n        [0.0387],\n        [0.0151],\n        [0.0317],\n        [0.0359],\n        [0.0318],\n        [0.0817],\n        [0.0506],\n        [0.0298],\n        [0.0451],\n        [0.0337],\n        [0.0362]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956144.2185946}]}, "version": 559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.2194593}]}, "version": 560}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.06092834472656, "step": null, "ts": 1644956144.2205608}]}, "version": 561}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.35949838161468506, "step": null, "ts": 1644956144.3147788}]}, "version": 562}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.744020462036133, "step": null, "ts": 1644956144.3242733}]}, "version": 563}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5117916464805603, "step": null, "ts": 1644956144.811174}]}, "version": 564}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9222e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956144.8196256}]}, "version": 565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.8245516}]}, "version": 566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4038e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956144.8259912}]}, "version": 567}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.8270617}]}, "version": 568}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.2639e-06, 9.9463e-07, 2.0507e-06,  ..., 2.3021e-06, 2.4305e-06,\n         3.5803e-06],\n        [3.8941e-06, 2.2375e-06, 3.0332e-06,  ..., 3.1132e-06, 2.8240e-06,\n         3.4579e-06],\n        [4.0421e-06, 2.7062e-06, 2.7667e-06,  ..., 3.3142e-06, 2.8729e-06,\n         3.4912e-06],\n        ...,\n        [6.1708e-06, 1.6265e-06, 3.8461e-06,  ..., 1.8230e-06, 2.6084e-06,\n         2.6255e-06],\n        [3.8839e-06, 1.9342e-06, 2.6181e-06,  ..., 2.3013e-06, 3.0599e-06,\n         3.0397e-06],\n        [2.9528e-06, 2.7432e-06, 3.1347e-06,  ..., 4.0321e-06, 2.7300e-06,\n         3.3304e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956144.8293412}]}, "version": 569}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.8303156}]}, "version": 570}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0540],\n        [0.0302],\n        [0.0255],\n        [0.0230],\n        [0.0234],\n        [0.0346],\n        [0.0317],\n        [0.0191],\n        [0.0629],\n        [0.0295],\n        [0.0280],\n        [0.0435],\n        [0.0220],\n        [0.0394],\n        [0.0300],\n        [0.0174],\n        [0.0901],\n        [0.0313],\n        [0.0303],\n        [0.0328],\n        [0.0264],\n        [0.0244],\n        [0.0311],\n        [0.0299],\n        [0.0350],\n        [0.0364],\n        [0.0170],\n        [0.0480],\n        [0.0378],\n        [0.0158],\n        [0.0291],\n        [0.0229],\n        [0.0332],\n        [0.0447],\n        [0.0338],\n        [0.0279],\n        [0.0203],\n        [0.0308],\n        [0.0300],\n        [0.0205],\n        [0.0386],\n        [0.0389]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956144.8333514}]}, "version": 571}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956144.8341053}]}, "version": 572}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 159.2957000732422, "step": null, "ts": 1644956144.8351653}]}, "version": 573}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.48345693945884705, "step": null, "ts": 1644956144.9344518}]}, "version": 574}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.781444549560547, "step": null, "ts": 1644956144.9412482}]}, "version": 575}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7591521739959717, "step": null, "ts": 1644956145.4205227}]}, "version": 576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5138e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956145.4316375}]}, "version": 577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956145.43883}]}, "version": 578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9926e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956145.4400709}]}, "version": 579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956145.440835}]}, "version": 580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.9904e-06, 7.6870e-07, 1.6541e-06,  ..., 1.4247e-06, 1.9026e-06,\n         1.7937e-06],\n        [4.3080e-06, 2.1979e-06, 2.9154e-06,  ..., 4.3436e-06, 3.6653e-06,\n         4.0581e-06],\n        [3.5423e-06, 1.7469e-06, 2.2038e-06,  ..., 2.5346e-06, 3.1283e-06,\n         4.3033e-06],\n        ...,\n        [5.3583e-06, 1.9082e-06, 3.1521e-06,  ..., 2.7770e-06, 6.0564e-06,\n         3.0754e-06],\n        [7.5332e-06, 8.3909e-07, 2.9382e-06,  ..., 5.0238e-06, 2.1521e-06,\n         3.3339e-06],\n        [4.4328e-06, 2.0996e-06, 3.4677e-06,  ..., 4.2364e-06, 1.7141e-06,\n         4.4818e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956145.4430861}]}, "version": 581}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956145.4441204}]}, "version": 582}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0289],\n        [0.0343],\n        [0.0515],\n        [0.0288],\n        [0.0372],\n        [0.0619],\n        [0.0201],\n        [0.0352],\n        [0.0191],\n        [0.0333],\n        [0.0497],\n        [0.0276],\n        [0.0251],\n        [0.0261],\n        [0.0356],\n        [0.0373],\n        [0.0216],\n        [0.0311],\n        [0.0358],\n        [0.0196],\n        [0.0284],\n        [0.0262],\n        [0.0405],\n        [0.0315],\n        [0.0335],\n        [0.0246],\n        [0.0700],\n        [0.0380],\n        [0.0247],\n        [0.0491],\n        [0.0211],\n        [0.0197],\n        [0.0332],\n        [0.0376],\n        [0.0377],\n        [0.0405],\n        [0.0386],\n        [0.0340],\n        [0.0342],\n        [0.0227],\n        [0.0434],\n        [0.0343]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956145.4469857}]}, "version": 583}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956145.4479728}]}, "version": 584}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.85726928710938, "step": null, "ts": 1644956145.44907}]}, "version": 585}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3443602919578552, "step": null, "ts": 1644956145.5498629}]}, "version": 586}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.70504379272461, "step": null, "ts": 1644956145.5566125}]}, "version": 587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.605 (0.605)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956145.801344}]}, "version": 588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956145.8024335}]}, "version": 589}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7835748195648193, "step": null, "ts": 1644956146.0176482}]}, "version": 590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0840e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956146.025477}]}, "version": 591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.0263908}]}, "version": 592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.6480e-08, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956146.0279248}]}, "version": 593}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.0289474}]}, "version": 594}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3778e-06, 1.7598e-06, 2.3232e-06,  ..., 2.6307e-06, 3.6085e-06,\n         4.8838e-06],\n        [5.3270e-06, 1.5063e-06, 2.3676e-06,  ..., 2.7312e-06, 2.3928e-06,\n         2.5514e-06],\n        [5.6544e-06, 1.4722e-06, 3.9449e-06,  ..., 2.5178e-06, 1.9918e-06,\n         3.4799e-06],\n        ...,\n        [9.9362e-06, 2.3447e-06, 2.5395e-06,  ..., 1.6796e-06, 2.6273e-06,\n         2.2962e-06],\n        [7.0974e-06, 7.5565e-07, 4.7740e-06,  ..., 6.4389e-06, 2.7298e-06,\n         1.2980e-06],\n        [4.3137e-06, 2.4099e-06, 2.2554e-06,  ..., 3.0702e-06, 2.5471e-06,\n         4.4234e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956146.0314584}]}, "version": 595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.0327885}]}, "version": 596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0415],\n        [0.0514],\n        [0.0228],\n        [0.0388],\n        [0.0198],\n        [0.0411],\n        [0.0339],\n        [0.0284],\n        [0.0367],\n        [0.0448],\n        [0.0300],\n        [0.0266],\n        [0.0323],\n        [0.0471],\n        [0.0276],\n        [0.0428],\n        [0.0471],\n        [0.0377],\n        [0.0370],\n        [0.0334],\n        [0.0307],\n        [0.0060],\n        [0.0319],\n        [0.0184],\n        [0.0367],\n        [0.0370],\n        [0.0250],\n        [0.0296],\n        [0.0355],\n        [0.0256],\n        [0.0266],\n        [0.0208],\n        [0.0385],\n        [0.0404],\n        [0.0248],\n        [0.0266],\n        [0.0231],\n        [0.0383],\n        [0.0731],\n        [0.0240],\n        [0.0747],\n        [0.0341]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956146.0356145}]}, "version": 597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.0365164}]}, "version": 598}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.272705078125, "step": null, "ts": 1644956146.0378978}]}, "version": 599}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3973582088947296, "step": null, "ts": 1644956146.126152}]}, "version": 600}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.798320770263672, "step": null, "ts": 1644956146.134507}]}, "version": 601}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6310012340545654, "step": null, "ts": 1644956146.6037457}]}, "version": 602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4530e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956146.6255393}]}, "version": 603}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.6264675}]}, "version": 604}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2414e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956146.6278803}]}, "version": 605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.6288147}]}, "version": 606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.7608e-06, 1.6464e-06, 2.3917e-06,  ..., 3.3296e-06, 1.8541e-06,\n         3.3999e-06],\n        [8.1192e-06, 1.0751e-06, 2.7124e-06,  ..., 1.2296e-06, 2.6776e-06,\n         3.4923e-06],\n        [4.1876e-06, 1.9721e-06, 2.1567e-06,  ..., 2.4506e-06, 2.5657e-06,\n         2.4281e-06],\n        ...,\n        [4.2295e-06, 2.1754e-06, 2.2652e-06,  ..., 3.5377e-06, 2.5064e-06,\n         2.5500e-06],\n        [2.9497e-06, 2.3091e-06, 2.9374e-06,  ..., 3.1487e-06, 3.5361e-06,\n         2.2117e-06],\n        [3.7920e-06, 1.4389e-06, 2.4606e-06,  ..., 3.6189e-06, 2.4434e-06,\n         2.7293e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956146.6313534}]}, "version": 607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.6319656}]}, "version": 608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0278],\n        [0.0216],\n        [0.0349],\n        [0.0338],\n        [0.0408],\n        [0.0377],\n        [0.0538],\n        [0.0367],\n        [0.0519],\n        [0.0286],\n        [0.0372],\n        [0.0283],\n        [0.0210],\n        [0.0239],\n        [0.0240],\n        [0.0194],\n        [0.0187],\n        [0.0206],\n        [0.0356],\n        [0.0161],\n        [0.0292],\n        [0.0431],\n        [0.0376],\n        [0.0299],\n        [0.0187],\n        [0.0267],\n        [0.0183],\n        [0.1468],\n        [0.0376],\n        [0.0367],\n        [0.0281],\n        [0.0275],\n        [0.0350],\n        [0.0268],\n        [0.0349],\n        [0.0517],\n        [0.0294],\n        [0.0279],\n        [0.0301],\n        [0.0364],\n        [0.0409],\n        [0.0312]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956146.6346023}]}, "version": 609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956146.6354482}]}, "version": 610}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.2013702392578, "step": null, "ts": 1644956146.6365778}]}, "version": 611}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10448283702135086, "step": null, "ts": 1644956146.7245517}]}, "version": 612}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.7967529296875, "step": null, "ts": 1644956146.73629}]}, "version": 613}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8994686007499695, "step": null, "ts": 1644956147.218085}]}, "version": 614}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4790e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956147.226295}]}, "version": 615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.2273207}]}, "version": 616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5275e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956147.2288203}]}, "version": 617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.2296832}]}, "version": 618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.4405e-06, 2.9878e-06, 2.0018e-06,  ..., 2.8789e-06, 2.9532e-06,\n         2.4188e-06],\n        [4.3346e-06, 1.1920e-06, 2.1617e-06,  ..., 3.4937e-06, 1.9952e-06,\n         3.1008e-06],\n        [4.3564e-06, 1.8545e-06, 2.4246e-06,  ..., 3.9609e-06, 4.4961e-06,\n         3.9912e-06],\n        ...,\n        [7.1942e-06, 1.3567e-06, 2.8395e-06,  ..., 3.5144e-06, 3.5442e-06,\n         4.7845e-06],\n        [5.1750e-06, 1.4866e-06, 3.0451e-06,  ..., 1.8449e-06, 2.8021e-06,\n         3.9083e-06],\n        [3.7329e-06, 1.0347e-06, 1.5190e-06,  ..., 1.3457e-06, 2.8147e-06,\n         2.5488e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956147.2319922}]}, "version": 619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.2327569}]}, "version": 620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0234],\n        [0.0273],\n        [0.0387],\n        [0.0326],\n        [0.0305],\n        [0.0621],\n        [0.0350],\n        [0.0332],\n        [0.0322],\n        [0.0266],\n        [0.0429],\n        [0.0903],\n        [0.0340],\n        [0.0791],\n        [0.0278],\n        [0.0301],\n        [0.0194],\n        [0.0249],\n        [0.0358],\n        [0.0270],\n        [0.0292],\n        [0.0143],\n        [0.0255],\n        [0.0341],\n        [0.0304],\n        [0.0166],\n        [0.0321],\n        [0.0433],\n        [0.0238],\n        [0.0329],\n        [0.0252],\n        [0.0295],\n        [0.0381],\n        [0.0293],\n        [0.0277],\n        [0.0254],\n        [0.0281],\n        [0.0359],\n        [0.0274],\n        [0.0568],\n        [0.0282],\n        [0.0342]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956147.235594}]}, "version": 621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.2364428}]}, "version": 622}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.7662811279297, "step": null, "ts": 1644956147.2377326}]}, "version": 623}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23073887825012207, "step": null, "ts": 1644956147.331769}]}, "version": 624}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.762042045593262, "step": null, "ts": 1644956147.3431835}]}, "version": 625}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8624277710914612, "step": null, "ts": 1644956147.825556}]}, "version": 626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3490e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956147.8330033}]}, "version": 627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.833919}]}, "version": 628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2296e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956147.835201}]}, "version": 629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.8361793}]}, "version": 630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.1781e-06, 1.2677e-06, 2.4317e-06,  ..., 2.0092e-06, 2.8218e-06,\n         1.7889e-06],\n        [5.8435e-06, 1.7401e-06, 1.2228e-06,  ..., 4.7529e-06, 1.8238e-06,\n         2.6456e-06],\n        [4.9997e-06, 2.4246e-06, 3.0028e-06,  ..., 3.6830e-06, 1.6907e-06,\n         3.1307e-06],\n        ...,\n        [9.7085e-06, 1.2202e-06, 2.0119e-06,  ..., 1.6540e-06, 1.9699e-06,\n         2.9660e-06],\n        [9.2149e-06, 1.2523e-06, 2.2226e-06,  ..., 1.4135e-06, 6.3743e-06,\n         1.2501e-06],\n        [4.8116e-06, 1.2290e-06, 1.5260e-06,  ..., 5.5638e-06, 2.2292e-06,\n         3.1403e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956147.8384712}]}, "version": 631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.8394465}]}, "version": 632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0349],\n        [0.0265],\n        [0.0291],\n        [0.0430],\n        [0.0697],\n        [0.0428],\n        [0.0307],\n        [0.0291],\n        [0.0584],\n        [0.0234],\n        [0.0366],\n        [0.0349],\n        [0.0347],\n        [0.0341],\n        [0.0447],\n        [0.0410],\n        [0.0383],\n        [0.0316],\n        [0.0313],\n        [0.0415],\n        [0.0359],\n        [0.0302],\n        [0.0299],\n        [0.0271],\n        [0.0236],\n        [0.0329],\n        [0.0258],\n        [0.0291],\n        [0.0292],\n        [0.0349],\n        [0.0228],\n        [0.0305],\n        [0.0362],\n        [0.0266],\n        [0.0245],\n        [0.0142],\n        [0.0306],\n        [0.0279],\n        [0.0274],\n        [0.0197],\n        [0.0214],\n        [0.0342]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956147.842469}]}, "version": 633}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956147.8434463}]}, "version": 634}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.0944061279297, "step": null, "ts": 1644956147.844685}]}, "version": 635}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.151458278298378, "step": null, "ts": 1644956147.9408479}]}, "version": 636}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.791274070739746, "step": null, "ts": 1644956147.949636}]}, "version": 637}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.755896270275116, "step": null, "ts": 1644956148.4208627}]}, "version": 638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4412e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956148.4286184}]}, "version": 639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956148.4296982}]}, "version": 640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9842e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956148.4312537}]}, "version": 641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956148.4323082}]}, "version": 642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6309e-06, 2.1687e-06, 2.2129e-06,  ..., 3.7898e-06, 2.4425e-06,\n         3.4681e-06],\n        [5.1172e-06, 1.6601e-06, 2.1894e-06,  ..., 4.3097e-06, 2.3005e-06,\n         2.1241e-06],\n        [5.8053e-06, 1.7262e-06, 4.6198e-06,  ..., 2.6865e-06, 2.8041e-06,\n         4.3807e-06],\n        ...,\n        [4.1779e-06, 3.0539e-06, 2.5351e-06,  ..., 3.4596e-06, 3.1762e-06,\n         2.8121e-06],\n        [5.2926e-06, 1.6207e-06, 1.9420e-06,  ..., 4.2980e-06, 3.1841e-06,\n         5.1242e-06],\n        [4.1835e-06, 1.9567e-06, 1.5840e-06,  ..., 3.6385e-06, 2.3665e-06,\n         2.4950e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956148.4349022}]}, "version": 643}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956148.4360201}]}, "version": 644}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0426],\n        [0.0402],\n        [0.0217],\n        [0.0532],\n        [0.0268],\n        [0.0382],\n        [0.0270],\n        [0.0424],\n        [0.0283],\n        [0.0258],\n        [0.0375],\n        [0.0412],\n        [0.0262],\n        [0.0374],\n        [0.0263],\n        [0.0579],\n        [0.0234],\n        [0.0150],\n        [0.0246],\n        [0.0216],\n        [0.0346],\n        [0.0239],\n        [0.0422],\n        [0.0262],\n        [0.0367],\n        [0.0275],\n        [0.0494],\n        [0.0237],\n        [0.0363],\n        [0.0308],\n        [0.0186],\n        [0.0276],\n        [0.0356],\n        [0.0286],\n        [0.0565],\n        [0.0345],\n        [0.0323],\n        [0.0237],\n        [0.0286],\n        [0.0289],\n        [0.0261],\n        [0.0279]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956148.439009}]}, "version": 645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956148.440112}]}, "version": 646}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.6316375732422, "step": null, "ts": 1644956148.4412713}]}, "version": 647}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.37527376413345337, "step": null, "ts": 1644956148.5329452}]}, "version": 648}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.654718399047852, "step": null, "ts": 1644956148.5404725}]}, "version": 649}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7045120000839233, "step": null, "ts": 1644956149.0155551}]}, "version": 650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5536e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956149.0303314}]}, "version": 651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.0312827}]}, "version": 652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.2683e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956149.0327306}]}, "version": 653}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.0337348}]}, "version": 654}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.1316e-06, 1.8675e-06, 2.9414e-06,  ..., 3.9995e-06, 3.4443e-06,\n         4.2202e-06],\n        [7.1091e-06, 1.2374e-06, 2.4219e-06,  ..., 2.3401e-06, 2.9020e-06,\n         2.6881e-06],\n        [5.5063e-06, 2.2385e-06, 2.5506e-06,  ..., 2.4403e-06, 2.4830e-06,\n         2.7384e-06],\n        ...,\n        [4.1479e-06, 2.0938e-06, 3.3273e-06,  ..., 3.4542e-06, 3.8667e-06,\n         3.2670e-06],\n        [3.8830e-06, 1.9846e-06, 3.2601e-06,  ..., 3.5069e-06, 3.0521e-06,\n         2.7848e-06],\n        [4.8901e-06, 2.3225e-06, 2.2489e-06,  ..., 1.9239e-06, 3.1860e-06,\n         3.0754e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956149.0362897}]}, "version": 655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.037304}]}, "version": 656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0371],\n        [0.0300],\n        [0.0200],\n        [0.0368],\n        [0.0400],\n        [0.0325],\n        [0.0441],\n        [0.0393],\n        [0.0256],\n        [0.0422],\n        [0.0362],\n        [0.0241],\n        [0.0213],\n        [0.0220],\n        [0.0383],\n        [0.0239],\n        [0.0386],\n        [0.0299],\n        [0.0256],\n        [0.0416],\n        [0.0448],\n        [0.0437],\n        [0.0296],\n        [0.0505],\n        [0.0140],\n        [0.0306],\n        [0.0410],\n        [0.0363],\n        [0.0233],\n        [0.0206],\n        [0.0325],\n        [0.0727],\n        [0.0280],\n        [0.0310],\n        [0.0384],\n        [0.0221],\n        [0.0424],\n        [0.0302],\n        [0.0547],\n        [0.0283],\n        [0.0429],\n        [0.0328]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956149.040468}]}, "version": 657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.0415602}]}, "version": 658}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.5401611328125, "step": null, "ts": 1644956149.0430136}]}, "version": 659}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20550669729709625, "step": null, "ts": 1644956149.1279392}]}, "version": 660}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.696579933166504, "step": null, "ts": 1644956149.1345663}]}, "version": 661}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.832548975944519, "step": null, "ts": 1644956149.6295834}]}, "version": 662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4258e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956149.6394188}]}, "version": 663}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.643162}]}, "version": 664}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.3670e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956149.644321}]}, "version": 665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.6451955}]}, "version": 666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.7198e-06, 1.8647e-06, 3.6451e-06,  ..., 2.3068e-06, 2.3490e-06,\n         2.8701e-06],\n        [3.8708e-06, 1.7557e-06, 1.6861e-06,  ..., 3.2944e-06, 3.3325e-06,\n         3.1033e-06],\n        [3.8868e-06, 1.5641e-06, 1.4082e-06,  ..., 2.8392e-06, 3.6606e-06,\n         3.7421e-06],\n        ...,\n        [3.6490e-06, 1.8666e-06, 1.7248e-06,  ..., 2.8158e-06, 3.3322e-06,\n         1.7085e-06],\n        [2.9092e-06, 2.7417e-06, 1.7676e-06,  ..., 3.0326e-06, 5.0399e-06,\n         2.5312e-06],\n        [7.0028e-06, 6.5262e-07, 9.8078e-07,  ..., 2.0902e-06, 1.0550e-06,\n         2.6934e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956149.6474679}]}, "version": 667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.648373}]}, "version": 668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0221],\n        [0.0411],\n        [0.0255],\n        [0.0230],\n        [0.0250],\n        [0.0243],\n        [0.0249],\n        [0.0280],\n        [0.0364],\n        [0.0306],\n        [0.0342],\n        [0.0511],\n        [0.0347],\n        [0.0110],\n        [0.0490],\n        [0.0378],\n        [0.0337],\n        [0.0245],\n        [0.0316],\n        [0.0248],\n        [0.1074],\n        [0.0271],\n        [0.0451],\n        [0.0246],\n        [0.0421],\n        [0.0280],\n        [0.0297],\n        [0.0286],\n        [0.0338],\n        [0.0375],\n        [0.0336],\n        [0.0340],\n        [0.0271],\n        [0.0421],\n        [0.0363],\n        [0.0460],\n        [0.0443],\n        [0.0327],\n        [0.0253],\n        [0.0326],\n        [0.0367],\n        [0.0302]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956149.6512167}]}, "version": 669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956149.6521254}]}, "version": 670}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 156.98489379882812, "step": null, "ts": 1644956149.6532238}]}, "version": 671}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20454518496990204, "step": null, "ts": 1644956149.7457573}]}, "version": 672}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.663036346435547, "step": null, "ts": 1644956149.7572773}]}, "version": 673}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8785760402679443, "step": null, "ts": 1644956150.2360842}]}, "version": 674}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3885e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956150.2466779}]}, "version": 675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.254497}]}, "version": 676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.3315e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956150.2558959}]}, "version": 677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.25736}]}, "version": 678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6697e-06, 2.4642e-06, 3.3613e-06,  ..., 3.0130e-06, 3.9114e-06,\n         3.4204e-06],\n        [3.1249e-06, 1.9134e-06, 2.7246e-06,  ..., 3.3691e-06, 4.1874e-06,\n         1.9604e-06],\n        [3.7881e-06, 1.6314e-06, 1.4584e-06,  ..., 3.1623e-06, 2.5042e-06,\n         2.8875e-06],\n        ...,\n        [1.1549e-05, 4.3315e-07, 1.4432e-06,  ..., 8.5451e-07, 2.4645e-06,\n         1.9474e-06],\n        [4.4474e-06, 1.7437e-06, 1.7906e-06,  ..., 3.5925e-06, 1.2118e-06,\n         2.5360e-06],\n        [3.2686e-06, 1.8564e-06, 4.0978e-06,  ..., 3.3897e-06, 3.0494e-06,\n         2.7857e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956150.259837}]}, "version": 679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.260652}]}, "version": 680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0304],\n        [0.0286],\n        [0.0296],\n        [0.0254],\n        [0.0410],\n        [0.0210],\n        [0.0269],\n        [0.0216],\n        [0.0461],\n        [0.0236],\n        [0.0231],\n        [0.0395],\n        [0.0258],\n        [0.0413],\n        [0.0265],\n        [0.0347],\n        [0.0318],\n        [0.0430],\n        [0.0213],\n        [0.0430],\n        [0.0301],\n        [0.0349],\n        [0.0658],\n        [0.0247],\n        [0.0324],\n        [0.0196],\n        [0.0320],\n        [0.0309],\n        [0.0245],\n        [0.0414],\n        [0.0542],\n        [0.0267],\n        [0.0351],\n        [0.0531],\n        [0.0519],\n        [0.0325],\n        [0.0304],\n        [0.0239],\n        [0.0312],\n        [0.0251],\n        [0.0323],\n        [0.0300]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956150.2634594}]}, "version": 681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.2640295}]}, "version": 682}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.7115478515625, "step": null, "ts": 1644956150.2651002}]}, "version": 683}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2648724317550659, "step": null, "ts": 1644956150.356393}]}, "version": 684}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.832038879394531, "step": null, "ts": 1644956150.3660038}]}, "version": 685}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1513025760650635, "step": null, "ts": 1644956150.85537}]}, "version": 686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1491e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956150.868024}]}, "version": 687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.8770983}]}, "version": 688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.7536e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956150.8785577}]}, "version": 689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.8795254}]}, "version": 690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3590e-06, 1.3427e-06, 3.3627e-06,  ..., 3.2730e-06, 2.3314e-06,\n         2.3086e-06],\n        [3.2229e-06, 1.6801e-06, 2.7049e-06,  ..., 2.4712e-06, 3.9719e-06,\n         3.3645e-06],\n        [4.8471e-06, 2.2382e-06, 2.2470e-06,  ..., 2.8108e-06, 2.2459e-06,\n         2.8046e-06],\n        ...,\n        [8.1059e-06, 4.3088e-07, 5.4754e-07,  ..., 6.3076e-06, 2.1753e-06,\n         2.5290e-06],\n        [6.4510e-06, 2.8208e-06, 3.9215e-06,  ..., 4.7168e-06, 3.3738e-06,\n         2.3735e-06],\n        [3.9840e-06, 3.4151e-06, 3.0398e-06,  ..., 3.3685e-06, 3.5198e-06,\n         1.7524e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956150.8820853}]}, "version": 691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.8830109}]}, "version": 692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0326],\n        [0.0456],\n        [0.0369],\n        [0.0226],\n        [0.0238],\n        [0.0356],\n        [0.0295],\n        [0.0347],\n        [0.0287],\n        [0.0437],\n        [0.0346],\n        [0.0510],\n        [0.0448],\n        [0.0371],\n        [0.0266],\n        [0.0357],\n        [0.0317],\n        [0.0268],\n        [0.0380],\n        [0.0312],\n        [0.0306],\n        [0.0302],\n        [0.0208],\n        [0.0278],\n        [0.0287],\n        [0.0284],\n        [0.0330],\n        [0.0202],\n        [0.0280],\n        [0.0421],\n        [0.0230],\n        [0.0297],\n        [0.0389],\n        [0.0433],\n        [0.0447],\n        [0.0198],\n        [0.0368],\n        [0.0289],\n        [0.0249],\n        [0.0286],\n        [0.0322],\n        [0.0244]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956150.8860416}]}, "version": 693}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956150.8869555}]}, "version": 694}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.3040313720703, "step": null, "ts": 1644956150.8881207}]}, "version": 695}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27503037452697754, "step": null, "ts": 1644956150.9821599}]}, "version": 696}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.795928001403809, "step": null, "ts": 1644956150.9931762}]}, "version": 697}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7999627590179443, "step": null, "ts": 1644956151.4434927}]}, "version": 698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5949e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956151.4548388}]}, "version": 699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956151.4556599}]}, "version": 700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.5989e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956151.456761}]}, "version": 701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956151.4576254}]}, "version": 702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0126e-06, 3.9836e-06, 3.4953e-06,  ..., 2.9111e-06, 5.9470e-06,\n         1.8297e-06],\n        [4.5694e-06, 1.6038e-06, 2.4031e-06,  ..., 2.6489e-06, 3.4710e-06,\n         3.6697e-06],\n        [4.2106e-06, 2.5852e-06, 2.6301e-06,  ..., 2.8326e-06, 2.3684e-06,\n         3.8531e-06],\n        ...,\n        [7.7882e-06, 1.5257e-06, 2.6909e-06,  ..., 2.8779e-06, 2.4778e-06,\n         4.0476e-06],\n        [4.7267e-06, 2.3455e-06, 2.6169e-06,  ..., 4.2387e-06, 3.4690e-06,\n         1.0440e-05],\n        [4.5020e-06, 2.1851e-06, 2.2583e-06,  ..., 2.8286e-06, 2.0595e-06,\n         3.0456e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956151.4601426}]}, "version": 703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956151.460857}]}, "version": 704}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0229],\n        [0.0457],\n        [0.0324],\n        [0.0304],\n        [0.0247],\n        [0.0461],\n        [0.0235],\n        [0.0148],\n        [0.0386],\n        [0.0195],\n        [0.0193],\n        [0.0301],\n        [0.0327],\n        [0.0401],\n        [0.0307],\n        [0.0328],\n        [0.0519],\n        [0.0266],\n        [0.0398],\n        [0.0300],\n        [0.0371],\n        [0.0226],\n        [0.0212],\n        [0.0298],\n        [0.0239],\n        [0.0229],\n        [0.0425],\n        [0.0445],\n        [0.0332],\n        [0.0272],\n        [0.0338],\n        [0.0242],\n        [0.0340],\n        [0.0318],\n        [0.0353],\n        [0.0246],\n        [0.0345],\n        [0.0352],\n        [0.0824],\n        [0.0298],\n        [0.0400],\n        [0.0433]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956151.463596}]}, "version": 705}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956151.4645076}]}, "version": 706}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.0965118408203, "step": null, "ts": 1644956151.4657125}]}, "version": 707}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2779468297958374, "step": null, "ts": 1644956151.5540135}]}, "version": 708}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.707830429077148, "step": null, "ts": 1644956151.5629666}]}, "version": 709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.570 (0.570)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956151.811636}]}, "version": 710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956151.8126547}]}, "version": 711}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8045385479927063, "step": null, "ts": 1644956152.0408435}]}, "version": 712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1845e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956152.0503645}]}, "version": 713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.0596957}]}, "version": 714}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.1424e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956152.0608926}]}, "version": 715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.0616746}]}, "version": 716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.0795e-06, 1.6728e-06, 1.9017e-06,  ..., 4.8541e-06, 3.1914e-06,\n         2.3754e-06],\n        [4.7794e-06, 1.9738e-06, 3.6204e-06,  ..., 2.2350e-06, 3.4200e-06,\n         3.6524e-06],\n        [4.7157e-06, 1.8271e-06, 2.3958e-06,  ..., 3.9849e-06, 2.0236e-06,\n         1.7616e-06],\n        ...,\n        [5.0728e-06, 1.3347e-06, 7.2258e-06,  ..., 3.9486e-06, 9.9138e-07,\n         2.3093e-06],\n        [3.7628e-06, 2.0497e-06, 2.8565e-06,  ..., 2.6705e-06, 2.7787e-06,\n         2.7009e-06],\n        [2.6349e-06, 1.6199e-06, 1.6044e-06,  ..., 2.1053e-06, 3.0866e-06,\n         2.7188e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956152.0642006}]}, "version": 717}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.0651097}]}, "version": 718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0293],\n        [0.0425],\n        [0.0300],\n        [0.0295],\n        [0.0142],\n        [0.0258],\n        [0.0341],\n        [0.0346],\n        [0.0246],\n        [0.0423],\n        [0.0288],\n        [0.0435],\n        [0.0487],\n        [0.0297],\n        [0.0243],\n        [0.0191],\n        [0.0384],\n        [0.0275],\n        [0.0325],\n        [0.0218],\n        [0.0364],\n        [0.0434],\n        [0.0382],\n        [0.0409],\n        [0.0440],\n        [0.0369],\n        [0.0250],\n        [0.0438],\n        [0.0286],\n        [0.0271],\n        [0.0215],\n        [0.0293],\n        [0.0245],\n        [0.0255],\n        [0.0491],\n        [0.0309],\n        [0.0376],\n        [0.0348],\n        [0.0171],\n        [0.1008],\n        [0.0339],\n        [0.0259]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956152.0679684}]}, "version": 719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.073959}]}, "version": 720}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.50955200195312, "step": null, "ts": 1644956152.0751743}]}, "version": 721}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4009731113910675, "step": null, "ts": 1644956152.1600254}]}, "version": 722}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.791021347045898, "step": null, "ts": 1644956152.1733356}]}, "version": 723}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8842369318008423, "step": null, "ts": 1644956152.6431012}]}, "version": 724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9848e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956152.6544876}]}, "version": 725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.6555145}]}, "version": 726}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0754e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956152.6570573}]}, "version": 727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.658066}]}, "version": 728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.7836e-06, 1.6088e-06, 3.0534e-06,  ..., 2.6927e-06, 2.6166e-06,\n         3.4627e-06],\n        [3.6751e-06, 2.5607e-06, 4.0043e-06,  ..., 2.2704e-06, 2.8752e-06,\n         2.6423e-06],\n        [3.9610e-06, 2.3929e-06, 2.5376e-06,  ..., 2.5040e-06, 2.5712e-06,\n         2.4478e-06],\n        ...,\n        [1.2792e-05, 2.5680e-06, 1.5446e-06,  ..., 1.0020e-06, 1.7202e-06,\n         1.4600e-06],\n        [5.3055e-06, 2.7163e-06, 1.6794e-06,  ..., 3.4712e-06, 4.7352e-06,\n         5.5217e-06],\n        [6.4774e-06, 1.6277e-06, 2.6714e-06,  ..., 2.0936e-06, 3.0402e-06,\n         4.5975e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956152.660502}]}, "version": 729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.6616879}]}, "version": 730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0465],\n        [0.0368],\n        [0.0302],\n        [0.0230],\n        [0.0617],\n        [0.0194],\n        [0.0323],\n        [0.0424],\n        [0.0427],\n        [0.0516],\n        [0.0282],\n        [0.0416],\n        [0.0359],\n        [0.0283],\n        [0.0334],\n        [0.0324],\n        [0.0259],\n        [0.0252],\n        [0.0352],\n        [0.0332],\n        [0.0194],\n        [0.0281],\n        [0.0347],\n        [0.0267],\n        [0.0219],\n        [0.0388],\n        [0.0422],\n        [0.0556],\n        [0.0413],\n        [0.0469],\n        [0.0329],\n        [0.0353],\n        [0.0210],\n        [0.0422],\n        [0.0309],\n        [0.0174],\n        [0.0183],\n        [0.0311],\n        [0.0390],\n        [0.0200],\n        [0.0170],\n        [0.0478]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956152.6648936}]}, "version": 731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956152.6658185}]}, "version": 732}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.3368377685547, "step": null, "ts": 1644956152.6669703}]}, "version": 733}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3231256306171417, "step": null, "ts": 1644956152.7688963}]}, "version": 734}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.682591438293457, "step": null, "ts": 1644956152.7822845}]}, "version": 735}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5883556008338928, "step": null, "ts": 1644956153.2502012}]}, "version": 736}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1377e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956153.2525542}]}, "version": 737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956153.2536392}]}, "version": 738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9357e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956153.2552984}]}, "version": 739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956153.2563987}]}, "version": 740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.8960e-06, 2.0555e-06, 2.4085e-06,  ..., 2.3615e-06, 1.8633e-06,\n         3.6107e-06],\n        [2.4638e-06, 2.2532e-06, 3.4935e-06,  ..., 4.0170e-06, 5.8219e-06,\n         1.0648e-05],\n        [5.3794e-06, 2.8736e-06, 3.4282e-06,  ..., 1.5060e-06, 2.7017e-06,\n         2.7462e-06],\n        ...,\n        [3.6494e-06, 2.4210e-06, 2.5660e-06,  ..., 3.4972e-06, 3.0022e-06,\n         2.7729e-06],\n        [4.7246e-06, 1.7791e-06, 2.8470e-06,  ..., 2.2217e-06, 2.4220e-06,\n         3.6086e-06],\n        [4.4075e-06, 3.0933e-06, 2.8783e-06,  ..., 3.5188e-06, 2.2037e-06,\n         2.4848e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956153.2590861}]}, "version": 741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956153.260102}]}, "version": 742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0372],\n        [0.0315],\n        [0.0359],\n        [0.0289],\n        [0.0178],\n        [0.0220],\n        [0.0407],\n        [0.0457],\n        [0.0409],\n        [0.0366],\n        [0.0305],\n        [0.0317],\n        [0.0313],\n        [0.0379],\n        [0.0267],\n        [0.0329],\n        [0.0247],\n        [0.0284],\n        [0.0601],\n        [0.0303],\n        [0.0329],\n        [0.0382],\n        [0.0282],\n        [0.0262],\n        [0.0251],\n        [0.0927],\n        [0.0260],\n        [0.0153],\n        [0.0312],\n        [0.0278],\n        [0.0208],\n        [0.0326],\n        [0.0370],\n        [0.0115],\n        [0.0247],\n        [0.0306],\n        [0.0292],\n        [0.0442],\n        [0.0467],\n        [0.0317],\n        [0.0351],\n        [0.0223]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956153.263223}]}, "version": 743}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956153.26411}]}, "version": 744}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.67828369140625, "step": null, "ts": 1644956153.2652137}]}, "version": 745}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3946789503097534, "step": null, "ts": 1644956153.3595526}]}, "version": 746}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.75811767578125, "step": null, "ts": 1644956153.363913}]}, "version": 747}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6319329738616943, "step": null, "ts": 1644956154.084169}]}, "version": 748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0953e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956154.0919535}]}, "version": 749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.0926616}]}, "version": 750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5324e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956154.0938056}]}, "version": 751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.0943992}]}, "version": 752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.5276e-06, 1.6334e-06, 3.2920e-06,  ..., 2.7496e-06, 2.2450e-06,\n         3.2600e-06],\n        [6.3755e-06, 1.1639e-06, 1.6035e-06,  ..., 2.1586e-06, 2.3368e-06,\n         3.1134e-06],\n        [7.1201e-06, 1.3034e-06, 2.1520e-06,  ..., 4.8440e-06, 2.7563e-06,\n         3.7203e-06],\n        ...,\n        [4.1778e-06, 1.9658e-06, 1.8965e-06,  ..., 2.6250e-06, 2.4922e-06,\n         3.3383e-06],\n        [8.3188e-06, 1.0178e-06, 2.7582e-06,  ..., 2.8140e-06, 2.9601e-06,\n         1.6742e-06],\n        [4.6009e-06, 2.0145e-06, 2.8816e-06,  ..., 6.7195e-06, 3.1955e-06,\n         4.5416e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956154.0967689}]}, "version": 753}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.1030254}]}, "version": 754}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0354],\n        [0.0265],\n        [0.0558],\n        [0.0297],\n        [0.0200],\n        [0.0351],\n        [0.0311],\n        [0.0271],\n        [0.0237],\n        [0.0289],\n        [0.0508],\n        [0.0246],\n        [0.0291],\n        [0.0403],\n        [0.0461],\n        [0.0315],\n        [0.0132],\n        [0.0483],\n        [0.0726],\n        [0.0287],\n        [0.0285],\n        [0.0182],\n        [0.0372],\n        [0.0238],\n        [0.0305],\n        [0.0312],\n        [0.0341],\n        [0.0260],\n        [0.0497],\n        [0.0359],\n        [0.0331],\n        [0.0235],\n        [0.0338],\n        [0.0385],\n        [0.0281],\n        [0.0465],\n        [0.0204],\n        [0.0364],\n        [0.0267],\n        [0.0260],\n        [0.0466],\n        [0.0412]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956154.1057894}]}, "version": 755}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.1065164}]}, "version": 756}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.41891479492188, "step": null, "ts": 1644956154.1077645}]}, "version": 757}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956154.1929996}]}, "version": 758}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.032997131347656, "step": null, "ts": 1644956154.1929996}]}, "version": 759}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 69.0, "step": null, "ts": 1644956154.1929996}]}, "version": 760}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644956154.1929996}]}, "version": 761}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.28008219599723816, "step": null, "ts": 1644956154.1988225}]}, "version": 762}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.795012474060059, "step": null, "ts": 1644956154.2065744}]}, "version": 763}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7197707295417786, "step": null, "ts": 1644956154.6787882}]}, "version": 764}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1608e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956154.687714}]}, "version": 765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.6927104}]}, "version": 766}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8436e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956154.694182}]}, "version": 767}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.6950517}]}, "version": 768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.0869e-06, 8.7565e-07, 4.1180e-06,  ..., 4.5317e-06, 2.8491e-06,\n         2.2430e-06],\n        [5.0590e-06, 7.1748e-07, 3.0293e-06,  ..., 1.4067e-06, 2.0863e-06,\n         2.6820e-06],\n        [4.1325e-06, 2.1014e-06, 2.5719e-06,  ..., 2.9169e-06, 2.5324e-06,\n         3.4262e-06],\n        ...,\n        [4.4858e-06, 2.8363e-06, 2.4978e-06,  ..., 3.0131e-06, 2.3084e-06,\n         3.4703e-06],\n        [4.8487e-06, 2.4589e-06, 2.2859e-06,  ..., 3.5327e-06, 2.2814e-06,\n         1.8501e-06],\n        [4.6277e-06, 2.8514e-06, 2.8545e-06,  ..., 4.3698e-06, 2.4262e-06,\n         2.8573e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956154.697401}]}, "version": 769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.6979613}]}, "version": 770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0885],\n        [0.0470],\n        [0.0242],\n        [0.0428],\n        [0.0337],\n        [0.0292],\n        [0.0347],\n        [0.0259],\n        [0.0913],\n        [0.0193],\n        [0.0280],\n        [0.0231],\n        [0.0235],\n        [0.0310],\n        [0.0382],\n        [0.0266],\n        [0.0446],\n        [0.0426],\n        [0.0405],\n        [0.0233],\n        [0.0420],\n        [0.0190],\n        [0.0297],\n        [0.0230],\n        [0.0295],\n        [0.0173],\n        [0.0327],\n        [0.0376],\n        [0.0413],\n        [0.0286],\n        [0.0192],\n        [0.0305],\n        [0.0323],\n        [0.0331],\n        [0.0420],\n        [0.0451],\n        [0.0179],\n        [0.0226],\n        [0.0244],\n        [0.0292],\n        [0.0367],\n        [0.0207]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956154.7006948}]}, "version": 771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956154.7015846}]}, "version": 772}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.3848419189453, "step": null, "ts": 1644956154.7029617}]}, "version": 773}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25423240661621094, "step": null, "ts": 1644956154.8080301}]}, "version": 774}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.660897254943848, "step": null, "ts": 1644956154.8133197}]}, "version": 775}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343167901039124, "step": null, "ts": 1644956155.2925463}]}, "version": 776}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.2319e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956155.3074586}]}, "version": 777}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.3086743}]}, "version": 778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0250e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956155.3100572}]}, "version": 779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.3110723}]}, "version": 780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6384e-06, 1.1798e-06, 2.6430e-06,  ..., 2.5118e-06, 2.0144e-06,\n         3.7128e-06],\n        [5.8666e-06, 3.7166e-07, 8.2154e-07,  ..., 7.8214e-07, 1.1738e-06,\n         1.0870e-06],\n        [1.4928e-05, 1.2864e-06, 2.4101e-06,  ..., 2.5632e-06, 2.6720e-06,\n         2.6144e-06],\n        ...,\n        [5.6029e-06, 2.2914e-06, 1.9769e-06,  ..., 2.5137e-06, 2.6804e-06,\n         3.8442e-06],\n        [6.6621e-06, 2.1062e-06, 1.3018e-06,  ..., 3.2740e-06, 5.4263e-06,\n         2.3678e-06],\n        [4.0986e-06, 1.7463e-06, 2.8779e-06,  ..., 2.5574e-06, 3.0712e-06,\n         2.5479e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956155.313306}]}, "version": 781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.3157206}]}, "version": 782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0243],\n        [0.0245],\n        [0.0347],\n        [0.0364],\n        [0.0453],\n        [0.0368],\n        [0.0391],\n        [0.0462],\n        [0.0320],\n        [0.0324],\n        [0.0481],\n        [0.0285],\n        [0.0803],\n        [0.0140],\n        [0.0285],\n        [0.0255],\n        [0.0403],\n        [0.0237],\n        [0.0300],\n        [0.0199],\n        [0.0224],\n        [0.0228],\n        [0.0338],\n        [0.0332],\n        [0.0343],\n        [0.0264],\n        [0.0420],\n        [0.0240],\n        [0.0318],\n        [0.0354],\n        [0.0206],\n        [0.0422],\n        [0.0270],\n        [0.0373],\n        [0.0561],\n        [0.0276],\n        [0.0358],\n        [0.0346],\n        [0.0423],\n        [0.0380],\n        [0.0194],\n        [0.0392]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956155.318642}]}, "version": 783}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.3195407}]}, "version": 784}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.24473571777344, "step": null, "ts": 1644956155.320718}]}, "version": 785}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1704740822315216, "step": null, "ts": 1644956155.4138832}]}, "version": 786}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.689519882202148, "step": null, "ts": 1644956155.426587}]}, "version": 787}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8749030232429504, "step": null, "ts": 1644956155.8984802}]}, "version": 788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3511e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956155.9056108}]}, "version": 789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.9066947}]}, "version": 790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8229e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956155.9078605}]}, "version": 791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.9086637}]}, "version": 792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.6299e-06, 2.2193e-06, 2.1191e-06,  ..., 3.3185e-06, 1.8447e-06,\n         4.4734e-06],\n        [3.9144e-06, 1.9647e-06, 2.8558e-06,  ..., 2.1958e-06, 3.5727e-06,\n         2.9748e-06],\n        [3.3090e-06, 2.1426e-06, 4.1909e-06,  ..., 3.1726e-06, 2.3818e-06,\n         2.3395e-06],\n        ...,\n        [4.5452e-06, 2.1335e-06, 2.6237e-06,  ..., 2.7009e-06, 2.6039e-06,\n         3.4413e-06],\n        [4.9469e-06, 1.2898e-06, 1.8667e-06,  ..., 4.7128e-06, 1.7907e-06,\n         3.1000e-06],\n        [9.1153e-06, 7.9980e-07, 2.7953e-06,  ..., 4.4637e-06, 3.4064e-06,\n         5.2265e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956155.9108346}]}, "version": 793}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.9114912}]}, "version": 794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0398],\n        [0.0484],\n        [0.0299],\n        [0.0280],\n        [0.0451],\n        [0.0394],\n        [0.0247],\n        [0.0240],\n        [0.0278],\n        [0.0275],\n        [0.0325],\n        [0.0879],\n        [0.0343],\n        [0.0277],\n        [0.0265],\n        [0.0350],\n        [0.0307],\n        [0.0413],\n        [0.0289],\n        [0.0538],\n        [0.0352],\n        [0.0333],\n        [0.0287],\n        [0.0843],\n        [0.0173],\n        [0.0171],\n        [0.0338],\n        [0.0173],\n        [0.0270],\n        [0.0302],\n        [0.0123],\n        [0.0292],\n        [0.0431],\n        [0.0366],\n        [0.0223],\n        [0.0302],\n        [0.0263],\n        [0.0194],\n        [0.0229],\n        [0.0368],\n        [0.0372],\n        [0.0424]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956155.914593}]}, "version": 795}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956155.9168644}]}, "version": 796}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.24749755859375, "step": null, "ts": 1644956155.9179409}]}, "version": 797}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27369993925094604, "step": null, "ts": 1644956156.011315}]}, "version": 798}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.733611106872559, "step": null, "ts": 1644956156.0239086}]}, "version": 799}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.4247816801071167, "step": null, "ts": 1644956156.4963727}]}, "version": 800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1319e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956156.5115027}]}, "version": 801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956156.5203774}]}, "version": 802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.7013e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956156.521953}]}, "version": 803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956156.5230994}]}, "version": 804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.2843e-06, 1.9918e-06, 3.0952e-06,  ..., 1.8266e-06, 4.5170e-06,\n         2.3683e-06],\n        [5.0446e-06, 1.1446e-06, 5.4794e-06,  ..., 2.6376e-06, 2.0362e-06,\n         4.9708e-06],\n        [4.1325e-06, 2.2997e-06, 2.4952e-06,  ..., 2.5730e-06, 3.3362e-06,\n         2.3869e-06],\n        ...,\n        [4.7367e-06, 1.1422e-06, 1.7686e-06,  ..., 3.3130e-06, 1.6534e-06,\n         2.8778e-06],\n        [3.8579e-06, 1.9692e-06, 2.5662e-06,  ..., 3.5330e-06, 3.1387e-06,\n         3.1660e-06],\n        [3.9378e-06, 1.6484e-06, 2.4070e-06,  ..., 3.6179e-06, 1.4913e-06,\n         4.4430e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956156.525637}]}, "version": 805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956156.5265749}]}, "version": 806}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0383],\n        [0.0204],\n        [0.0423],\n        [0.0473],\n        [0.0230],\n        [0.0297],\n        [0.0367],\n        [0.0295],\n        [0.0279],\n        [0.0380],\n        [0.0272],\n        [0.0307],\n        [0.0224],\n        [0.0505],\n        [0.0302],\n        [0.0213],\n        [0.0839],\n        [0.0313],\n        [0.0145],\n        [0.0618],\n        [0.0858],\n        [0.0241],\n        [0.0261],\n        [0.0297],\n        [0.0470],\n        [0.0293],\n        [0.0242],\n        [0.0274],\n        [0.0290],\n        [0.0255],\n        [0.0225],\n        [0.0328],\n        [0.0284],\n        [0.0148],\n        [0.0442],\n        [0.0338],\n        [0.0277],\n        [0.0423],\n        [0.0290],\n        [0.0239],\n        [0.0327],\n        [0.0270]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956156.5295987}]}, "version": 807}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956156.5304766}]}, "version": 808}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.29522705078125, "step": null, "ts": 1644956156.5315142}]}, "version": 809}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40446531772613525, "step": null, "ts": 1644956156.6301827}]}, "version": 810}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.783297538757324, "step": null, "ts": 1644956156.6349921}]}, "version": 811}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8861426711082458, "step": null, "ts": 1644956157.1253276}]}, "version": 812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8435e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956157.1331205}]}, "version": 813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.1341114}]}, "version": 814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3302e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956157.1352983}]}, "version": 815}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.1362295}]}, "version": 816}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3662e-06, 1.4842e-06, 5.3291e-06,  ..., 4.0106e-06, 2.1551e-06,\n         2.0372e-06],\n        [4.3279e-06, 2.9260e-06, 3.2035e-06,  ..., 4.4911e-06, 2.8812e-06,\n         3.8444e-06],\n        [1.1590e-05, 7.9266e-07, 2.3612e-06,  ..., 1.0076e-06, 2.2814e-06,\n         3.9176e-06],\n        ...,\n        [5.4413e-06, 1.0958e-06, 8.0294e-07,  ..., 1.8942e-06, 2.1123e-06,\n         1.8435e-05],\n        [4.9832e-06, 2.8185e-06, 3.4483e-06,  ..., 3.3463e-06, 3.9111e-06,\n         3.0701e-06],\n        [3.4678e-06, 2.7648e-06, 1.4746e-06,  ..., 2.2423e-06, 2.8016e-06,\n         3.5388e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956157.1385674}]}, "version": 817}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.1396906}]}, "version": 818}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0566],\n        [0.0537],\n        [0.0355],\n        [0.0222],\n        [0.0253],\n        [0.0220],\n        [0.0231],\n        [0.0174],\n        [0.0314],\n        [0.0284],\n        [0.0257],\n        [0.0299],\n        [0.0210],\n        [0.0374],\n        [0.0263],\n        [0.0345],\n        [0.0229],\n        [0.0412],\n        [0.0364],\n        [0.0267],\n        [0.0287],\n        [0.0413],\n        [0.0276],\n        [0.0279],\n        [0.0289],\n        [0.0506],\n        [0.0338],\n        [0.0312],\n        [0.0284],\n        [0.0291],\n        [0.0188],\n        [0.0675],\n        [0.0353],\n        [0.0346],\n        [0.0286],\n        [0.0250],\n        [0.0435],\n        [0.0370],\n        [0.0306],\n        [0.0159],\n        [0.0215],\n        [0.0496]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956157.1428692}]}, "version": 819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.14378}]}, "version": 820}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 159.23008728027344, "step": null, "ts": 1644956157.1449387}]}, "version": 821}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24977482855319977, "step": null, "ts": 1644956157.2384074}]}, "version": 822}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.722794532775879, "step": null, "ts": 1644956157.2487392}]}, "version": 823}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8108454346656799, "step": null, "ts": 1644956157.7243986}]}, "version": 824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2275e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956157.7325053}]}, "version": 825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.736855}]}, "version": 826}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.3268e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956157.738047}]}, "version": 827}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.738783}]}, "version": 828}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.6873e-06, 2.0057e-06, 1.9144e-06,  ..., 2.0451e-06, 3.0639e-06,\n         2.5581e-06],\n        [7.9838e-06, 2.4520e-06, 3.7171e-06,  ..., 5.3538e-06, 2.0029e-06,\n         1.4018e-06],\n        [7.4571e-06, 1.0071e-06, 1.3851e-06,  ..., 4.7690e-06, 1.9548e-06,\n         6.3301e-06],\n        ...,\n        [5.3972e-06, 2.0323e-06, 3.1508e-06,  ..., 2.8454e-06, 2.2701e-06,\n         2.0983e-06],\n        [5.3239e-06, 7.0605e-07, 4.3372e-06,  ..., 2.5911e-06, 2.2980e-06,\n         2.3912e-06],\n        [5.0235e-06, 1.5473e-06, 3.0168e-06,  ..., 5.7458e-06, 2.8509e-06,\n         3.3119e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956157.7410307}]}, "version": 829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.7463615}]}, "version": 830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0368],\n        [0.0277],\n        [0.0141],\n        [0.0369],\n        [0.0384],\n        [0.0572],\n        [0.0219],\n        [0.0234],\n        [0.0401],\n        [0.0290],\n        [0.0383],\n        [0.0281],\n        [0.0587],\n        [0.0208],\n        [0.0255],\n        [0.0348],\n        [0.0311],\n        [0.0242],\n        [0.0287],\n        [0.0616],\n        [0.0443],\n        [0.0222],\n        [0.0323],\n        [0.0297],\n        [0.0450],\n        [0.0287],\n        [0.0570],\n        [0.0482],\n        [0.0366],\n        [0.0163],\n        [0.0294],\n        [0.0318],\n        [0.0270],\n        [0.0420],\n        [0.0417],\n        [0.0141],\n        [0.0302],\n        [0.0240],\n        [0.0357],\n        [0.0297],\n        [0.0376],\n        [0.0402]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956157.7494397}]}, "version": 831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956157.7502856}]}, "version": 832}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.47314453125, "step": null, "ts": 1644956157.7514186}]}, "version": 833}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.34137794375419617, "step": null, "ts": 1644956157.8533027}]}, "version": 834}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.822073936462402, "step": null, "ts": 1644956157.8653677}]}, "version": 835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.614 (0.614)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 0.0000 (0.0000)", "step": null, "ts": 1644956158.1170156}]}, "version": 836}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.1179793}]}, "version": 837}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117100358009338, "step": null, "ts": 1644956158.3351254}]}, "version": 838}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3116e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956158.3475554}]}, "version": 839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.352264}]}, "version": 840}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.8970e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956158.353601}]}, "version": 841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.3545337}]}, "version": 842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0960e-06, 2.0112e-06, 2.4101e-06,  ..., 2.7025e-06, 4.5218e-06,\n         3.4044e-06],\n        [3.6227e-06, 2.1403e-06, 3.3153e-06,  ..., 2.7745e-06, 3.0201e-06,\n         3.8311e-06],\n        [4.8696e-06, 1.5515e-06, 3.3316e-06,  ..., 3.8755e-06, 2.3099e-06,\n         2.9085e-06],\n        ...,\n        [4.6219e-06, 1.7618e-06, 1.3551e-06,  ..., 3.6305e-06, 2.9462e-06,\n         2.6011e-06],\n        [4.4937e-06, 1.5480e-06, 1.6060e-06,  ..., 2.3741e-06, 1.8026e-06,\n         2.4136e-06],\n        [5.0108e-06, 2.6947e-06, 2.8290e-06,  ..., 2.7974e-06, 3.6899e-06,\n         2.7243e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956158.357048}]}, "version": 843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.3579333}]}, "version": 844}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0328],\n        [0.0310],\n        [0.0368],\n        [0.0252],\n        [0.0375],\n        [0.0577],\n        [0.0367],\n        [0.0285],\n        [0.0338],\n        [0.0392],\n        [0.0360],\n        [0.0316],\n        [0.0322],\n        [0.0372],\n        [0.0441],\n        [0.0155],\n        [0.0235],\n        [0.0200],\n        [0.0318],\n        [0.0366],\n        [0.0293],\n        [0.0373],\n        [0.0306],\n        [0.0376],\n        [0.0302],\n        [0.0311],\n        [0.0324],\n        [0.0381],\n        [0.0493],\n        [0.0238],\n        [0.0199],\n        [0.0365],\n        [0.0305],\n        [0.0341],\n        [0.0269],\n        [0.0159],\n        [0.0498],\n        [0.0319],\n        [0.0546],\n        [0.0280],\n        [0.0250],\n        [0.0354]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956158.360772}]}, "version": 845}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.3616567}]}, "version": 846}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.3340606689453, "step": null, "ts": 1644956158.3630478}]}, "version": 847}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.14450661838054657, "step": null, "ts": 1644956158.4542856}]}, "version": 848}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.846508026123047, "step": null, "ts": 1644956158.4639268}]}, "version": 849}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8868114948272705, "step": null, "ts": 1644956158.9450228}]}, "version": 850}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4190e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956158.9557405}]}, "version": 851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.9655015}]}, "version": 852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5827e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956158.9669926}]}, "version": 853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.968003}]}, "version": 854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.0232e-06, 1.4662e-06, 1.6797e-06,  ..., 3.8061e-06, 3.1351e-06,\n         2.6372e-06],\n        [4.7924e-06, 2.1765e-06, 3.1056e-06,  ..., 3.4747e-06, 2.6849e-06,\n         2.4406e-06],\n        [6.2224e-06, 8.3725e-07, 1.5440e-06,  ..., 5.8295e-06, 3.5355e-06,\n         2.7479e-06],\n        ...,\n        [6.4363e-06, 2.4795e-06, 2.1532e-06,  ..., 2.6957e-06, 2.4007e-06,\n         1.8439e-06],\n        [3.6566e-06, 2.1786e-06, 3.2099e-06,  ..., 2.5519e-06, 2.6336e-06,\n         2.8058e-06],\n        [4.6248e-06, 1.5905e-06, 2.6565e-06,  ..., 2.6501e-06, 4.5082e-06,\n         4.3647e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956158.970277}]}, "version": 855}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.971238}]}, "version": 856}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0323],\n        [0.0331],\n        [0.0370],\n        [0.0205],\n        [0.0375],\n        [0.0306],\n        [0.0300],\n        [0.0349],\n        [0.0570],\n        [0.0294],\n        [0.0162],\n        [0.0223],\n        [0.0391],\n        [0.0287],\n        [0.0312],\n        [0.0197],\n        [0.0399],\n        [0.0293],\n        [0.0417],\n        [0.0420],\n        [0.0212],\n        [0.0322],\n        [0.0505],\n        [0.0360],\n        [0.0568],\n        [0.0292],\n        [0.0275],\n        [0.0243],\n        [0.0223],\n        [0.0378],\n        [0.0327],\n        [0.0203],\n        [0.0535],\n        [0.0290],\n        [0.0253],\n        [0.0300],\n        [0.0314],\n        [0.0326],\n        [0.0320],\n        [0.0284],\n        [0.0477],\n        [0.0412]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956158.974112}]}, "version": 857}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956158.9750414}]}, "version": 858}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.60748291015625, "step": null, "ts": 1644956158.976271}]}, "version": 859}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2853262722492218, "step": null, "ts": 1644956159.0718641}]}, "version": 860}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.699315071105957, "step": null, "ts": 1644956159.0819488}]}, "version": 861}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7214325070381165, "step": null, "ts": 1644956159.5649476}]}, "version": 862}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6488e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956159.5797358}]}, "version": 863}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956159.5867035}]}, "version": 864}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0261e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956159.587849}]}, "version": 865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956159.588728}]}, "version": 866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.0198e-06, 1.6224e-06, 2.6512e-06,  ..., 4.9415e-06, 1.3829e-06,\n         2.6141e-06],\n        [4.7079e-06, 1.9365e-06, 2.4368e-06,  ..., 2.8958e-06, 3.3645e-06,\n         3.0310e-06],\n        [3.6514e-06, 1.9239e-06, 2.8020e-06,  ..., 3.2537e-06, 3.4624e-06,\n         2.6554e-06],\n        ...,\n        [6.3148e-06, 9.8416e-07, 2.5820e-06,  ..., 2.6210e-06, 3.2457e-06,\n         2.6464e-06],\n        [4.2507e-06, 2.6163e-06, 3.5946e-06,  ..., 3.0743e-06, 2.9799e-06,\n         2.4168e-06],\n        [7.3932e-06, 1.1276e-06, 2.9992e-06,  ..., 2.4732e-06, 4.1771e-06,\n         3.2055e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956159.5911887}]}, "version": 867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956159.5921266}]}, "version": 868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0292],\n        [0.0255],\n        [0.0344],\n        [0.0826],\n        [0.0307],\n        [0.0343],\n        [0.0519],\n        [0.0446],\n        [0.0263],\n        [0.0370],\n        [0.0319],\n        [0.0401],\n        [0.0273],\n        [0.0299],\n        [0.0214],\n        [0.0188],\n        [0.0308],\n        [0.0291],\n        [0.0287],\n        [0.0184],\n        [0.0483],\n        [0.0171],\n        [0.0342],\n        [0.0329],\n        [0.0446],\n        [0.0169],\n        [0.0413],\n        [0.0548],\n        [0.0413],\n        [0.0433],\n        [0.0277],\n        [0.0374],\n        [0.0361],\n        [0.0496],\n        [0.0247],\n        [0.0327],\n        [0.0196],\n        [0.0364],\n        [0.0326],\n        [0.0217],\n        [0.0324],\n        [0.0247]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956159.5949476}]}, "version": 869}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956159.5958188}]}, "version": 870}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.33200073242188, "step": null, "ts": 1644956159.5971847}]}, "version": 871}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3079419434070587, "step": null, "ts": 1644956159.7062044}]}, "version": 872}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.721813201904297, "step": null, "ts": 1644956159.719315}]}, "version": 873}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6897535920143127, "step": null, "ts": 1644956160.172485}]}, "version": 874}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2550e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956160.1876986}]}, "version": 875}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.1887312}]}, "version": 876}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.5401e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956160.1902962}]}, "version": 877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.1912699}]}, "version": 878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.9384e-06, 3.6273e-06, 2.2277e-06,  ..., 2.6592e-06, 3.7928e-06,\n         2.9448e-06],\n        [6.1799e-06, 1.1400e-06, 2.4378e-06,  ..., 1.7419e-06, 3.0069e-06,\n         5.1554e-06],\n        [4.6124e-06, 2.9361e-06, 3.0110e-06,  ..., 2.7410e-06, 2.5955e-06,\n         5.2263e-06],\n        ...,\n        [4.4673e-06, 2.5571e-06, 2.3554e-06,  ..., 2.5638e-06, 2.9410e-06,\n         3.5063e-06],\n        [4.7128e-06, 1.4678e-06, 1.6892e-06,  ..., 2.1280e-06, 4.1316e-06,\n         4.8346e-06],\n        [1.0388e-05, 2.0239e-06, 2.7686e-06,  ..., 2.0556e-06, 3.2033e-06,\n         2.7766e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956160.193761}]}, "version": 879}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.1947234}]}, "version": 880}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0324],\n        [0.0185],\n        [0.0287],\n        [0.0250],\n        [0.0373],\n        [0.0242],\n        [0.0202],\n        [0.0221],\n        [0.0401],\n        [0.0185],\n        [0.0686],\n        [0.0260],\n        [0.0285],\n        [0.0328],\n        [0.0408],\n        [0.0382],\n        [0.0394],\n        [0.0214],\n        [0.0275],\n        [0.0416],\n        [0.0669],\n        [0.0326],\n        [0.0405],\n        [0.0261],\n        [0.0332],\n        [0.0466],\n        [0.0390],\n        [0.0180],\n        [0.0448],\n        [0.0445],\n        [0.0253],\n        [0.0093],\n        [0.0273],\n        [0.0381],\n        [0.0318],\n        [0.0316],\n        [0.0441],\n        [0.0306],\n        [0.0853],\n        [0.0311],\n        [0.0193],\n        [0.0421]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956160.19781}]}, "version": 881}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.1990771}]}, "version": 882}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.6876983642578, "step": null, "ts": 1644956160.2002745}]}, "version": 883}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17014706134796143, "step": null, "ts": 1644956160.2905402}]}, "version": 884}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.728331565856934, "step": null, "ts": 1644956160.3012466}]}, "version": 885}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6962966322898865, "step": null, "ts": 1644956160.7686641}]}, "version": 886}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6404e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956160.7801914}]}, "version": 887}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.7835157}]}, "version": 888}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8280e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956160.7876613}]}, "version": 889}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.7886198}]}, "version": 890}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.6199e-06, 2.7332e-06, 2.2579e-06,  ..., 1.8839e-06, 3.8669e-06,\n         3.8350e-06],\n        [7.0363e-06, 3.2180e-06, 2.1315e-06,  ..., 1.7937e-06, 4.9640e-06,\n         2.3141e-06],\n        [3.8068e-06, 1.7568e-06, 1.7360e-06,  ..., 2.7940e-06, 3.0041e-06,\n         2.9442e-06],\n        ...,\n        [4.1381e-06, 2.0683e-06, 3.9459e-06,  ..., 2.9945e-06, 2.6921e-06,\n         3.5733e-06],\n        [4.6886e-06, 1.5797e-06, 2.9739e-06,  ..., 3.9384e-06, 3.0094e-06,\n         2.6067e-06],\n        [4.3020e-06, 1.3623e-06, 2.7714e-06,  ..., 2.8740e-06, 1.7924e-06,\n         2.0841e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956160.791211}]}, "version": 891}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.7921896}]}, "version": 892}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0278],\n        [0.0373],\n        [0.0477],\n        [0.0278],\n        [0.0306],\n        [0.0334],\n        [0.0352],\n        [0.0283],\n        [0.0307],\n        [0.0260],\n        [0.0453],\n        [0.0356],\n        [0.0991],\n        [0.0274],\n        [0.0286],\n        [0.0330],\n        [0.0291],\n        [0.0254],\n        [0.0320],\n        [0.0276],\n        [0.0189],\n        [0.0204],\n        [0.0192],\n        [0.0421],\n        [0.0269],\n        [0.0308],\n        [0.0254],\n        [0.0411],\n        [0.0253],\n        [0.0370],\n        [0.0439],\n        [0.0267],\n        [0.0143],\n        [0.0456],\n        [0.0530],\n        [0.0378],\n        [0.0297],\n        [0.0231],\n        [0.0300],\n        [0.0325],\n        [0.0306],\n        [0.0332]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956160.7950475}]}, "version": 893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956160.7959642}]}, "version": 894}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 158.1094512939453, "step": null, "ts": 1644956160.7970955}]}, "version": 895}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24531416594982147, "step": null, "ts": 1644956160.881894}]}, "version": 896}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.71771240234375, "step": null, "ts": 1644956160.8916218}]}, "version": 897}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.727627694606781, "step": null, "ts": 1644956161.3213568}]}, "version": 898}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6033e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956161.3351047}]}, "version": 899}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956161.3360398}]}, "version": 900}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.5953e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956161.337531}]}, "version": 901}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956161.338415}]}, "version": 902}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.4693e-06, 2.3751e-06, 2.0657e-06,  ..., 3.1043e-06, 1.9600e-06,\n         3.2039e-06],\n        [3.6493e-06, 2.2694e-06, 2.8313e-06,  ..., 2.9448e-06, 3.7122e-06,\n         3.3355e-06],\n        [3.2431e-06, 2.3527e-06, 2.4465e-06,  ..., 1.8596e-06, 2.1766e-06,\n         3.2571e-06],\n        ...,\n        [5.5442e-06, 2.2506e-06, 2.2268e-06,  ..., 5.9428e-06, 4.1701e-06,\n         3.0940e-06],\n        [2.6978e-06, 1.4492e-06, 3.2500e-06,  ..., 2.3314e-06, 4.8025e-06,\n         2.2764e-06],\n        [1.4520e-05, 1.6246e-06, 2.9180e-06,  ..., 3.8672e-06, 4.1101e-06,\n         2.9504e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956161.3406467}]}, "version": 903}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956161.3416276}]}, "version": 904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0211],\n        [0.0281],\n        [0.0390],\n        [0.0288],\n        [0.0224],\n        [0.0813],\n        [0.0449],\n        [0.0486],\n        [0.0196],\n        [0.0250],\n        [0.0300],\n        [0.0339],\n        [0.0238],\n        [0.0208],\n        [0.0392],\n        [0.0408],\n        [0.0439],\n        [0.0469],\n        [0.0378],\n        [0.0260],\n        [0.0329],\n        [0.0320],\n        [0.0356],\n        [0.0517],\n        [0.0359],\n        [0.0385],\n        [0.0270],\n        [0.0360],\n        [0.0304],\n        [0.0320],\n        [0.0288],\n        [0.0243],\n        [0.0308],\n        [0.0198],\n        [0.0254],\n        [0.0350],\n        [0.0295],\n        [0.0271],\n        [0.0344],\n        [0.0246],\n        [0.0410],\n        [0.0190]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956161.3448913}]}, "version": 905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956161.3459365}]}, "version": 906}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 157.729248046875, "step": null, "ts": 1644956161.3473008}]}, "version": 907}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21221177279949188, "step": null, "ts": 1644956161.4401972}]}, "version": 908}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.603857040405273, "step": null, "ts": 1644956161.44794}]}, "version": 909}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.8, "step": null, "ts": 1644956164.1968577}]}, "version": 910}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.172977447509766, "step": null, "ts": 1644956164.1968577}]}, "version": 911}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644956164.1968577}]}, "version": 912}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644956164.1968577}]}, "version": 913}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956174.201048}]}, "version": 914}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.177101135253906, "step": null, "ts": 1644956174.201048}]}, "version": 915}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 39.0, "step": null, "ts": 1644956174.201048}]}, "version": 916}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644956174.201048}]}, "version": 917}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.653 (0.653)\tD 0.538 (0.538)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1043 (0.1043)", "step": null, "ts": 1644956175.8654585}]}, "version": 918}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956175.8860388}]}, "version": 919}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.478 (0.476)\tD 0.354 (0.355)\tT@1 65.079 (80.952)\tT@5 98.413 (95.094)\tL 0.9167 (0.7286)", "step": null, "ts": 1644956180.4462724}]}, "version": 920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956180.4575715}]}, "version": 921}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956185.8026867}]}, "version": 922}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956184.2044427}]}, "version": 923}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.090373992919922, "step": null, "ts": 1644956184.2044427}]}, "version": 924}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644956184.2044427}]}, "version": 925}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956194.9526823}]}, "version": 926}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956195.74679}]}, "version": 927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644956195.749527}]}, "version": 928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956195.7505703}]}, "version": 929}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956195.8080537}]}, "version": 930}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.160308837890625, "step": null, "ts": 1644956195.8080537}]}, "version": 931}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644956195.8080537}]}, "version": 932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.673 (0.673)\tLoss 0.1043 (0.1043)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644956196.4260046}]}, "version": 933}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956196.4404652}]}, "version": 934}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.465 (0.474)\tLoss 0.9167 (0.7286)\tPrec@1 65.079 (80.952)\tPrec@5 98.413 (95.094)", "step": null, "ts": 1644956200.9671621}]}, "version": 935}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956200.9733708}]}, "version": 936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644956201.6389697}]}, "version": 937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956201.6398854}]}, "version": 938}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.127, Prec@1 89.308", "step": null, "ts": 1644956201.7680635}]}, "version": 939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956201.7690067}]}, "version": 940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.106, Prec@1 90.063", "step": null, "ts": 1644956201.852684}]}, "version": 941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956201.8537786}]}, "version": 942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.092, Prec@1 89.308", "step": null, "ts": 1644956201.9167163}]}, "version": 943}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956201.9178655}]}, "version": 944}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.085, Prec@1 88.931", "step": null, "ts": 1644956201.9803057}]}, "version": 945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956201.9814792}]}, "version": 946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.081, Prec@1 88.931", "step": null, "ts": 1644956202.0454526}]}, "version": 947}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.0464606}]}, "version": 948}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 87.799", "step": null, "ts": 1644956202.1676948}]}, "version": 949}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.1686661}]}, "version": 950}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.031, Prec@1 89.057", "step": null, "ts": 1644956202.2291267}]}, "version": 951}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.230379}]}, "version": 952}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.041, Prec@1 89.182", "step": null, "ts": 1644956202.2907903}]}, "version": 953}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.291856}]}, "version": 954}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.046, Prec@1 89.182", "step": null, "ts": 1644956202.351874}]}, "version": 955}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.352881}]}, "version": 956}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.049, Prec@1 88.931", "step": null, "ts": 1644956202.4130669}]}, "version": 957}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956202.4141934}]}, "version": 958}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 80.00000184257075, "step": null, "ts": 1644956203.1802788}]}, "version": 959}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.080183744430542, "step": null, "ts": 1644956204.4727902}]}, "version": 960}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2709e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956204.4810443}]}, "version": 961}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956204.4841208}]}, "version": 962}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.5047e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956204.4855485}]}, "version": 963}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956204.4864366}]}, "version": 964}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.7441e-06, 1.4714e-06, 2.8281e-06,  ..., 3.1998e-06, 4.5354e-06,\n         4.9173e-06],\n        [2.7874e-06, 1.4422e-06, 4.6642e-06,  ..., 3.4432e-06, 2.6714e-06,\n         3.0523e-06],\n        [5.0251e-06, 2.1817e-06, 2.7706e-06,  ..., 2.9442e-06, 2.3586e-06,\n         3.1855e-06],\n        ...,\n        [8.9004e-06, 1.6896e-06, 1.5288e-06,  ..., 1.6665e-06, 1.3604e-06,\n         2.4172e-06],\n        [5.5642e-06, 1.2923e-06, 1.4386e-06,  ..., 2.1089e-06, 1.9455e-06,\n         4.3162e-06],\n        [2.9065e-06, 2.8880e-06, 3.0443e-06,  ..., 3.9916e-06, 3.0690e-06,\n         2.2908e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956204.4890618}]}, "version": 965}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956204.489677}]}, "version": 966}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0389],\n        [0.0540],\n        [0.0375],\n        [0.0391],\n        [0.0312],\n        [0.0284],\n        [0.0353],\n        [0.0391],\n        [0.0520],\n        [0.0300],\n        [0.0367],\n        [0.0271],\n        [0.0311],\n        [0.0187],\n        [0.0215],\n        [0.0417],\n        [0.0424],\n        [0.0896],\n        [0.0295],\n        [0.0262],\n        [0.0251],\n        [0.0286],\n        [0.0253],\n        [0.0266],\n        [0.0235],\n        [0.0294],\n        [0.0124],\n        [0.0326],\n        [0.0479],\n        [0.0289],\n        [0.0254],\n        [0.0253],\n        [0.0199],\n        [0.0374],\n        [0.0326],\n        [0.0384],\n        [0.0264],\n        [0.0393],\n        [0.0318],\n        [0.0241],\n        [0.0293],\n        [0.0379]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956204.492735}]}, "version": 967}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956204.4975276}]}, "version": 968}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 141.26478576660156, "step": null, "ts": 1644956204.4990385}]}, "version": 969}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22868497669696808, "step": null, "ts": 1644956204.596085}]}, "version": 970}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 11.373711585998535, "step": null, "ts": 1644956204.614467}]}, "version": 971}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.024995", "step": null, "ts": 1644956204.8585894}]}, "version": 972}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956204.8597836}]}, "version": 973}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.196144700050354, "step": null, "ts": 1644956205.0380704}]}, "version": 974}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6933e-05, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956205.0530002}]}, "version": 975}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.0563948}]}, "version": 976}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9700e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956205.0576966}]}, "version": 977}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.05832}]}, "version": 978}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.4909e-06, 1.0069e-06, 3.4857e-06,  ..., 2.3118e-06, 1.4712e-06,\n         2.1717e-06],\n        [4.9534e-06, 2.6341e-06, 2.6100e-06,  ..., 3.0131e-06, 3.3029e-06,\n         2.1509e-06],\n        [4.8436e-06, 1.9121e-06, 2.5130e-06,  ..., 3.9289e-06, 3.1461e-06,\n         2.3980e-06],\n        ...,\n        [5.6194e-06, 3.5673e-06, 2.0509e-06,  ..., 2.5860e-06, 2.9555e-06,\n         3.1485e-06],\n        [5.0165e-06, 2.1776e-06, 4.2222e-06,  ..., 3.8698e-06, 3.6038e-06,\n         1.9911e-06],\n        [5.7382e-06, 2.7104e-06, 2.1648e-06,  ..., 3.3328e-06, 3.8606e-06,\n         2.8564e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956205.0605443}]}, "version": 979}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.0612607}]}, "version": 980}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0387],\n        [0.0352],\n        [0.0452],\n        [0.0811],\n        [0.0569],\n        [0.0539],\n        [0.1857],\n        [0.0733],\n        [0.0448],\n        [0.0544],\n        [0.1001],\n        [0.0415],\n        [0.0836],\n        [0.0464],\n        [0.0605],\n        [0.0461],\n        [0.0560],\n        [0.1027],\n        [0.0473],\n        [0.0490],\n        [0.0652],\n        [0.0507],\n        [0.0582],\n        [0.0393],\n        [0.0566],\n        [0.0434],\n        [0.0420],\n        [0.1580],\n        [0.0472],\n        [0.0488],\n        [0.0541],\n        [0.0484],\n        [0.0787],\n        [0.0868],\n        [0.0808],\n        [0.0551],\n        [0.0865],\n        [0.0506],\n        [0.0739],\n        [0.0542],\n        [0.1003],\n        [0.0518]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956205.0640109}]}, "version": 981}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.0646694}]}, "version": 982}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 117.828369140625, "step": null, "ts": 1644956205.065926}]}, "version": 983}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3028152883052826, "step": null, "ts": 1644956205.1570618}]}, "version": 984}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 11.203634262084961, "step": null, "ts": 1644956205.1667297}]}, "version": 985}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2110590934753418, "step": null, "ts": 1644956205.5998082}]}, "version": 986}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.6504e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956205.6040888}]}, "version": 987}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.6048367}]}, "version": 988}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7364e-07, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956205.6059752}]}, "version": 989}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.6067128}]}, "version": 990}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.1110e-06, 2.1084e-06, 2.4405e-06,  ..., 2.9415e-06, 3.0870e-06,\n         2.3065e-06],\n        [3.8455e-06, 1.0557e-06, 2.0803e-06,  ..., 3.4608e-06, 2.2401e-06,\n         2.5668e-06],\n        [4.2826e-06, 1.7763e-06, 1.7972e-06,  ..., 1.9634e-06, 1.9610e-06,\n         2.8018e-06],\n        ...,\n        [3.5410e-06, 6.6576e-07, 3.5943e-06,  ..., 1.9084e-06, 1.2693e-06,\n         2.1492e-06],\n        [3.8308e-06, 2.2730e-06, 2.3580e-06,  ..., 3.2024e-06, 2.6422e-06,\n         2.8653e-06],\n        [2.9507e-06, 3.5197e-06, 2.6380e-06,  ..., 2.1945e-06, 4.1008e-06,\n         2.6757e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956205.6088734}]}, "version": 991}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.6124663}]}, "version": 992}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.1284],\n        [0.1565],\n        [0.1736],\n        [0.1311],\n        [0.4431],\n        [0.1061],\n        [0.1538],\n        [0.5501],\n        [0.1051],\n        [0.1350],\n        [0.1564],\n        [0.2194],\n        [0.1282],\n        [0.1938],\n        [0.1413],\n        [0.3902],\n        [0.1561],\n        [0.0768],\n        [0.5843],\n        [0.1701],\n        [0.1476],\n        [0.1272],\n        [0.1608],\n        [0.1152],\n        [0.1168],\n        [0.4371],\n        [0.1752],\n        [0.2005],\n        [0.1618],\n        [0.2046],\n        [0.3103],\n        [0.5730],\n        [0.7070],\n        [0.1134],\n        [0.1480],\n        [0.0615],\n        [0.0995],\n        [0.0925],\n        [0.1437],\n        [0.2941],\n        [0.1423],\n        [0.0836]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956205.6153595}]}, "version": 993}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956205.6159441}]}, "version": 994}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 76.03263854980469, "step": null, "ts": 1644956205.6170063}]}, "version": 995}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2785354256629944, "step": null, "ts": 1644956205.7254815}]}, "version": 996}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 11.420063018798828, "step": null, "ts": 1644956205.734219}]}, "version": 997}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956205.8127291}]}, "version": 998}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.987606048583984, "step": null, "ts": 1644956205.8127291}]}, "version": 999}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 81.0, "step": null, "ts": 1644956205.8127291}]}, "version": 1000}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956205.8127291}]}, "version": 1001}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1939761638641357, "step": null, "ts": 1644956206.186507}]}, "version": 1002}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.0308e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956206.1941159}]}, "version": 1003}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.1947086}]}, "version": 1004}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.6257e-08, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956206.195815}]}, "version": 1005}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.1966887}]}, "version": 1006}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.9364e-06, 1.5792e-06, 2.6702e-06,  ..., 2.2798e-06, 3.0917e-06,\n         2.6572e-06],\n        [3.0644e-06, 1.3806e-06, 1.9654e-06,  ..., 2.0189e-06, 2.9811e-06,\n         1.9342e-06],\n        [1.1354e-06, 1.3787e-06, 3.8283e-07,  ..., 1.0071e-06, 7.2446e-07,\n         3.8210e-07],\n        ...,\n        [1.1874e-06, 3.2136e-07, 5.8984e-07,  ..., 5.0429e-07, 8.4649e-07,\n         4.7476e-07],\n        [2.4711e-06, 1.3131e-06, 1.5969e-06,  ..., 2.5353e-06, 1.5187e-06,\n         2.2559e-06],\n        [2.9480e-06, 8.7753e-07, 1.8412e-06,  ..., 2.3884e-06, 1.9944e-06,\n         1.9999e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956206.1989636}]}, "version": 1007}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.1995666}]}, "version": 1008}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.1237],\n        [0.3824],\n        [0.7413],\n        [0.5973],\n        [0.8456],\n        [0.7214],\n        [0.7213],\n        [0.3577],\n        [0.2462],\n        [0.4867],\n        [0.6176],\n        [0.1278],\n        [0.4433],\n        [0.4543],\n        [0.3146],\n        [0.7265],\n        [0.2875],\n        [0.2648],\n        [0.6986],\n        [0.8107],\n        [0.3617],\n        [0.7850],\n        [0.5693],\n        [0.9029],\n        [0.2230],\n        [0.3670],\n        [0.8327],\n        [0.7648],\n        [0.8402],\n        [0.6678],\n        [0.1772],\n        [0.5949],\n        [0.7397],\n        [0.9697],\n        [0.1843],\n        [0.6285],\n        [0.1424],\n        [0.2856],\n        [0.9178],\n        [0.7570],\n        [0.4321],\n        [0.3947]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956206.2022538}]}, "version": 1009}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.202934}]}, "version": 1010}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 41.01933670043945, "step": null, "ts": 1644956206.2039793}]}, "version": 1011}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3255106210708618, "step": null, "ts": 1644956206.2964418}]}, "version": 1012}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.152227401733398, "step": null, "ts": 1644956206.304095}]}, "version": 1013}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.569 (0.569)\tDT 0.000 (0.000)\tS@1 90.476 (90.476)\tLoss 1.5217 (1.5217)", "step": null, "ts": 1644956206.5538256}]}, "version": 1014}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.555034}]}, "version": 1015}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1208354234695435, "step": null, "ts": 1644956206.7639227}]}, "version": 1016}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2271e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956206.7720017}]}, "version": 1017}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.7796824}]}, "version": 1018}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7322e-09, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956206.7811856}]}, "version": 1019}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.7822368}]}, "version": 1020}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6347e-07, 2.4437e-08, 4.9676e-08,  ..., 6.8220e-08, 5.1420e-08,\n         7.4859e-08],\n        [1.4080e-06, 6.9606e-07, 8.1158e-07,  ..., 1.0612e-06, 9.8392e-07,\n         1.1244e-06],\n        [8.5386e-07, 1.1586e-07, 1.6797e-07,  ..., 1.3141e-07, 2.5655e-07,\n         2.4498e-07],\n        ...,\n        [2.5208e-08, 2.5468e-08, 1.5115e-08,  ..., 1.6022e-08, 1.3775e-08,\n         9.8415e-09],\n        [1.3000e-07, 3.3682e-08, 7.6569e-08,  ..., 9.4919e-08, 8.9090e-08,\n         8.3795e-08],\n        [2.7339e-07, 4.4988e-08, 6.9806e-08,  ..., 1.9761e-07, 1.7849e-07,\n         1.8357e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956206.7845037}]}, "version": 1021}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.7853916}]}, "version": 1022}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9806],\n        [0.6621],\n        [0.9189],\n        [0.9668],\n        [0.8984],\n        [0.5286],\n        [0.9736],\n        [0.9720],\n        [0.8031],\n        [0.9952],\n        [0.2520],\n        [0.5600],\n        [0.6757],\n        [0.9100],\n        [0.4351],\n        [0.9459],\n        [0.9214],\n        [0.9593],\n        [0.9978],\n        [0.8366],\n        [0.9059],\n        [0.6196],\n        [0.9319],\n        [0.4067],\n        [0.8493],\n        [0.4120],\n        [0.6383],\n        [0.4566],\n        [0.7741],\n        [0.3560],\n        [0.5071],\n        [0.9197],\n        [0.8996],\n        [0.5541],\n        [0.7754],\n        [0.9201],\n        [0.9189],\n        [0.5769],\n        [0.9808],\n        [0.9954],\n        [0.9770],\n        [0.9572]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956206.7884583}]}, "version": 1023}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956206.7894619}]}, "version": 1024}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 25.00242805480957, "step": null, "ts": 1644956206.7907212}]}, "version": 1025}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24855400621891022, "step": null, "ts": 1644956206.8791173}]}, "version": 1026}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.196288108825684, "step": null, "ts": 1644956206.8860068}]}, "version": 1027}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1256988048553467, "step": null, "ts": 1644956207.3709457}]}, "version": 1028}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3146e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956207.3803642}]}, "version": 1029}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.3813398}]}, "version": 1030}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0940e-11, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956207.3827815}]}, "version": 1031}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.3837662}]}, "version": 1032}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.5374e-08, 1.7430e-08, 3.0898e-08,  ..., 3.0933e-08, 5.7004e-08,\n         2.1197e-08],\n        [5.5115e-08, 2.9235e-08, 4.8775e-08,  ..., 4.5510e-08, 6.2834e-08,\n         7.7991e-08],\n        [1.3213e-07, 5.6678e-08, 7.7511e-08,  ..., 7.9965e-08, 9.4308e-08,\n         1.4339e-07],\n        ...,\n        [4.2107e-10, 4.5844e-11, 5.7748e-10,  ..., 2.2245e-10, 1.2804e-10,\n         7.4239e-11],\n        [1.3201e-08, 2.3145e-08, 8.5980e-09,  ..., 9.6599e-09, 2.3048e-08,\n         9.7582e-09],\n        [1.7014e-06, 1.2667e-06, 1.3845e-06,  ..., 1.6678e-06, 1.5580e-06,\n         1.5848e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956207.3863366}]}, "version": 1033}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.3875406}]}, "version": 1034}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9881],\n        [0.9855],\n        [0.9688],\n        [0.9908],\n        [0.9978],\n        [0.9619],\n        [0.9598],\n        [0.9985],\n        [0.9993],\n        [0.6361],\n        [0.9931],\n        [0.9521],\n        [0.9888],\n        [0.9759],\n        [0.9984],\n        [0.9888],\n        [0.9679],\n        [0.9913],\n        [0.5589],\n        [0.9960],\n        [0.9954],\n        [0.8023],\n        [0.9384],\n        [0.7568],\n        [0.9053],\n        [0.9846],\n        [0.7938],\n        [0.9951],\n        [0.9997],\n        [0.9824],\n        [0.9453],\n        [0.7633],\n        [0.9251],\n        [0.9200],\n        [0.8132],\n        [0.9567],\n        [0.8828],\n        [0.8776],\n        [0.9183],\n        [1.0000],\n        [0.9959],\n        [0.5246]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956207.3908238}]}, "version": 1035}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.3918464}]}, "version": 1036}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.476449966430664, "step": null, "ts": 1644956207.3929493}]}, "version": 1037}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3739985227584839, "step": null, "ts": 1644956207.4846659}]}, "version": 1038}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.461408615112305, "step": null, "ts": 1644956207.5020716}]}, "version": 1039}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1606782674789429, "step": null, "ts": 1644956207.9703274}]}, "version": 1040}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4759e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956207.9780612}]}, "version": 1041}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.9865556}]}, "version": 1042}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.6881e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956207.9878185}]}, "version": 1043}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.9888382}]}, "version": 1044}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.3449e-07, 4.3726e-08, 8.6895e-08,  ..., 9.4293e-08, 6.8132e-08,\n         8.4440e-08],\n        [4.0926e-07, 2.8884e-07, 3.1531e-07,  ..., 4.4785e-07, 3.4614e-07,\n         6.2763e-07],\n        [5.4484e-07, 4.1348e-07, 5.6675e-07,  ..., 8.7737e-07, 6.2786e-07,\n         6.7384e-07],\n        ...,\n        [1.0075e-08, 5.3844e-09, 6.2199e-09,  ..., 4.6554e-09, 1.2160e-08,\n         3.0714e-09],\n        [3.1333e-08, 5.5562e-09, 1.4985e-08,  ..., 7.9278e-09, 1.6286e-08,\n         1.0440e-08],\n        [7.4315e-10, 2.1990e-10, 5.4033e-10,  ..., 6.6166e-10, 3.7057e-10,\n         5.5509e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956207.9912755}]}, "version": 1045}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.9922495}]}, "version": 1046}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9727],\n        [0.8710],\n        [0.8153],\n        [0.9912],\n        [0.8231],\n        [1.0000],\n        [0.9204],\n        [0.9077],\n        [0.9967],\n        [0.7005],\n        [0.9998],\n        [0.9794],\n        [0.9459],\n        [1.0000],\n        [0.9524],\n        [0.9466],\n        [0.7469],\n        [0.9524],\n        [0.9863],\n        [0.9522],\n        [0.9954],\n        [1.0000],\n        [1.0000],\n        [0.7939],\n        [0.9813],\n        [0.9244],\n        [0.9992],\n        [0.9304],\n        [0.9908],\n        [0.9188],\n        [0.9941],\n        [0.9993],\n        [0.9966],\n        [0.9931],\n        [0.9998],\n        [0.9496],\n        [0.9971],\n        [1.0000],\n        [0.9989],\n        [0.9980],\n        [0.9957],\n        [0.9998]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956207.995066}]}, "version": 1047}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956207.996062}]}, "version": 1048}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.837852478027344, "step": null, "ts": 1644956207.997395}]}, "version": 1049}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10838493704795837, "step": null, "ts": 1644956208.0828047}]}, "version": 1050}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.754322052001953, "step": null, "ts": 1644956208.0981984}]}, "version": 1051}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.077553153038025, "step": null, "ts": 1644956208.582346}]}, "version": 1052}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.6727e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956208.5880039}]}, "version": 1053}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956208.5890324}]}, "version": 1054}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7505e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956208.5903065}]}, "version": 1055}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956208.5912445}]}, "version": 1056}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.3150e-09, 5.3048e-09, 2.6447e-09,  ..., 5.3614e-09, 7.1724e-09,\n         3.7649e-09],\n        [5.1503e-09, 3.5210e-09, 9.9347e-09,  ..., 6.3563e-09, 4.9515e-09,\n         5.1415e-09],\n        [8.0857e-11, 1.1046e-11, 6.2164e-12,  ..., 1.0858e-11, 1.6836e-11,\n         1.3964e-11],\n        ...,\n        [3.0780e-07, 2.4188e-07, 2.4097e-07,  ..., 2.3137e-07, 4.0901e-07,\n         2.4030e-07],\n        [7.5820e-07, 4.4238e-07, 4.9503e-07,  ..., 4.9294e-07, 6.1612e-07,\n         4.7226e-07],\n        [6.7394e-09, 3.8592e-09, 2.3838e-09,  ..., 4.1472e-09, 6.0694e-09,\n         3.3023e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956208.5934157}]}, "version": 1057}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956208.5943677}]}, "version": 1058}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9984],\n        [0.9984],\n        [1.0000],\n        [0.9846],\n        [0.9970],\n        [0.7783],\n        [0.9788],\n        [0.9890],\n        [0.9289],\n        [0.9906],\n        [0.9898],\n        [0.9991],\n        [0.9966],\n        [0.9938],\n        [0.9673],\n        [0.9558],\n        [0.9998],\n        [0.9859],\n        [0.8023],\n        [1.0000],\n        [0.9994],\n        [0.9998],\n        [0.9998],\n        [0.9955],\n        [0.9182],\n        [0.9221],\n        [0.9986],\n        [1.0000],\n        [0.9879],\n        [1.0000],\n        [0.9986],\n        [0.9992],\n        [0.9996],\n        [0.9944],\n        [0.9999],\n        [1.0000],\n        [0.9984],\n        [1.0000],\n        [0.9889],\n        [0.9016],\n        [0.8325],\n        [0.9987]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956208.5973158}]}, "version": 1059}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956208.6081936}]}, "version": 1060}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.253515243530273, "step": null, "ts": 1644956208.6093132}]}, "version": 1061}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19329725205898285, "step": null, "ts": 1644956208.6941185}]}, "version": 1062}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.786039352416992, "step": null, "ts": 1644956208.7063909}]}, "version": 1063}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0424619913101196, "step": null, "ts": 1644956209.1928604}]}, "version": 1064}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.8970e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956209.2006185}]}, "version": 1065}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.201508}]}, "version": 1066}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.4640e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956209.202961}]}, "version": 1067}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.2039764}]}, "version": 1068}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0384e-07, 2.0788e-07, 1.8836e-07,  ..., 2.8119e-07, 2.0222e-07,\n         2.6842e-07],\n        [3.9207e-10, 1.3417e-10, 6.6405e-10,  ..., 1.8957e-10, 3.1428e-10,\n         2.8217e-10],\n        [1.6247e-07, 9.2614e-08, 1.1984e-07,  ..., 1.5760e-07, 9.0162e-08,\n         1.2162e-07],\n        ...,\n        [5.9266e-07, 2.9965e-07, 3.6341e-07,  ..., 4.6399e-07, 3.9831e-07,\n         3.5015e-07],\n        [3.2755e-12, 6.5762e-13, 1.7017e-12,  ..., 1.6714e-12, 1.3122e-12,\n         2.3736e-12],\n        [8.6035e-10, 2.6157e-10, 2.5711e-10,  ..., 4.8064e-10, 3.9055e-10,\n         3.7733e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956209.206204}]}, "version": 1069}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.207203}]}, "version": 1070}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9127],\n        [0.9999],\n        [0.9624],\n        [0.9999],\n        [1.0000],\n        [0.9689],\n        [1.0000],\n        [0.9999],\n        [0.9982],\n        [0.9989],\n        [0.9984],\n        [0.9995],\n        [0.9977],\n        [1.0000],\n        [0.9007],\n        [1.0000],\n        [1.0000],\n        [0.9983],\n        [0.9925],\n        [0.7563],\n        [0.7721],\n        [0.9456],\n        [0.9995],\n        [1.0000],\n        [0.9918],\n        [0.9999],\n        [0.9996],\n        [0.9563],\n        [0.9499],\n        [0.9931],\n        [0.9314],\n        [0.9999],\n        [0.9215],\n        [0.9997],\n        [0.9887],\n        [0.8351],\n        [0.9972],\n        [1.0000],\n        [0.9995],\n        [0.8694],\n        [1.0000],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956209.2100303}]}, "version": 1071}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.213581}]}, "version": 1072}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.34636688232422, "step": null, "ts": 1644956209.2150474}]}, "version": 1073}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22189229726791382, "step": null, "ts": 1644956209.3184617}]}, "version": 1074}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.779277801513672, "step": null, "ts": 1644956209.327846}]}, "version": 1075}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9899494051933289, "step": null, "ts": 1644956209.7934623}]}, "version": 1076}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.9158e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956209.8000238}]}, "version": 1077}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.8010888}]}, "version": 1078}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.3559e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956209.8023198}]}, "version": 1079}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.8031902}]}, "version": 1080}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.8900e-14, 1.3683e-14, 1.9774e-14,  ..., 1.2466e-14, 1.5930e-14,\n         2.2646e-14],\n        [1.5315e-09, 1.0988e-09, 9.6608e-10,  ..., 1.3426e-09, 1.5813e-09,\n         1.1642e-09],\n        [2.1204e-09, 1.3765e-09, 1.6304e-09,  ..., 3.0937e-09, 2.2888e-09,\n         2.7487e-09],\n        ...,\n        [2.8183e-11, 1.7515e-11, 2.7290e-11,  ..., 2.3123e-11, 9.9240e-11,\n         2.4195e-11],\n        [9.9914e-10, 6.8427e-10, 8.6656e-10,  ..., 6.1761e-10, 1.3106e-09,\n         5.1248e-10],\n        [5.8095e-07, 4.6974e-07, 5.9834e-07,  ..., 7.2671e-07, 6.3825e-07,\n         6.0659e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956209.8053644}]}, "version": 1081}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.8062837}]}, "version": 1082}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9996],\n        [0.9993],\n        [0.9984],\n        [0.9972],\n        [1.0000],\n        [0.9890],\n        [1.0000],\n        [0.9995],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9996],\n        [0.9980],\n        [0.9960],\n        [1.0000],\n        [0.9336],\n        [0.9998],\n        [1.0000],\n        [0.8381],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9789],\n        [0.9621],\n        [0.9947],\n        [0.9921],\n        [0.9997],\n        [0.9898],\n        [0.9998],\n        [0.9542],\n        [1.0000],\n        [0.9967],\n        [0.9636],\n        [0.9986],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [0.9998],\n        [0.8053]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956209.8092954}]}, "version": 1083}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956209.8113065}]}, "version": 1084}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.63077163696289, "step": null, "ts": 1644956209.8125846}]}, "version": 1085}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.14254406094551086, "step": null, "ts": 1644956209.904241}]}, "version": 1086}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.603759765625, "step": null, "ts": 1644956209.9185812}]}, "version": 1087}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1308280229568481, "step": null, "ts": 1644956210.413395}]}, "version": 1088}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3153e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956210.4215257}]}, "version": 1089}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956210.4224868}]}, "version": 1090}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5501e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956210.4237056}]}, "version": 1091}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956210.424717}]}, "version": 1092}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6579e-14, 2.3074e-14, 1.1578e-13,  ..., 4.1518e-14, 1.2009e-13,\n         2.4784e-14],\n        [9.4183e-11, 8.7073e-11, 7.6524e-11,  ..., 8.3971e-11, 1.5874e-10,\n         6.0905e-11],\n        [5.6004e-11, 1.5626e-11, 2.9246e-11,  ..., 9.1095e-11, 2.1531e-11,\n         2.2938e-11],\n        ...,\n        [4.6994e-09, 3.2926e-09, 5.3008e-09,  ..., 4.6717e-09, 3.8680e-09,\n         3.4327e-09],\n        [2.3931e-10, 2.5040e-10, 2.0064e-10,  ..., 2.1222e-10, 1.5867e-10,\n         1.4359e-10],\n        [2.3651e-08, 1.6625e-08, 1.2435e-08,  ..., 1.5082e-08, 2.6303e-08,\n         1.4598e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956210.4271965}]}, "version": 1093}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956210.428103}]}, "version": 1094}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9986],\n        [0.9412],\n        [0.9977],\n        [0.9691],\n        [1.0000],\n        [0.9607],\n        [0.9997],\n        [0.9972],\n        [0.9989],\n        [1.0000],\n        [0.9909],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9886],\n        [0.9998],\n        [0.9983],\n        [1.0000],\n        [0.9949],\n        [0.9954],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9907],\n        [0.9932],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9914],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9985],\n        [0.9985],\n        [0.9999],\n        [0.9943]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956210.4312148}]}, "version": 1095}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956210.433045}]}, "version": 1096}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.967845916748047, "step": null, "ts": 1644956210.4342177}]}, "version": 1097}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2324099987745285, "step": null, "ts": 1644956210.5399995}]}, "version": 1098}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 19.554658889770508, "step": null, "ts": 1644956210.545661}]}, "version": 1099}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0803221464157104, "step": null, "ts": 1644956210.9949338}]}, "version": 1100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3535e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956211.0056212}]}, "version": 1101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.0065868}]}, "version": 1102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.1036e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956211.0080638}]}, "version": 1103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.0089676}]}, "version": 1104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.9115e-10, 2.7402e-10, 3.8292e-10,  ..., 4.8402e-10, 5.6351e-10,\n         3.4547e-10],\n        [1.0002e-13, 6.9783e-14, 1.5062e-13,  ..., 9.7508e-14, 2.5589e-14,\n         5.7967e-14],\n        [2.3196e-10, 7.1111e-11, 1.0538e-10,  ..., 1.6718e-10, 1.2375e-10,\n         9.0057e-11],\n        ...,\n        [3.5505e-11, 2.4136e-11, 7.0404e-11,  ..., 5.7149e-11, 4.4584e-11,\n         3.3992e-11],\n        [3.4210e-12, 1.9283e-12, 5.1603e-12,  ..., 3.2655e-12, 3.8538e-12,\n         2.9314e-12],\n        [7.0063e-11, 1.8233e-11, 2.3906e-11,  ..., 2.1254e-11, 3.4987e-11,\n         2.7126e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956211.011161}]}, "version": 1105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.0120752}]}, "version": 1106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9952],\n        [0.9999],\n        [0.9921],\n        [1.0000],\n        [0.9981],\n        [0.9984],\n        [1.0000],\n        [0.9998],\n        [0.9421],\n        [0.9999],\n        [0.9936],\n        [0.9992],\n        [0.9999],\n        [1.0000],\n        [0.9998],\n        [0.9971],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9984],\n        [0.9995],\n        [1.0000],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9988],\n        [0.9999],\n        [1.0000],\n        [0.9876],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956211.014929}]}, "version": 1107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.0157967}]}, "version": 1108}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.756528854370117, "step": null, "ts": 1644956211.0169716}]}, "version": 1109}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.36572617292404175, "step": null, "ts": 1644956211.11006}]}, "version": 1110}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.00047492980957, "step": null, "ts": 1644956211.1166742}]}, "version": 1111}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0489263534545898, "step": null, "ts": 1644956211.5768046}]}, "version": 1112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3164e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956211.5863876}]}, "version": 1113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.5966961}]}, "version": 1114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7840e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956211.5981162}]}, "version": 1115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.5998077}]}, "version": 1116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.9591e-09, 2.5440e-09, 3.9367e-09,  ..., 3.9311e-09, 4.8273e-09,\n         4.4865e-09],\n        [2.7475e-09, 1.5601e-09, 1.4453e-09,  ..., 1.2421e-09, 1.6840e-09,\n         1.9090e-09],\n        [6.4957e-15, 1.7041e-15, 4.6925e-15,  ..., 1.8863e-15, 3.4863e-15,\n         5.6152e-15],\n        ...,\n        [6.1592e-12, 7.1441e-12, 5.9842e-12,  ..., 1.2013e-11, 1.2723e-11,\n         7.3820e-12],\n        [7.4985e-12, 4.7218e-12, 4.0515e-12,  ..., 7.5936e-12, 5.3204e-12,\n         4.5394e-12],\n        [1.0110e-14, 5.4591e-15, 1.1038e-14,  ..., 1.9404e-14, 1.2574e-14,\n         1.1868e-14]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956211.6051664}]}, "version": 1117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.609423}]}, "version": 1118}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9987],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9896],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9941],\n        [0.9970],\n        [1.0000],\n        [0.9979],\n        [0.9888],\n        [0.9600],\n        [0.9976],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [0.9862],\n        [1.0000],\n        [0.9934],\n        [0.9954],\n        [0.9994],\n        [0.9866],\n        [0.9988],\n        [0.9955],\n        [0.9456],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956211.6131709}]}, "version": 1119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956211.613841}]}, "version": 1120}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.1336727142334, "step": null, "ts": 1644956211.615007}]}, "version": 1121}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19353696703910828, "step": null, "ts": 1644956211.7099879}]}, "version": 1122}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.531015396118164, "step": null, "ts": 1644956211.7167788}]}, "version": 1123}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1790846586227417, "step": null, "ts": 1644956212.2101126}]}, "version": 1124}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.7080e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956212.221553}]}, "version": 1125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.2225993}]}, "version": 1126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.9888e-21, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956212.2240715}]}, "version": 1127}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.2250729}]}, "version": 1128}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.5437e-10, 1.2891e-10, 1.2585e-10,  ..., 2.2591e-10, 2.5204e-10,\n         2.1995e-10],\n        [6.9524e-11, 4.0106e-11, 5.6559e-11,  ..., 7.3984e-11, 5.3474e-11,\n         4.8048e-11],\n        [1.9383e-17, 3.3599e-18, 3.7722e-18,  ..., 6.3162e-18, 9.6414e-18,\n         1.6758e-17],\n        ...,\n        [6.9087e-11, 3.1428e-11, 6.9942e-11,  ..., 1.0046e-10, 5.2269e-11,\n         8.6377e-11],\n        [3.8682e-08, 2.6218e-08, 3.2608e-08,  ..., 3.5112e-08, 3.5337e-08,\n         2.5464e-08],\n        [3.3326e-10, 1.9513e-10, 4.4941e-10,  ..., 2.1770e-10, 2.3416e-10,\n         3.4008e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956212.2276354}]}, "version": 1129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.2286527}]}, "version": 1130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9987],\n        [1.0000],\n        [1.0000],\n        [0.9982],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [0.9950],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9832],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9998],\n        [0.9999],\n        [0.9985],\n        [0.9995],\n        [0.9888],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [0.9968],\n        [1.0000],\n        [0.9872],\n        [1.0000],\n        [0.9963],\n        [0.9996],\n        [0.9948],\n        [0.9358],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9893],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956212.2316432}]}, "version": 1131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.2354622}]}, "version": 1132}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.448320388793945, "step": null, "ts": 1644956212.2369761}]}, "version": 1133}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19353891909122467, "step": null, "ts": 1644956212.3266118}]}, "version": 1134}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.042142868041992, "step": null, "ts": 1644956212.333926}]}, "version": 1135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.613 (0.613)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss 1.2503 (1.2503)", "step": null, "ts": 1644956212.5802975}]}, "version": 1136}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.5814443}]}, "version": 1137}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.269951343536377, "step": null, "ts": 1644956212.8005915}]}, "version": 1138}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5058e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956212.8160543}]}, "version": 1139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.8171988}]}, "version": 1140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3067e-19, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956212.8186078}]}, "version": 1141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.81968}]}, "version": 1142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.9068e-13, 6.8650e-14, 1.5509e-13,  ..., 1.8626e-13, 2.1857e-13,\n         1.8750e-13],\n        [1.0306e-07, 8.4135e-08, 9.6981e-08,  ..., 9.9346e-08, 1.2522e-07,\n         8.4832e-08],\n        [9.2963e-09, 5.9449e-09, 5.4793e-09,  ..., 6.8393e-09, 7.1879e-09,\n         9.3449e-09],\n        ...,\n        [9.5921e-13, 7.6278e-13, 1.4341e-12,  ..., 6.2070e-13, 5.5257e-13,\n         5.2627e-13],\n        [1.7733e-08, 1.4433e-08, 1.7368e-08,  ..., 1.8321e-08, 2.7874e-08,\n         2.0794e-08],\n        [4.6158e-11, 3.3230e-11, 4.9555e-11,  ..., 4.1108e-11, 3.4962e-11,\n         3.9682e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956212.8222342}]}, "version": 1143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.8232658}]}, "version": 1144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9664],\n        [0.9977],\n        [1.0000],\n        [0.9909],\n        [1.0000],\n        [1.0000],\n        [0.9951],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [0.9995],\n        [0.9885],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [0.9989],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9965],\n        [0.9981],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [0.9992],\n        [1.0000],\n        [0.9960],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9944],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956212.826178}]}, "version": 1145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956212.827226}]}, "version": 1146}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.627653121948242, "step": null, "ts": 1644956212.8284042}]}, "version": 1147}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.362161248922348, "step": null, "ts": 1644956212.9219856}]}, "version": 1148}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.37323760986328, "step": null, "ts": 1644956212.929339}]}, "version": 1149}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1088120937347412, "step": null, "ts": 1644956213.418775}]}, "version": 1150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8158e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956213.4260614}]}, "version": 1151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956213.428063}]}, "version": 1152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2268e-27, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956213.4292607}]}, "version": 1153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956213.4303381}]}, "version": 1154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.0895e-09, 2.2884e-09, 1.8622e-09,  ..., 2.2134e-09, 2.5965e-09,\n         1.6228e-09],\n        [1.1066e-09, 6.9628e-10, 7.1091e-10,  ..., 6.0407e-10, 8.3888e-10,\n         9.3989e-10],\n        [2.8527e-14, 2.3113e-14, 4.2613e-14,  ..., 4.8944e-14, 3.1857e-14,\n         2.0081e-14],\n        ...,\n        [2.8049e-10, 1.3784e-10, 1.7136e-10,  ..., 3.0779e-10, 1.9919e-10,\n         1.5977e-10],\n        [1.2878e-09, 6.3811e-10, 8.1322e-10,  ..., 1.3848e-09, 9.9783e-10,\n         7.7411e-10],\n        [4.2036e-13, 1.4888e-13, 2.1019e-13,  ..., 2.9467e-13, 2.1936e-13,\n         2.2914e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956213.433406}]}, "version": 1155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956213.4340208}]}, "version": 1156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9994],\n        [0.9997],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9974],\n        [0.9544],\n        [0.9789],\n        [0.9931],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [0.9987],\n        [0.9999],\n        [1.0000],\n        [0.9955],\n        [0.9998],\n        [0.9861],\n        [0.9984],\n        [1.0000],\n        [0.9985],\n        [1.0000],\n        [0.9741],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9750],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9961],\n        [0.9960],\n        [0.9940],\n        [0.9851],\n        [0.9999],\n        [0.9997],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956213.4368634}]}, "version": 1157}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956213.4375014}]}, "version": 1158}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.48114776611328, "step": null, "ts": 1644956213.4385326}]}, "version": 1159}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21909742057323456, "step": null, "ts": 1644956213.5267484}]}, "version": 1160}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.21251106262207, "step": null, "ts": 1644956213.539955}]}, "version": 1161}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2978376150131226, "step": null, "ts": 1644956214.0118306}]}, "version": 1162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.9045e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956214.0194228}]}, "version": 1163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.0242095}]}, "version": 1164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4261e-25, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956214.0254095}]}, "version": 1165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.026444}]}, "version": 1166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.2406e-14, 2.6746e-14, 4.9251e-14,  ..., 6.3624e-14, 2.6713e-14,\n         5.7981e-14],\n        [6.1955e-10, 4.1281e-10, 5.6460e-10,  ..., 8.7370e-10, 6.5042e-10,\n         7.6526e-10],\n        [5.5774e-13, 3.0183e-13, 3.2748e-13,  ..., 4.9760e-13, 4.3360e-13,\n         4.8312e-13],\n        ...,\n        [1.3427e-11, 1.1849e-11, 1.5517e-11,  ..., 2.3266e-11, 1.3666e-11,\n         8.7740e-12],\n        [1.2423e-12, 6.5261e-13, 8.2488e-13,  ..., 1.0604e-12, 1.1716e-12,\n         1.5483e-12],\n        [4.9057e-13, 4.2285e-13, 3.4100e-13,  ..., 4.3309e-13, 7.2177e-13,\n         4.8820e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956214.02912}]}, "version": 1167}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.0302787}]}, "version": 1168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9998],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9958],\n        [0.9888],\n        [1.0000],\n        [0.9920],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [1.0000],\n        [0.9964],\n        [0.9994],\n        [0.9998],\n        [0.9984],\n        [0.9995],\n        [1.0000],\n        [0.9953],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [0.9985],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9976],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956214.0335}]}, "version": 1169}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.0343506}]}, "version": 1170}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.07893943786621, "step": null, "ts": 1644956214.0354261}]}, "version": 1171}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4249712824821472, "step": null, "ts": 1644956214.1344643}]}, "version": 1172}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.012590408325195, "step": null, "ts": 1644956214.138507}]}, "version": 1173}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1101794242858887, "step": null, "ts": 1644956214.6088958}]}, "version": 1174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.6228e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956214.6106842}]}, "version": 1175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.6117477}]}, "version": 1176}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4579e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956214.6132596}]}, "version": 1177}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.6143222}]}, "version": 1178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.0013e-12, 4.3756e-12, 4.1204e-12,  ..., 2.8989e-12, 5.3526e-12,\n         4.7393e-12],\n        [7.6244e-17, 3.8324e-17, 1.3818e-16,  ..., 1.1924e-16, 3.6973e-16,\n         7.1357e-17],\n        [3.0215e-19, 2.1876e-19, 1.5877e-19,  ..., 1.5121e-19, 1.5735e-19,\n         3.1856e-19],\n        ...,\n        [6.5677e-12, 2.2744e-12, 4.5209e-12,  ..., 3.5953e-12, 2.5099e-12,\n         3.4798e-12],\n        [2.1312e-08, 1.6120e-08, 2.0639e-08,  ..., 1.9074e-08, 1.8525e-08,\n         1.2193e-08],\n        [3.3529e-10, 1.7780e-10, 3.2435e-10,  ..., 2.6492e-10, 4.3776e-10,\n         2.3122e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956214.6166797}]}, "version": 1179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.6176496}]}, "version": 1180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9970],\n        [0.9989],\n        [0.9989],\n        [1.0000],\n        [0.9997],\n        [0.9992],\n        [1.0000],\n        [0.9987],\n        [0.9987],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9870],\n        [0.9964],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [0.9991],\n        [0.9808],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9993],\n        [1.0000],\n        [0.9950],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956214.620866}]}, "version": 1181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956214.6219218}]}, "version": 1182}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.759811401367188, "step": null, "ts": 1644956214.6231208}]}, "version": 1183}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2525128722190857, "step": null, "ts": 1644956214.7221825}]}, "version": 1184}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.380260467529297, "step": null, "ts": 1644956214.7288265}]}, "version": 1185}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1335722208023071, "step": null, "ts": 1644956215.441181}]}, "version": 1186}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2454e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956215.4546235}]}, "version": 1187}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956215.4553542}]}, "version": 1188}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.6674e-19, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956215.4567726}]}, "version": 1189}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956215.4576836}]}, "version": 1190}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.3432e-09, 1.2871e-09, 1.9384e-09,  ..., 2.3556e-09, 1.6165e-09,\n         1.9295e-09],\n        [2.7411e-15, 8.3690e-16, 1.0032e-15,  ..., 7.3882e-16, 9.0488e-16,\n         1.2814e-15],\n        [6.7507e-13, 5.7833e-13, 8.3054e-13,  ..., 9.3983e-13, 5.8099e-13,\n         3.9955e-13],\n        ...,\n        [1.9284e-09, 1.2905e-09, 1.3535e-09,  ..., 2.2861e-09, 1.1542e-09,\n         1.5658e-09],\n        [7.5282e-10, 9.3166e-10, 6.5200e-10,  ..., 6.8803e-10, 1.0524e-09,\n         5.6499e-10],\n        [9.5239e-13, 2.9023e-13, 3.6541e-13,  ..., 3.6031e-13, 4.4315e-13,\n         3.7055e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956215.4602768}]}, "version": 1191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956215.4613385}]}, "version": 1192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9994],\n        [1.0000],\n        [1.0000],\n        [0.9785],\n        [1.0000],\n        [1.0000],\n        [0.9987],\n        [0.9928],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9987],\n        [1.0000],\n        [0.9717],\n        [1.0000],\n        [1.0000],\n        [0.9988],\n        [0.9997],\n        [0.9928],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [0.9993],\n        [1.0000],\n        [0.9914],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9951],\n        [0.9995],\n        [0.9998],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956215.464244}]}, "version": 1193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956215.4698992}]}, "version": 1194}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.684730529785156, "step": null, "ts": 1644956215.4710436}]}, "version": 1195}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.31059542298316956, "step": null, "ts": 1644956215.5725286}]}, "version": 1196}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.087360382080078, "step": null, "ts": 1644956215.5851326}]}, "version": 1197}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956215.8170798}]}, "version": 1198}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.040500640869141, "step": null, "ts": 1644956215.8170798}]}, "version": 1199}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 82.0, "step": null, "ts": 1644956215.8170798}]}, "version": 1200}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956215.8170798}]}, "version": 1201}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2350503206253052, "step": null, "ts": 1644956216.045874}]}, "version": 1202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.9066e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956216.0563421}]}, "version": 1203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.0574203}]}, "version": 1204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.6435e-22, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956216.0589669}]}, "version": 1205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.0598218}]}, "version": 1206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6660e-17, 7.7892e-18, 1.2175e-17,  ..., 1.1558e-17, 1.4973e-17,\n         1.3311e-17],\n        [1.0951e-11, 1.0307e-11, 9.6874e-12,  ..., 8.0736e-12, 8.5162e-12,\n         9.8935e-12],\n        [4.7340e-13, 2.7456e-13, 3.6011e-13,  ..., 4.1961e-13, 7.8081e-13,\n         2.4294e-13],\n        ...,\n        [4.5999e-12, 1.6475e-12, 2.8757e-12,  ..., 1.7009e-12, 2.1687e-12,\n         2.5092e-12],\n        [2.7805e-08, 2.6396e-08, 2.5642e-08,  ..., 2.4075e-08, 4.9023e-08,\n         2.4275e-08],\n        [4.2541e-08, 2.3573e-08, 2.5126e-08,  ..., 2.9847e-08, 2.8350e-08,\n         2.3753e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956216.0622952}]}, "version": 1207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.0631838}]}, "version": 1208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9984],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [1.0000],\n        [0.9986],\n        [0.9997],\n        [0.9826],\n        [1.0000],\n        [0.9955],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9948],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [0.9904],\n        [0.9898]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956216.0661356}]}, "version": 1209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.0701022}]}, "version": 1210}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.926597595214844, "step": null, "ts": 1644956216.0715992}]}, "version": 1211}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.44598066806793213, "step": null, "ts": 1644956216.1684444}]}, "version": 1212}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.75557518005371, "step": null, "ts": 1644956216.1793299}]}, "version": 1213}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1185721158981323, "step": null, "ts": 1644956216.650946}]}, "version": 1214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.9701e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956216.6652203}]}, "version": 1215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.672139}]}, "version": 1216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9101e-21, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956216.6733918}]}, "version": 1217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.6740272}]}, "version": 1218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.9167e-14, 2.3305e-14, 1.8926e-14,  ..., 1.4928e-14, 2.6370e-14,\n         2.7266e-14],\n        [4.9727e-10, 3.5683e-10, 4.9466e-10,  ..., 5.3155e-10, 4.5430e-10,\n         2.9694e-10],\n        [3.7215e-08, 2.1039e-08, 3.1571e-08,  ..., 3.4407e-08, 3.4041e-08,\n         2.3293e-08],\n        ...,\n        [3.7103e-16, 4.8023e-16, 2.4158e-16,  ..., 3.1609e-16, 8.4172e-16,\n         3.4581e-16],\n        [1.7396e-09, 8.0097e-10, 8.9500e-10,  ..., 1.3390e-09, 1.1824e-09,\n         1.0362e-09],\n        [3.4833e-20, 3.2053e-20, 9.9573e-21,  ..., 5.1387e-20, 2.0146e-20,\n         2.0583e-19]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956216.6762555}]}, "version": 1219}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.677105}]}, "version": 1220}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9999],\n        [0.9906],\n        [0.9978],\n        [0.9978],\n        [1.0000],\n        [0.9971],\n        [0.9997],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [0.9990],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9989],\n        [0.9855],\n        [0.9978],\n        [0.9989],\n        [0.9997],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9979],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956216.6800082}]}, "version": 1221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956216.6806076}]}, "version": 1222}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.58964729309082, "step": null, "ts": 1644956216.6816905}]}, "version": 1223}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.12967433035373688, "step": null, "ts": 1644956216.7722588}]}, "version": 1224}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.72832489013672, "step": null, "ts": 1644956216.7786212}]}, "version": 1225}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2308427095413208, "step": null, "ts": 1644956217.2404907}]}, "version": 1226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4975e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956217.250337}]}, "version": 1227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.2573237}]}, "version": 1228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9467e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956217.2584395}]}, "version": 1229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.2591348}]}, "version": 1230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.0361e-14, 6.7547e-15, 1.0826e-14,  ..., 1.1564e-14, 2.1166e-14,\n         1.6426e-14],\n        [6.6713e-14, 5.7811e-14, 6.4504e-14,  ..., 3.0566e-14, 3.8535e-14,\n         2.8663e-14],\n        [8.8629e-12, 4.2745e-12, 8.8114e-12,  ..., 4.2311e-12, 7.8076e-12,\n         4.7677e-12],\n        ...,\n        [9.2880e-13, 5.6876e-13, 8.1607e-13,  ..., 9.6849e-13, 5.1917e-13,\n         1.1425e-12],\n        [8.2499e-12, 7.7672e-12, 9.1930e-12,  ..., 8.0971e-12, 4.6597e-12,\n         7.3155e-12],\n        [9.0389e-10, 5.8498e-10, 9.0632e-10,  ..., 7.3535e-10, 7.8894e-10,\n         7.0748e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956217.2613556}]}, "version": 1231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.262344}]}, "version": 1232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9991],\n        [0.9996],\n        [0.9981],\n        [1.0000],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [0.9998],\n        [1.0000],\n        [0.9886],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9891],\n        [0.9999],\n        [0.9630],\n        [0.9994],\n        [0.9881],\n        [1.0000],\n        [1.0000],\n        [0.9998]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956217.2654607}]}, "version": 1233}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.2663012}]}, "version": 1234}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.906497955322266, "step": null, "ts": 1644956217.2674775}]}, "version": 1235}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19472412765026093, "step": null, "ts": 1644956217.3709412}]}, "version": 1236}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.80736541748047, "step": null, "ts": 1644956217.383216}]}, "version": 1237}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1168235540390015, "step": null, "ts": 1644956217.8358037}]}, "version": 1238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4079e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956217.8403661}]}, "version": 1239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.8411174}]}, "version": 1240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2039e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956217.8423073}]}, "version": 1241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.8431916}]}, "version": 1242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.4771e-14, 3.6204e-14, 1.4721e-13,  ..., 1.0266e-13, 4.2342e-14,\n         2.9473e-14],\n        [6.2162e-11, 4.8830e-11, 1.0988e-10,  ..., 6.3179e-11, 6.4596e-11,\n         5.5372e-11],\n        [2.9277e-16, 1.5933e-16, 1.6040e-16,  ..., 1.9254e-16, 2.2427e-16,\n         8.0621e-16],\n        ...,\n        [6.8935e-09, 6.9001e-09, 7.6013e-09,  ..., 8.9946e-09, 7.5740e-09,\n         7.2120e-09],\n        [1.1424e-11, 5.8010e-12, 7.1556e-12,  ..., 6.0544e-12, 4.3750e-12,\n         5.7825e-12],\n        [2.6611e-13, 5.1480e-13, 8.3533e-13,  ..., 9.2084e-13, 4.5264e-13,\n         4.1197e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956217.8453288}]}, "version": 1243}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.8473783}]}, "version": 1244}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9984],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9978],\n        [1.0000],\n        [0.9957],\n        [0.9999],\n        [0.9969],\n        [0.9998],\n        [0.9955],\n        [0.9970],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9991],\n        [0.9998],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [0.9974],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956217.8504448}]}, "version": 1245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956217.8524833}]}, "version": 1246}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 23.028757095336914, "step": null, "ts": 1644956217.8535666}]}, "version": 1247}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3147186040878296, "step": null, "ts": 1644956217.9657583}]}, "version": 1248}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.788639068603516, "step": null, "ts": 1644956217.969819}]}, "version": 1249}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1853868961334229, "step": null, "ts": 1644956218.43967}]}, "version": 1250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0302e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956218.4485893}]}, "version": 1251}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956218.4583826}]}, "version": 1252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.3038e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956218.4595919}]}, "version": 1253}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956218.4605336}]}, "version": 1254}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.7378e-09, 1.2821e-09, 2.8156e-09,  ..., 1.7210e-09, 1.5799e-09,\n         1.3853e-09],\n        [8.8455e-10, 6.0406e-10, 7.7183e-10,  ..., 7.0116e-10, 1.0547e-09,\n         9.3922e-10],\n        [3.0302e-08, 1.5630e-08, 2.0197e-08,  ..., 2.2150e-08, 2.1869e-08,\n         1.8419e-08],\n        ...,\n        [4.3177e-12, 2.6691e-12, 3.2955e-12,  ..., 3.7030e-12, 3.5856e-12,\n         3.7693e-12],\n        [9.5625e-10, 6.4882e-10, 8.1447e-10,  ..., 1.1128e-09, 1.4460e-09,\n         1.0725e-09],\n        [1.3712e-18, 1.8947e-18, 4.3463e-19,  ..., 6.6412e-19, 3.8051e-18,\n         7.6725e-19]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956218.4631279}]}, "version": 1255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956218.464225}]}, "version": 1256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9995],\n        [0.9998],\n        [0.9928],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [0.9983],\n        [0.9982],\n        [0.9995],\n        [0.9999],\n        [1.0000],\n        [0.9982],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9947],\n        [0.9984],\n        [0.9953],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [0.9981],\n        [0.9999],\n        [1.0000],\n        [0.9997],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956218.4671118}]}, "version": 1257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956218.4680107}]}, "version": 1258}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.77845001220703, "step": null, "ts": 1644956218.4691365}]}, "version": 1259}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.16151124238967896, "step": null, "ts": 1644956218.560192}]}, "version": 1260}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.84087562561035, "step": null, "ts": 1644956218.5666103}]}, "version": 1261}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.595 (0.595)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss 1.3292 (1.3292)", "step": null, "ts": 1644956218.813112}]}, "version": 1262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956218.8142164}]}, "version": 1263}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.221346378326416, "step": null, "ts": 1644956219.0376356}]}, "version": 1264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5836e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956219.0515747}]}, "version": 1265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.0598438}]}, "version": 1266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6631e-19, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956219.0610251}]}, "version": 1267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.061888}]}, "version": 1268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.7481e-15, 1.6445e-15, 3.6961e-15,  ..., 7.2846e-15, 3.7110e-15,\n         9.0134e-15],\n        [8.7372e-17, 3.6669e-17, 4.9118e-17,  ..., 6.8359e-17, 2.9977e-17,\n         6.8426e-17],\n        [2.0053e-12, 1.4296e-12, 1.9737e-12,  ..., 1.0737e-12, 1.4840e-12,\n         1.6523e-12],\n        ...,\n        [3.2777e-08, 2.7963e-08, 2.9979e-08,  ..., 2.9758e-08, 4.0572e-08,\n         3.1053e-08],\n        [3.2020e-09, 1.9687e-09, 3.8897e-09,  ..., 3.4492e-09, 2.7020e-09,\n         2.6059e-09],\n        [7.1599e-18, 4.5289e-18, 7.4224e-18,  ..., 6.1900e-18, 4.2279e-18,\n         5.2989e-18]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956219.0643935}]}, "version": 1269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.0654404}]}, "version": 1270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9808],\n        [0.9983],\n        [0.9996],\n        [0.9999],\n        [0.9985],\n        [1.0000],\n        [0.9944],\n        [1.0000],\n        [1.0000],\n        [0.9978],\n        [0.9789],\n        [0.9374],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [0.9997],\n        [0.9981],\n        [1.0000],\n        [0.9999],\n        [0.9997],\n        [0.9996],\n        [0.9997],\n        [0.9973],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [0.9999],\n        [0.9993],\n        [0.9993],\n        [0.9990],\n        [1.0000],\n        [0.9896],\n        [0.9990],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956219.068549}]}, "version": 1271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.0694346}]}, "version": 1272}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.098146438598633, "step": null, "ts": 1644956219.0707324}]}, "version": 1273}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.26156994700431824, "step": null, "ts": 1644956219.163023}]}, "version": 1274}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 23.060428619384766, "step": null, "ts": 1644956219.1671731}]}, "version": 1275}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.3092533349990845, "step": null, "ts": 1644956219.6566384}]}, "version": 1276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5176e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956219.6679127}]}, "version": 1277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.6689227}]}, "version": 1278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.8300e-25, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956219.6701963}]}, "version": 1279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.6711266}]}, "version": 1280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.3550e-09, 9.1810e-10, 1.0784e-09,  ..., 1.3124e-09, 1.2006e-09,\n         9.0354e-10],\n        [6.3014e-13, 3.5955e-13, 3.6332e-13,  ..., 5.8416e-13, 6.2936e-13,\n         4.3799e-13],\n        [2.0097e-18, 2.2231e-18, 4.5510e-18,  ..., 4.0394e-18, 5.0076e-18,\n         7.4005e-18],\n        ...,\n        [1.8595e-09, 1.6632e-09, 2.0408e-09,  ..., 1.9614e-09, 1.4051e-09,\n         1.3853e-09],\n        [6.6251e-24, 8.1117e-25, 1.3590e-24,  ..., 7.8026e-25, 6.7702e-25,\n         4.0580e-24],\n        [2.3673e-09, 3.5569e-09, 2.5132e-09,  ..., 4.2893e-09, 3.6003e-09,\n         4.1293e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956219.6733375}]}, "version": 1281}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.67431}]}, "version": 1282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [0.9930],\n        [1.0000],\n        [0.9942],\n        [0.9925],\n        [0.9884],\n        [1.0000],\n        [0.9855],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9992],\n        [1.0000],\n        [0.9990],\n        [0.9998],\n        [1.0000],\n        [0.9357],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9976],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9432],\n        [0.9941],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9990]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956219.6774168}]}, "version": 1283}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956219.678232}]}, "version": 1284}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.41187858581543, "step": null, "ts": 1644956219.679441}]}, "version": 1285}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24285484850406647, "step": null, "ts": 1644956219.7803864}]}, "version": 1286}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.748502731323242, "step": null, "ts": 1644956219.7845073}]}, "version": 1287}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9298709630966187, "step": null, "ts": 1644956220.2580497}]}, "version": 1288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.3643e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956220.27287}]}, "version": 1289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.2737293}]}, "version": 1290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2046e-23, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956220.2749593}]}, "version": 1291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.275745}]}, "version": 1292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.1099e-12, 3.0295e-12, 3.9194e-12,  ..., 8.6406e-12, 5.8387e-12,\n         4.0234e-12],\n        [1.8814e-09, 1.3530e-09, 1.3360e-09,  ..., 1.3909e-09, 1.3108e-09,\n         1.2156e-09],\n        [5.5433e-11, 3.4637e-11, 5.0992e-11,  ..., 5.4106e-11, 4.3854e-11,\n         7.1670e-11],\n        ...,\n        [1.3491e-09, 8.0992e-10, 1.0677e-09,  ..., 1.1881e-09, 9.5551e-10,\n         1.1901e-09],\n        [4.6720e-09, 2.1508e-09, 3.0870e-09,  ..., 4.3463e-09, 2.9808e-09,\n         2.7478e-09],\n        [4.1552e-13, 2.4795e-13, 2.7175e-13,  ..., 1.9620e-13, 3.1978e-13,\n         3.9296e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956220.2779994}]}, "version": 1293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.2788086}]}, "version": 1294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9999],\n        [0.9995],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9979],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9864],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [0.9986],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9985],\n        [1.0000],\n        [0.9983],\n        [1.0000],\n        [0.9996],\n        [0.9990],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956220.281771}]}, "version": 1295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.2827363}]}, "version": 1296}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.994062423706055, "step": null, "ts": 1644956220.2841296}]}, "version": 1297}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25170066952705383, "step": null, "ts": 1644956220.3825717}]}, "version": 1298}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.7222843170166, "step": null, "ts": 1644956220.3905041}]}, "version": 1299}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.183472752571106, "step": null, "ts": 1644956220.8457158}]}, "version": 1300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.8071e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956220.915405}]}, "version": 1301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.9164588}]}, "version": 1302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.1683e-21, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956220.9177458}]}, "version": 1303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.9187105}]}, "version": 1304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.7636e-10, 5.4625e-10, 5.5608e-10,  ..., 7.7508e-10, 6.9392e-10,\n         6.0478e-10],\n        [9.3247e-10, 1.0118e-09, 7.6991e-10,  ..., 9.2304e-10, 1.0929e-09,\n         1.2415e-09],\n        [8.1986e-16, 3.4847e-16, 2.7228e-16,  ..., 8.6667e-16, 3.5856e-16,\n         3.5503e-16],\n        ...,\n        [1.0088e-10, 9.6802e-11, 9.9800e-11,  ..., 7.6670e-11, 1.4125e-10,\n         1.0834e-10],\n        [1.7013e-11, 2.2253e-11, 2.0091e-11,  ..., 2.5570e-11, 2.7548e-11,\n         2.2731e-11],\n        [2.0627e-10, 1.9389e-10, 2.2462e-10,  ..., 2.0086e-10, 2.4643e-10,\n         2.6673e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956220.921201}]}, "version": 1305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.9221153}]}, "version": 1306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9998],\n        [0.9997],\n        [1.0000],\n        [0.9990],\n        [0.9984],\n        [0.9911],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9981],\n        [0.9995],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9999],\n        [0.9937],\n        [1.0000],\n        [0.9985],\n        [1.0000],\n        [0.9999],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [0.9954],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9997],\n        [0.9966],\n        [1.0000],\n        [1.0000],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956220.9250612}]}, "version": 1307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956220.926061}]}, "version": 1308}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.227869033813477, "step": null, "ts": 1644956220.927284}]}, "version": 1309}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2328934520483017, "step": null, "ts": 1644956221.0168502}]}, "version": 1310}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.23600959777832, "step": null, "ts": 1644956221.0302641}]}, "version": 1311}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1487646102905273, "step": null, "ts": 1644956221.459201}]}, "version": 1312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3191e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956221.4670022}]}, "version": 1313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956221.4680939}]}, "version": 1314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6391e-21, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956221.469489}]}, "version": 1315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956221.470546}]}, "version": 1316}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.1247e-10, 2.3616e-10, 5.6918e-10,  ..., 4.0615e-10, 2.9314e-10,\n         2.9771e-10],\n        [6.6730e-10, 3.3510e-10, 3.9036e-10,  ..., 3.1896e-10, 4.1659e-10,\n         2.6494e-10],\n        [6.0000e-14, 4.3629e-14, 9.4699e-14,  ..., 9.5228e-14, 9.9312e-14,\n         1.0878e-13],\n        ...,\n        [8.6132e-09, 6.2638e-09, 7.0025e-09,  ..., 8.1670e-09, 6.7428e-09,\n         8.2494e-09],\n        [2.3443e-13, 1.1733e-13, 4.5264e-13,  ..., 3.2399e-13, 6.9334e-13,\n         2.7623e-13],\n        [1.4248e-16, 5.9857e-17, 6.4361e-17,  ..., 6.5477e-17, 3.2686e-17,\n         1.1509e-16]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956221.4731293}]}, "version": 1317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956221.4741955}]}, "version": 1318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9999],\n        [0.9986],\n        [0.9977],\n        [0.9678],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9915],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9973],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9987],\n        [1.0000],\n        [1.0000],\n        [0.9978],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9975],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956221.477103}]}, "version": 1319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956221.4802837}]}, "version": 1320}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.512296676635742, "step": null, "ts": 1644956221.4814544}]}, "version": 1321}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.37597036361694336, "step": null, "ts": 1644956221.574127}]}, "version": 1322}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.99755859375, "step": null, "ts": 1644956221.5780652}]}, "version": 1323}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.3063687086105347, "step": null, "ts": 1644956222.035845}]}, "version": 1324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6665e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956222.04318}]}, "version": 1325}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.0442293}]}, "version": 1326}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2165e-21, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956222.0454035}]}, "version": 1327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.04633}]}, "version": 1328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.4007e-12, 1.7824e-12, 4.1375e-12,  ..., 4.4237e-12, 2.4079e-12,\n         3.7175e-12],\n        [2.2618e-14, 7.7467e-15, 1.9519e-14,  ..., 1.8833e-14, 2.3633e-14,\n         1.5693e-14],\n        [8.2945e-13, 3.8756e-13, 5.9853e-13,  ..., 9.1189e-13, 1.1555e-12,\n         9.3364e-13],\n        ...,\n        [2.6871e-10, 1.8843e-10, 2.5379e-10,  ..., 3.5136e-10, 1.7272e-10,\n         2.2503e-10],\n        [5.9405e-11, 3.1067e-11, 5.3217e-11,  ..., 3.7911e-11, 5.4506e-11,\n         3.5362e-11],\n        [1.9340e-12, 6.7932e-13, 1.8777e-12,  ..., 1.3782e-12, 1.6704e-12,\n         1.4060e-12]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956222.0488055}]}, "version": 1329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.049776}]}, "version": 1330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [0.9966],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9972],\n        [0.9996],\n        [1.0000],\n        [0.9993],\n        [1.0000],\n        [0.9941],\n        [1.0000],\n        [1.0000],\n        [0.9878],\n        [0.9991],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [1.0000],\n        [0.9998],\n        [0.9986],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956222.0529218}]}, "version": 1331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.053832}]}, "version": 1332}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.377182006835938, "step": null, "ts": 1644956222.0552046}]}, "version": 1333}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.45446765422821045, "step": null, "ts": 1644956222.1554527}]}, "version": 1334}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.39872932434082, "step": null, "ts": 1644956222.1658466}]}, "version": 1335}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.278947353363037, "step": null, "ts": 1644956222.6317677}]}, "version": 1336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.5448e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956222.6471136}]}, "version": 1337}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.6478312}]}, "version": 1338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5817e-22, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956222.6489024}]}, "version": 1339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.6497893}]}, "version": 1340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.9574e-13, 2.7162e-13, 2.9672e-13,  ..., 4.9537e-13, 6.3632e-13,\n         8.6102e-13],\n        [7.2014e-12, 4.6174e-12, 5.2699e-12,  ..., 1.0630e-11, 6.4213e-12,\n         5.6646e-12],\n        [1.2865e-10, 8.0518e-11, 7.8514e-11,  ..., 1.4224e-10, 8.5667e-11,\n         7.6880e-11],\n        ...,\n        [5.6603e-10, 4.5844e-10, 5.0966e-10,  ..., 4.7307e-10, 6.1143e-10,\n         4.7299e-10],\n        [2.8611e-11, 2.2437e-11, 2.8109e-11,  ..., 9.0227e-11, 2.5252e-11,\n         4.1875e-11],\n        [5.1787e-08, 4.0011e-08, 4.3401e-08,  ..., 4.7029e-08, 5.1414e-08,\n         3.8664e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956222.6522315}]}, "version": 1341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.6531699}]}, "version": 1342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9785],\n        [0.9874],\n        [0.9980],\n        [0.9995],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [0.9931],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9971],\n        [1.0000],\n        [1.0000],\n        [0.9928],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9959],\n        [1.0000],\n        [1.0000],\n        [0.9989],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9854]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956222.6560323}]}, "version": 1343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956222.6568444}]}, "version": 1344}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.592098236083984, "step": null, "ts": 1644956222.658214}]}, "version": 1345}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20306243002414703, "step": null, "ts": 1644956222.7468169}]}, "version": 1346}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.9810791015625, "step": null, "ts": 1644956222.7575905}]}, "version": 1347}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1453583240509033, "step": null, "ts": 1644956223.2672334}]}, "version": 1348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.6151e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956223.2753804}]}, "version": 1349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.2762358}]}, "version": 1350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0346e-18, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956223.2774158}]}, "version": 1351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.278263}]}, "version": 1352}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6414e-13, 2.1162e-13, 2.7769e-13,  ..., 2.3984e-13, 1.4272e-13,\n         2.8636e-13],\n        [3.0594e-11, 1.5022e-11, 2.2172e-11,  ..., 2.1934e-11, 2.5774e-11,\n         2.7225e-11],\n        [6.2553e-15, 1.9503e-15, 8.3261e-15,  ..., 6.6090e-15, 3.1624e-14,\n         6.4543e-15],\n        ...,\n        [2.5410e-13, 2.0535e-13, 1.0985e-12,  ..., 5.0125e-13, 2.0904e-13,\n         1.3210e-13],\n        [3.2252e-09, 1.4668e-09, 2.2292e-09,  ..., 2.1682e-09, 2.3852e-09,\n         3.0782e-09],\n        [8.7643e-16, 3.3935e-16, 3.7120e-16,  ..., 1.8285e-16, 1.5397e-15,\n         5.6365e-16]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956223.280491}]}, "version": 1353}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.2813}]}, "version": 1354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [0.9993],\n        [1.0000],\n        [0.9990],\n        [0.9946],\n        [0.9930],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9840],\n        [0.9844],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9987],\n        [1.0000],\n        [0.9897],\n        [1.0000],\n        [0.9992],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9992],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956223.2844093}]}, "version": 1355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.2852507}]}, "version": 1356}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.139955520629883, "step": null, "ts": 1644956223.2865207}]}, "version": 1357}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24225805699825287, "step": null, "ts": 1644956223.3873987}]}, "version": 1358}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 22.243623733520508, "step": null, "ts": 1644956223.4003987}]}, "version": 1359}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0869795083999634, "step": null, "ts": 1644956223.8804545}]}, "version": 1360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3426e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956223.8914733}]}, "version": 1361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.8990037}]}, "version": 1362}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4815e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956223.9000974}]}, "version": 1363}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.900932}]}, "version": 1364}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6616e-14, 4.1525e-15, 1.0937e-14,  ..., 6.2362e-15, 1.6019e-14,\n         7.6378e-15],\n        [1.1238e-13, 1.5958e-13, 1.9126e-13,  ..., 1.7704e-13, 2.8287e-13,\n         2.1921e-13],\n        [1.3782e-09, 9.9222e-10, 9.5675e-10,  ..., 1.1412e-09, 9.6512e-10,\n         1.0588e-09],\n        ...,\n        [7.4606e-09, 4.8418e-09, 8.6262e-09,  ..., 7.4693e-09, 7.8902e-09,\n         6.8077e-09],\n        [1.4392e-14, 1.0424e-14, 1.3110e-14,  ..., 1.7146e-14, 2.4144e-14,\n         1.1467e-14],\n        [2.2860e-09, 9.8240e-10, 1.5363e-09,  ..., 2.8180e-09, 1.9326e-09,\n         1.6532e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956223.903284}]}, "version": 1365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.904215}]}, "version": 1366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [0.9997],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9993],\n        [1.0000],\n        [0.9983],\n        [1.0000],\n        [1.0000],\n        [0.9980],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9940],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9769],\n        [0.9999],\n        [0.9993],\n        [0.9984],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9675],\n        [0.9999],\n        [0.9992],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9986],\n        [0.9975],\n        [1.0000],\n        [0.9994]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956223.9072337}]}, "version": 1367}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956223.9081745}]}, "version": 1368}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 22.00979995727539, "step": null, "ts": 1644956223.9093268}]}, "version": 1369}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3026270568370819, "step": null, "ts": 1644956223.9978044}]}, "version": 1370}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.984844207763672, "step": null, "ts": 1644956224.010566}]}, "version": 1371}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.181244134902954, "step": null, "ts": 1644956224.477165}]}, "version": 1372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0258e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956224.4842768}]}, "version": 1373}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956224.4876506}]}, "version": 1374}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6743e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956224.488853}]}, "version": 1375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956224.4894288}]}, "version": 1376}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.1766e-09, 7.3453e-10, 6.8414e-10,  ..., 4.7848e-10, 6.2555e-10,\n         5.0874e-10],\n        [4.8033e-09, 2.9521e-09, 3.9755e-09,  ..., 5.1015e-09, 3.4237e-09,\n         2.9879e-09],\n        [5.3550e-13, 2.1392e-13, 2.6799e-13,  ..., 5.4901e-13, 2.4958e-13,\n         2.9132e-13],\n        ...,\n        [4.0151e-08, 2.4320e-08, 3.9543e-08,  ..., 3.7364e-08, 4.4061e-08,\n         4.3391e-08],\n        [1.4918e-07, 1.1575e-07, 1.7395e-07,  ..., 1.7338e-07, 1.7336e-07,\n         1.5148e-07],\n        [1.5392e-09, 1.4233e-09, 3.8446e-09,  ..., 2.7439e-09, 2.2101e-09,\n         1.9269e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956224.491621}]}, "version": 1377}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956224.4922664}]}, "version": 1378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9998],\n        [0.9987],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [0.9993],\n        [0.9989],\n        [1.0000],\n        [0.9764],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [0.9999],\n        [0.9888],\n        [1.0000],\n        [1.0000],\n        [0.9970],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9991],\n        [0.9996],\n        [0.9971],\n        [0.9998],\n        [0.9887],\n        [0.9500],\n        [0.9993]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956224.4951284}]}, "version": 1379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956224.5006943}]}, "version": 1380}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.27863121032715, "step": null, "ts": 1644956224.5021164}]}, "version": 1381}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23821091651916504, "step": null, "ts": 1644956224.5915022}]}, "version": 1382}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.888547897338867, "step": null, "ts": 1644956224.605325}]}, "version": 1383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.582 (0.582)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 1.2681 (1.2681)", "step": null, "ts": 1644956224.8531814}]}, "version": 1384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956224.8541422}]}, "version": 1385}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0865602493286133, "step": null, "ts": 1644956225.0714686}]}, "version": 1386}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8484e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956225.085199}]}, "version": 1387}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.0861604}]}, "version": 1388}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.3566e-18, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956225.087406}]}, "version": 1389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.0883977}]}, "version": 1390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.1602e-11, 4.0368e-11, 3.5875e-11,  ..., 2.7267e-11, 3.8890e-11,\n         2.6688e-11],\n        [1.8771e-10, 1.0192e-10, 2.5193e-10,  ..., 2.2185e-10, 2.9780e-10,\n         2.0180e-10],\n        [3.5162e-10, 4.2162e-10, 2.6681e-10,  ..., 3.2046e-10, 4.3638e-10,\n         3.0241e-10],\n        ...,\n        [7.4459e-13, 2.9762e-13, 2.9937e-13,  ..., 8.1659e-13, 5.6274e-13,\n         8.6759e-13],\n        [6.6497e-09, 6.5742e-09, 4.5567e-09,  ..., 4.4544e-09, 5.6861e-09,\n         5.3672e-09],\n        [4.8731e-08, 4.0765e-08, 4.5450e-08,  ..., 4.8676e-08, 4.3844e-08,\n         4.5112e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956225.090861}]}, "version": 1391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.0919917}]}, "version": 1392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9978],\n        [0.9737],\n        [1.0000],\n        [1.0000],\n        [0.9675],\n        [0.9865],\n        [1.0000],\n        [0.9586],\n        [0.9820],\n        [0.9999],\n        [1.0000],\n        [0.9976],\n        [1.0000],\n        [0.9984],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9972],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [0.9924],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9991],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9981],\n        [1.0000],\n        [0.9982],\n        [0.9845]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956225.0949206}]}, "version": 1393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.0956023}]}, "version": 1394}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.13983154296875, "step": null, "ts": 1644956225.0968208}]}, "version": 1395}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.237699493765831, "step": null, "ts": 1644956225.1962206}]}, "version": 1396}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 21.559268951416016, "step": null, "ts": 1644956225.202995}]}, "version": 1397}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1033999919891357, "step": null, "ts": 1644956225.6798613}]}, "version": 1398}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.1242e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956225.6817362}]}, "version": 1399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.6824114}]}, "version": 1400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.8756e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956225.6835632}]}, "version": 1401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.684478}]}, "version": 1402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.9829e-10, 2.4271e-10, 2.7048e-10,  ..., 3.1128e-10, 2.5466e-10,\n         2.0403e-10],\n        [3.2001e-13, 2.5407e-13, 3.4110e-13,  ..., 8.2439e-13, 2.6903e-13,\n         5.2748e-13],\n        [1.8356e-11, 1.5575e-11, 1.6102e-11,  ..., 1.6395e-11, 2.4962e-11,\n         1.0963e-11],\n        ...,\n        [3.6266e-12, 2.2507e-12, 2.9585e-12,  ..., 3.0232e-12, 4.2565e-12,\n         2.1749e-12],\n        [5.6558e-12, 2.8293e-12, 4.7646e-12,  ..., 7.2080e-12, 2.7424e-12,\n         4.6668e-12],\n        [5.5221e-13, 1.7413e-13, 2.4874e-13,  ..., 1.1486e-12, 4.6356e-13,\n         3.8395e-13]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956225.68686}]}, "version": 1403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.6875873}]}, "version": 1404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [0.9974],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9945],\n        [0.9996],\n        [0.9994],\n        [0.9995],\n        [0.9998],\n        [0.9837],\n        [0.9994],\n        [0.9999],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9888],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9978],\n        [0.9999],\n        [0.9988],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956225.6904924}]}, "version": 1405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956225.6910753}]}, "version": 1406}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.398937225341797, "step": null, "ts": 1644956225.6920545}]}, "version": 1407}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.356940358877182, "step": null, "ts": 1644956225.786417}]}, "version": 1408}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.623374938964844, "step": null, "ts": 1644956225.7959685}]}, "version": 1409}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956225.8217072}]}, "version": 1410}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.045745849609375, "step": null, "ts": 1644956225.8217072}]}, "version": 1411}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 58.0, "step": null, "ts": 1644956225.8217072}]}, "version": 1412}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956225.8217072}]}, "version": 1413}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.093344807624817, "step": null, "ts": 1644956226.5214486}]}, "version": 1414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.9340e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956226.533059}]}, "version": 1415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956226.5364714}]}, "version": 1416}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.0400e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956226.5378716}]}, "version": 1417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956226.5388632}]}, "version": 1418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.8678e-10, 1.6997e-10, 1.3152e-10,  ..., 2.0251e-10, 1.6474e-10,\n         2.2131e-10],\n        [7.8317e-09, 6.5906e-09, 7.9055e-09,  ..., 7.0813e-09, 9.3464e-09,\n         7.8987e-09],\n        [9.2900e-16, 1.3657e-15, 9.2012e-16,  ..., 9.5509e-16, 7.8671e-16,\n         2.5705e-15],\n        ...,\n        [1.3232e-12, 6.9556e-13, 2.3509e-12,  ..., 9.2173e-13, 1.7382e-12,\n         8.0398e-13],\n        [7.1411e-12, 2.5441e-12, 3.5392e-12,  ..., 5.2955e-12, 4.0145e-12,\n         4.3327e-12],\n        [2.1230e-16, 2.6396e-16, 1.8832e-16,  ..., 1.0743e-16, 5.0809e-16,\n         8.9562e-17]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956226.5411534}]}, "version": 1419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956226.5422}]}, "version": 1420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [0.9977],\n        [1.0000],\n        [0.9996],\n        [0.9850],\n        [0.9811],\n        [0.9549],\n        [0.9998],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9957],\n        [0.9971],\n        [0.9982],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [0.8846],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9965],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9721],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956226.5450792}]}, "version": 1421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956226.5473394}]}, "version": 1422}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.22107696533203, "step": null, "ts": 1644956226.5484767}]}, "version": 1423}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18855345249176025, "step": null, "ts": 1644956226.6434572}]}, "version": 1424}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.887245178222656, "step": null, "ts": 1644956226.6529946}]}, "version": 1425}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1518431901931763, "step": null, "ts": 1644956227.0896754}]}, "version": 1426}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0802e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956227.098083}]}, "version": 1427}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.0991716}]}, "version": 1428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5193e-19, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956227.1005318}]}, "version": 1429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.1015377}]}, "version": 1430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.3152e-10, 8.5076e-11, 1.0606e-10,  ..., 8.7871e-11, 1.7795e-10,\n         1.1228e-10],\n        [9.4764e-12, 5.7726e-12, 9.4371e-12,  ..., 1.1600e-11, 7.0669e-12,\n         6.7671e-12],\n        [2.8697e-11, 1.5874e-11, 2.3467e-11,  ..., 3.0159e-11, 2.8553e-11,\n         2.4627e-11],\n        ...,\n        [2.2901e-07, 1.6529e-07, 2.7402e-07,  ..., 2.4458e-07, 2.1541e-07,\n         2.2112e-07],\n        [4.0377e-14, 1.2585e-14, 1.3668e-14,  ..., 2.1748e-14, 2.5713e-14,\n         2.0100e-14],\n        [2.1409e-11, 1.5935e-11, 1.9411e-11,  ..., 3.9534e-11, 3.2620e-11,\n         3.7127e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956227.10408}]}, "version": 1431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.1051555}]}, "version": 1432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9796],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9965],\n        [1.0000],\n        [0.9314],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9935],\n        [1.0000],\n        [0.9996],\n        [0.9990],\n        [0.9970],\n        [0.9999],\n        [0.9890],\n        [1.0000],\n        [0.9987],\n        [1.0000],\n        [1.0000],\n        [0.9936],\n        [0.9999],\n        [0.9998],\n        [0.9942],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9928],\n        [1.0000],\n        [0.9347],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956227.1080985}]}, "version": 1433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.1091907}]}, "version": 1434}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.00053596496582, "step": null, "ts": 1644956227.110291}]}, "version": 1435}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5421911478042603, "step": null, "ts": 1644956227.2090516}]}, "version": 1436}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.17683219909668, "step": null, "ts": 1644956227.2221463}]}, "version": 1437}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1128332614898682, "step": null, "ts": 1644956227.6941154}]}, "version": 1438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.1874e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956227.7063231}]}, "version": 1439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.718212}]}, "version": 1440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1739e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956227.719811}]}, "version": 1441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.7208853}]}, "version": 1442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.5151e-09, 4.0593e-09, 4.5067e-09,  ..., 6.2007e-09, 3.7371e-09,\n         3.8212e-09],\n        [1.6287e-11, 1.8207e-11, 2.1778e-11,  ..., 2.2186e-11, 2.2488e-11,\n         1.1259e-11],\n        [1.3789e-09, 1.2036e-09, 1.0121e-09,  ..., 8.9543e-10, 8.7463e-10,\n         1.1895e-09],\n        ...,\n        [2.1791e-10, 2.0731e-10, 2.2820e-10,  ..., 2.7442e-10, 3.5083e-10,\n         2.9248e-10],\n        [6.5320e-08, 4.5837e-08, 5.6003e-08,  ..., 5.4710e-08, 4.3391e-08,\n         4.6891e-08],\n        [3.7395e-10, 2.2469e-10, 3.9805e-10,  ..., 2.3472e-10, 4.8971e-10,\n         3.2416e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956227.7233539}]}, "version": 1443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.7244318}]}, "version": 1444}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9984],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9989],\n        [0.9937],\n        [0.9982],\n        [0.9868],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9989],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9940],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9878],\n        [0.9996],\n        [0.9999],\n        [0.9828],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956227.7275982}]}, "version": 1445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956227.7285738}]}, "version": 1446}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.944705963134766, "step": null, "ts": 1644956227.7300258}]}, "version": 1447}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4538280963897705, "step": null, "ts": 1644956227.8162172}]}, "version": 1448}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.159116744995117, "step": null, "ts": 1644956227.8241591}]}, "version": 1449}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9275738000869751, "step": null, "ts": 1644956228.2860203}]}, "version": 1450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0944e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956228.3008153}]}, "version": 1451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.301892}]}, "version": 1452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.5853e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956228.3033466}]}, "version": 1453}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.3042402}]}, "version": 1454}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.1244e-12, 1.1109e-12, 1.3192e-12,  ..., 2.2251e-12, 1.1427e-12,\n         1.4398e-12],\n        [2.4801e-13, 2.9821e-13, 4.4529e-13,  ..., 5.5524e-13, 6.4224e-13,\n         6.4601e-13],\n        [1.7949e-10, 1.1213e-10, 1.2860e-10,  ..., 4.8161e-11, 8.9222e-11,\n         5.8625e-11],\n        ...,\n        [1.3167e-11, 5.2275e-12, 1.0496e-11,  ..., 1.5384e-11, 9.6236e-12,\n         1.2426e-11],\n        [2.0197e-09, 1.5929e-09, 5.1664e-09,  ..., 2.3576e-09, 2.3914e-09,\n         1.3599e-09],\n        [1.6118e-09, 1.1350e-09, 1.3600e-09,  ..., 9.8363e-10, 1.7703e-09,\n         1.4872e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956228.3065512}]}, "version": 1455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.3075354}]}, "version": 1456}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9763],\n        [0.9995],\n        [0.9982],\n        [0.9999],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [0.9983],\n        [1.0000],\n        [0.9986],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9915],\n        [0.9911],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9983],\n        [1.0000],\n        [0.9849],\n        [0.9995],\n        [0.9988],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [0.9981],\n        [1.0000],\n        [1.0000],\n        [0.9996],\n        [0.9991],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [0.9995]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956228.3103065}]}, "version": 1457}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.3109694}]}, "version": 1458}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.32430076599121, "step": null, "ts": 1644956228.312072}]}, "version": 1459}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15084071457386017, "step": null, "ts": 1644956228.4005096}]}, "version": 1460}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.184814453125, "step": null, "ts": 1644956228.4124198}]}, "version": 1461}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0692745447158813, "step": null, "ts": 1644956228.8750267}]}, "version": 1462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.1093e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956228.8877773}]}, "version": 1463}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.8899639}]}, "version": 1464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6779e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956228.8913026}]}, "version": 1465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.8923395}]}, "version": 1466}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.4054e-11, 8.3608e-12, 2.4902e-11,  ..., 1.0560e-11, 1.8717e-11,\n         8.8692e-12],\n        [9.6825e-10, 6.3500e-10, 1.8360e-09,  ..., 9.2931e-10, 1.6044e-09,\n         6.3693e-10],\n        [6.2080e-10, 4.6441e-10, 1.1336e-09,  ..., 7.9004e-10, 1.4499e-09,\n         6.0277e-10],\n        ...,\n        [2.2135e-09, 2.2147e-09, 4.9705e-09,  ..., 3.4091e-09, 2.0800e-09,\n         2.0008e-09],\n        [1.0046e-11, 8.9452e-12, 1.2774e-11,  ..., 1.4123e-11, 1.1277e-11,\n         2.5583e-11],\n        [3.3170e-11, 1.9461e-11, 2.2303e-11,  ..., 3.1147e-11, 4.2693e-11,\n         3.5429e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956228.8947115}]}, "version": 1467}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.8958123}]}, "version": 1468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9996],\n        [0.9998],\n        [0.9970],\n        [0.9936],\n        [0.9793],\n        [1.0000],\n        [0.9965],\n        [0.9998],\n        [1.0000],\n        [0.9951],\n        [0.9997],\n        [0.9999],\n        [0.9996],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9871],\n        [1.0000],\n        [1.0000],\n        [0.8958],\n        [0.9999],\n        [0.9998],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9894],\n        [1.0000],\n        [0.9999],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [0.9705],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956228.8990853}]}, "version": 1469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956228.9028075}]}, "version": 1470}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.521541595458984, "step": null, "ts": 1644956228.9043317}]}, "version": 1471}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20085151493549347, "step": null, "ts": 1644956228.9930232}]}, "version": 1472}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 20.005525588989258, "step": null, "ts": 1644956229.0034785}]}, "version": 1473}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1343400478363037, "step": null, "ts": 1644956229.4829085}]}, "version": 1474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.1405e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956229.495768}]}, "version": 1475}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956229.4993994}]}, "version": 1476}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.9358e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956229.5008354}]}, "version": 1477}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956229.501563}]}, "version": 1478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.8542e-11, 8.0081e-12, 1.2638e-11,  ..., 1.2068e-11, 1.0332e-11,\n         1.0537e-11],\n        [2.1547e-11, 7.2546e-12, 9.0388e-12,  ..., 1.0929e-11, 1.9790e-11,\n         1.7744e-11],\n        [1.2435e-08, 1.0541e-08, 1.1845e-08,  ..., 1.5345e-08, 9.6682e-09,\n         1.0988e-08],\n        ...,\n        [3.1399e-09, 1.4340e-09, 1.6511e-09,  ..., 2.4346e-09, 3.2039e-09,\n         2.8720e-09],\n        [1.4699e-08, 1.3126e-08, 2.2669e-08,  ..., 2.3800e-08, 1.4558e-08,\n         1.0656e-08],\n        [4.2992e-10, 1.9604e-10, 2.5993e-10,  ..., 1.8930e-10, 1.8117e-10,\n         2.9128e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956229.503847}]}, "version": 1479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956229.5047574}]}, "version": 1480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [0.9958],\n        [0.9856],\n        [0.9999],\n        [0.9995],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9931],\n        [1.0000],\n        [0.9973],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9944],\n        [0.9913],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9968],\n        [1.0000],\n        [0.9964],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [0.9981],\n        [0.9999],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [0.9996],\n        [0.9831],\n        [0.9998],\n        [0.9965],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [0.9948],\n        [0.9999]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956229.5078285}]}, "version": 1481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956229.5128565}]}, "version": 1482}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.027671813964844, "step": null, "ts": 1644956229.513923}]}, "version": 1483}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21700909733772278, "step": null, "ts": 1644956229.6128333}]}, "version": 1484}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 19.63068199157715, "step": null, "ts": 1644956229.6212873}]}, "version": 1485}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.204651117324829, "step": null, "ts": 1644956230.0854113}]}, "version": 1486}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6662e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956230.0965087}]}, "version": 1487}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.1074092}]}, "version": 1488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9481e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956230.1085875}]}, "version": 1489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.1095252}]}, "version": 1490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.7356e-09, 7.7615e-09, 7.3987e-09,  ..., 8.7057e-09, 7.8317e-09,\n         6.0007e-09],\n        [3.4435e-08, 3.4046e-08, 5.9915e-08,  ..., 4.9498e-08, 5.0709e-08,\n         3.7814e-08],\n        [7.2613e-11, 6.0260e-11, 1.2647e-10,  ..., 9.3610e-11, 1.0131e-10,\n         8.6415e-11],\n        ...,\n        [1.8554e-10, 1.4846e-10, 1.2077e-10,  ..., 1.1246e-10, 1.3298e-10,\n         2.1140e-10],\n        [1.0459e-11, 5.0631e-12, 7.5932e-12,  ..., 8.6144e-12, 7.9071e-12,\n         1.0556e-11],\n        [5.4065e-09, 3.4414e-09, 2.5698e-09,  ..., 6.4809e-09, 3.3213e-09,\n         2.7405e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956230.1120396}]}, "version": 1491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.1130912}]}, "version": 1492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9975],\n        [0.9862],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9936],\n        [1.0000],\n        [0.9990],\n        [0.9997],\n        [0.9706],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9906],\n        [1.0000],\n        [0.9938],\n        [0.9984],\n        [1.0000],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9717],\n        [0.9998],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9901],\n        [1.0000],\n        [0.9829],\n        [1.0000],\n        [0.9948],\n        [0.9990],\n        [0.9986],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9988]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956230.1160965}]}, "version": 1493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.1169038}]}, "version": 1494}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.708337783813477, "step": null, "ts": 1644956230.1180966}]}, "version": 1495}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38699042797088623, "step": null, "ts": 1644956230.2101014}]}, "version": 1496}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 19.26014518737793, "step": null, "ts": 1644956230.2152448}]}, "version": 1497}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0451021194458008, "step": null, "ts": 1644956230.6986256}]}, "version": 1498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.1150e-08, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956230.7118816}]}, "version": 1499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.7128966}]}, "version": 1500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5690e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956230.7142658}]}, "version": 1501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.7151752}]}, "version": 1502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.9793e-11, 2.5813e-11, 4.8230e-11,  ..., 6.0700e-11, 5.4928e-11,\n         6.5154e-11],\n        [1.8764e-10, 1.8852e-10, 1.2949e-10,  ..., 1.8581e-10, 1.9771e-10,\n         2.3841e-10],\n        [7.6320e-10, 4.3693e-10, 5.0189e-10,  ..., 8.3459e-10, 5.9897e-10,\n         5.6232e-10],\n        ...,\n        [1.1826e-13, 7.7952e-14, 6.4883e-13,  ..., 7.7569e-13, 2.6592e-13,\n         9.9855e-14],\n        [7.8116e-14, 8.0999e-14, 1.1227e-13,  ..., 6.8029e-14, 1.4994e-13,\n         1.9889e-13],\n        [2.9823e-09, 1.5805e-09, 2.2450e-09,  ..., 2.0579e-09, 1.7749e-09,\n         2.8301e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956230.7173586}]}, "version": 1503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.718217}]}, "version": 1504}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9999],\n        [0.9998],\n        [0.9983],\n        [1.0000],\n        [1.0000],\n        [0.9869],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9987],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [0.9892],\n        [0.9999],\n        [0.9996],\n        [0.9998],\n        [1.0000],\n        [0.9983],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9840],\n        [0.9999],\n        [0.9981],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9999],\n        [0.9936],\n        [1.0000],\n        [1.0000],\n        [0.9993]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956230.721029}]}, "version": 1505}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956230.7218542}]}, "version": 1506}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.72634506225586, "step": null, "ts": 1644956230.7229614}]}, "version": 1507}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23878629505634308, "step": null, "ts": 1644956230.825997}]}, "version": 1508}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.93170738220215, "step": null, "ts": 1644956230.8383813}]}, "version": 1509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.613 (0.613)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 1.1530 (1.1530)", "step": null, "ts": 1644956231.0864336}]}, "version": 1510}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.0875933}]}, "version": 1511}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0420905351638794, "step": null, "ts": 1644956231.310394}]}, "version": 1512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2265e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956231.3142378}]}, "version": 1513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.3214078}]}, "version": 1514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9366e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956231.3228824}]}, "version": 1515}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.3239906}]}, "version": 1516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.8493e-08, 2.1398e-08, 2.3130e-08,  ..., 3.4624e-08, 3.2502e-08,\n         3.0845e-08],\n        [7.7443e-10, 9.0949e-10, 1.0826e-09,  ..., 6.8300e-10, 1.3386e-09,\n         4.7576e-10],\n        [6.7143e-09, 4.5798e-09, 7.3650e-09,  ..., 6.5612e-09, 1.9851e-08,\n         7.3769e-09],\n        ...,\n        [1.0390e-08, 5.3348e-09, 7.1076e-09,  ..., 7.3389e-09, 5.6332e-09,\n         7.8620e-09],\n        [1.1183e-11, 6.2561e-12, 5.6430e-12,  ..., 5.5867e-12, 7.6478e-12,\n         2.7237e-11],\n        [1.7268e-08, 1.6302e-08, 1.4961e-08,  ..., 1.8025e-08, 2.1994e-08,\n         1.3551e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956231.326491}]}, "version": 1517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.32747}]}, "version": 1518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9916],\n        [0.9998],\n        [0.9974],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9891],\n        [1.0000],\n        [1.0000],\n        [0.9974],\n        [1.0000],\n        [0.9831],\n        [1.0000],\n        [0.9967],\n        [1.0000],\n        [0.9960],\n        [0.9997],\n        [0.9908],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9992],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9840],\n        [0.9950],\n        [0.9999],\n        [0.9992],\n        [0.9997],\n        [0.9742],\n        [0.9955],\n        [1.0000],\n        [0.9983],\n        [0.9283],\n        [0.9996],\n        [1.0000],\n        [0.9974],\n        [1.0000],\n        [0.9944]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956231.3305774}]}, "version": 1519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.3316472}]}, "version": 1520}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.177034378051758, "step": null, "ts": 1644956231.333236}]}, "version": 1521}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17644941806793213, "step": null, "ts": 1644956231.431041}]}, "version": 1522}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.82912826538086, "step": null, "ts": 1644956231.4352837}]}, "version": 1523}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.062184453010559, "step": null, "ts": 1644956231.9081793}]}, "version": 1524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.5426e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956231.9202886}]}, "version": 1525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.9273047}]}, "version": 1526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.4493e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956231.9285178}]}, "version": 1527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.9295828}]}, "version": 1528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.3564e-12, 3.5903e-13, 1.4755e-12,  ..., 4.6911e-13, 7.2311e-13,\n         4.2257e-13],\n        [3.8924e-07, 3.2135e-07, 3.5951e-07,  ..., 4.4410e-07, 4.1989e-07,\n         3.9161e-07],\n        [1.5045e-07, 1.3104e-07, 1.9573e-07,  ..., 2.0099e-07, 1.6133e-07,\n         1.4457e-07],\n        ...,\n        [2.0143e-09, 1.1755e-09, 3.5308e-09,  ..., 2.2769e-09, 3.2824e-09,\n         2.0774e-09],\n        [1.2604e-08, 1.1036e-08, 1.3713e-08,  ..., 2.5139e-08, 2.2263e-08,\n         1.9005e-08],\n        [7.0698e-10, 5.0429e-10, 4.3771e-10,  ..., 6.0690e-10, 7.0742e-10,\n         3.5433e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956231.9321902}]}, "version": 1529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.9333112}]}, "version": 1530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.8698],\n        [0.9483],\n        [1.0000],\n        [0.9993],\n        [0.9928],\n        [0.9940],\n        [0.9999],\n        [0.9997],\n        [0.9991],\n        [0.9993],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9990],\n        [1.0000],\n        [0.9996],\n        [0.9965],\n        [0.9997],\n        [0.9977],\n        [1.0000],\n        [1.0000],\n        [0.9947],\n        [0.9702],\n        [1.0000],\n        [1.0000],\n        [0.9918],\n        [0.9999],\n        [0.9994],\n        [1.0000],\n        [0.9991],\n        [0.9998],\n        [0.9956],\n        [0.9863],\n        [1.0000],\n        [0.9992],\n        [0.9947],\n        [0.9998]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956231.9361808}]}, "version": 1531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956231.937234}]}, "version": 1532}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.08267593383789, "step": null, "ts": 1644956231.9385638}]}, "version": 1533}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2943327724933624, "step": null, "ts": 1644956232.0389097}]}, "version": 1534}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.68620491027832, "step": null, "ts": 1644956232.0474005}]}, "version": 1535}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0931857824325562, "step": null, "ts": 1644956232.5349722}]}, "version": 1536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.6353e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956232.5430114}]}, "version": 1537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956232.547271}]}, "version": 1538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1346e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956232.5484383}]}, "version": 1539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956232.5495062}]}, "version": 1540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.8001e-10, 8.1026e-11, 1.2571e-10,  ..., 1.4359e-10, 1.0290e-10,\n         1.1959e-10],\n        [1.3817e-10, 3.6323e-11, 5.6542e-11,  ..., 5.8514e-11, 1.0246e-10,\n         5.9179e-11],\n        [1.6753e-08, 6.4508e-09, 6.0444e-09,  ..., 5.0851e-09, 7.0411e-09,\n         6.5293e-09],\n        ...,\n        [9.7570e-10, 5.6907e-10, 2.3908e-09,  ..., 6.9325e-10, 7.5121e-10,\n         3.7721e-10],\n        [3.2729e-09, 3.8098e-09, 3.0298e-09,  ..., 3.0986e-09, 3.7887e-09,\n         3.3176e-09],\n        [2.2308e-08, 1.3072e-08, 2.0414e-08,  ..., 1.7329e-08, 1.6147e-08,\n         1.3327e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956232.5517583}]}, "version": 1541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956232.5526047}]}, "version": 1542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [0.9978],\n        [1.0000],\n        [0.9785],\n        [0.9986],\n        [1.0000],\n        [0.9999],\n        [0.9966],\n        [1.0000],\n        [0.9999],\n        [0.9332],\n        [0.9998],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9982],\n        [0.8923],\n        [0.9998],\n        [0.9435],\n        [0.9582],\n        [0.9916],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9934],\n        [0.9998],\n        [1.0000],\n        [0.9997],\n        [0.9988],\n        [0.9264],\n        [0.9989],\n        [0.9962],\n        [0.9989],\n        [1.0000],\n        [0.9600],\n        [0.9983],\n        [0.9077],\n        [0.9997],\n        [0.9988],\n        [0.9938]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956232.555796}]}, "version": 1543}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956232.556895}]}, "version": 1544}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.841262817382812, "step": null, "ts": 1644956232.5581036}]}, "version": 1545}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2661431133747101, "step": null, "ts": 1644956232.656302}]}, "version": 1546}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.329240798950195, "step": null, "ts": 1644956232.6653926}]}, "version": 1547}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9939673542976379, "step": null, "ts": 1644956233.125797}]}, "version": 1548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2175e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956233.1340868}]}, "version": 1549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.135303}]}, "version": 1550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6801e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956233.1365693}]}, "version": 1551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.1374755}]}, "version": 1552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.6515e-10, 4.5754e-10, 1.9479e-09,  ..., 6.9769e-10, 1.1364e-09,\n         6.4952e-10],\n        [6.8675e-10, 2.3902e-10, 4.0154e-10,  ..., 5.4128e-10, 1.1737e-09,\n         6.1091e-10],\n        [3.6913e-09, 2.1965e-09, 2.5367e-09,  ..., 3.0561e-09, 2.8632e-09,\n         2.1281e-09],\n        ...,\n        [2.6923e-08, 3.3566e-08, 3.7029e-08,  ..., 4.5660e-08, 2.9873e-08,\n         3.2880e-08],\n        [2.5174e-08, 2.2181e-08, 2.6050e-08,  ..., 3.1329e-08, 2.6913e-08,\n         2.5976e-08],\n        [7.2284e-12, 3.2766e-12, 7.4456e-12,  ..., 8.4422e-12, 6.1397e-12,\n         6.7704e-12]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956233.139818}]}, "version": 1553}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.1407816}]}, "version": 1554}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9997],\n        [0.9998],\n        [0.9991],\n        [0.9938],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9964],\n        [0.9985],\n        [0.9932],\n        [0.9998],\n        [0.9998],\n        [0.9990],\n        [0.9996],\n        [0.9713],\n        [0.9999],\n        [1.0000],\n        [0.9988],\n        [0.9901],\n        [1.0000],\n        [1.0000],\n        [0.9995],\n        [0.9998],\n        [0.9998],\n        [1.0000],\n        [0.9990],\n        [0.7227],\n        [1.0000],\n        [0.9366],\n        [0.9713],\n        [0.9658],\n        [0.9998],\n        [1.0000],\n        [0.9895],\n        [0.9922],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956233.1438067}]}, "version": 1555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.144493}]}, "version": 1556}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.83213996887207, "step": null, "ts": 1644956233.1459694}]}, "version": 1557}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19490106403827667, "step": null, "ts": 1644956233.2378898}]}, "version": 1558}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 18.12832260131836, "step": null, "ts": 1644956233.2483919}]}, "version": 1559}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9643459320068359, "step": null, "ts": 1644956233.7458014}]}, "version": 1560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.3682e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956233.7589214}]}, "version": 1561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.7623458}]}, "version": 1562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6913e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956233.7635303}]}, "version": 1563}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.7644272}]}, "version": 1564}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.4123e-09, 1.2625e-09, 2.1667e-09,  ..., 3.0052e-09, 2.9346e-09,\n         2.1499e-09],\n        [1.5026e-07, 1.0121e-07, 1.7184e-07,  ..., 1.3495e-07, 2.1865e-07,\n         1.2953e-07],\n        [2.2204e-08, 1.1005e-08, 1.1875e-08,  ..., 1.8578e-08, 1.8684e-08,\n         1.3211e-08],\n        ...,\n        [5.1529e-09, 2.9082e-09, 2.2987e-09,  ..., 3.1923e-09, 3.5491e-09,\n         2.5265e-09],\n        [4.8460e-08, 2.9864e-08, 4.1162e-08,  ..., 2.8113e-08, 3.1114e-08,\n         2.3228e-08],\n        [3.6821e-09, 1.5063e-09, 1.8678e-09,  ..., 2.2079e-09, 2.5924e-09,\n         3.0989e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956233.766937}]}, "version": 1565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.7678962}]}, "version": 1566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9992],\n        [0.9550],\n        [0.9952],\n        [0.9977],\n        [0.9854],\n        [0.9995],\n        [0.9365],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [0.8059],\n        [0.9995],\n        [0.9998],\n        [0.9983],\n        [1.0000],\n        [0.9979],\n        [0.9477],\n        [0.9991],\n        [0.9988],\n        [0.9801],\n        [0.9945],\n        [0.9998],\n        [1.0000],\n        [0.9988],\n        [0.9890],\n        [1.0000],\n        [0.9960],\n        [0.9997],\n        [0.9998],\n        [0.9980],\n        [0.9997],\n        [0.9973],\n        [0.9951],\n        [0.9848],\n        [1.0000],\n        [0.9994],\n        [0.9990],\n        [0.9881],\n        [0.9992]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956233.7709367}]}, "version": 1567}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956233.7718272}]}, "version": 1568}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.468433380126953, "step": null, "ts": 1644956233.7729933}]}, "version": 1569}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.12349578738212585, "step": null, "ts": 1644956233.867713}]}, "version": 1570}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.7176513671875, "step": null, "ts": 1644956233.8804698}]}, "version": 1571}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9589431285858154, "step": null, "ts": 1644956234.3654974}]}, "version": 1572}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.7521e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956234.3771732}]}, "version": 1573}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.3830285}]}, "version": 1574}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.6227e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956234.384452}]}, "version": 1575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.3854373}]}, "version": 1576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.9152e-08, 6.9665e-08, 8.2284e-08,  ..., 1.1775e-07, 5.3700e-08,\n         9.2678e-08],\n        [3.3225e-09, 3.7804e-09, 7.9258e-09,  ..., 1.0536e-08, 8.9225e-09,\n         5.8095e-09],\n        [3.5683e-08, 1.1495e-08, 1.1178e-08,  ..., 9.6697e-09, 1.2173e-08,\n         9.9606e-09],\n        ...,\n        [1.4826e-11, 1.1471e-11, 9.6395e-12,  ..., 2.7020e-11, 6.4642e-12,\n         1.1417e-11],\n        [6.5486e-10, 8.3723e-10, 4.8029e-10,  ..., 6.7723e-10, 1.7181e-09,\n         9.3653e-10],\n        [6.4898e-08, 6.5230e-08, 4.9836e-08,  ..., 5.7654e-08, 8.8242e-08,\n         5.6182e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956234.3878975}]}, "version": 1577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.3888493}]}, "version": 1578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9764],\n        [0.9981],\n        [0.9961],\n        [0.9972],\n        [0.9994],\n        [0.9997],\n        [1.0000],\n        [0.8631],\n        [0.9951],\n        [1.0000],\n        [0.9999],\n        [0.9991],\n        [1.0000],\n        [0.9996],\n        [0.9999],\n        [0.9972],\n        [0.9908],\n        [0.9999],\n        [1.0000],\n        [0.8564],\n        [0.9992],\n        [0.9842],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9996],\n        [1.0000],\n        [1.0000],\n        [0.9997],\n        [0.9998],\n        [0.9715],\n        [0.9763],\n        [0.9994],\n        [0.9997],\n        [0.9998],\n        [1.0000],\n        [0.9990],\n        [0.9994],\n        [1.0000],\n        [0.9997],\n        [0.9773]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956234.3916824}]}, "version": 1579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.3925285}]}, "version": 1580}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.37982177734375, "step": null, "ts": 1644956234.393808}]}, "version": 1581}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.33217334747314453, "step": null, "ts": 1644956234.491128}]}, "version": 1582}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.437055587768555, "step": null, "ts": 1644956234.4978707}]}, "version": 1583}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1611154079437256, "step": null, "ts": 1644956234.9682624}]}, "version": 1584}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0175e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956234.9849505}]}, "version": 1585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.9871995}]}, "version": 1586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.2697e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956234.9884334}]}, "version": 1587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.9893305}]}, "version": 1588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.1241e-08, 1.6914e-08, 1.8430e-08,  ..., 3.0264e-08, 2.1043e-08,\n         1.9905e-08],\n        [1.0460e-11, 6.2492e-12, 4.2847e-11,  ..., 1.6595e-11, 8.5812e-12,\n         4.8090e-12],\n        [1.2058e-07, 1.4971e-07, 1.0649e-07,  ..., 1.1497e-07, 1.4646e-07,\n         1.1473e-07],\n        ...,\n        [1.2369e-12, 2.4549e-12, 1.3106e-12,  ..., 5.9671e-13, 4.1148e-12,\n         1.0828e-12],\n        [8.3780e-08, 8.7611e-08, 7.6621e-08,  ..., 7.9827e-08, 8.9498e-08,\n         5.3426e-08],\n        [6.3871e-09, 3.6012e-09, 6.6713e-09,  ..., 7.5567e-09, 7.3192e-09,\n         6.3871e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956234.9918766}]}, "version": 1589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.9928925}]}, "version": 1590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9921],\n        [1.0000],\n        [0.9630],\n        [0.9985],\n        [1.0000],\n        [0.9629],\n        [0.9990],\n        [0.9945],\n        [1.0000],\n        [0.9888],\n        [0.9995],\n        [0.9929],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9843],\n        [0.9655],\n        [1.0000],\n        [0.9998],\n        [0.9819],\n        [0.9960],\n        [0.9975],\n        [0.9761],\n        [0.9990],\n        [0.9748],\n        [0.9825],\n        [1.0000],\n        [0.9997],\n        [1.0000],\n        [0.9999],\n        [0.9967],\n        [0.9999],\n        [0.9934],\n        [0.9988],\n        [0.9770],\n        [0.9897],\n        [0.9995],\n        [0.9935],\n        [0.9997],\n        [1.0000],\n        [0.9737],\n        [0.9980]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956234.995827}]}, "version": 1591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956234.9987876}]}, "version": 1592}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.58847427368164, "step": null, "ts": 1644956234.999884}]}, "version": 1593}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10604149103164673, "step": null, "ts": 1644956235.0916297}]}, "version": 1594}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.42485237121582, "step": null, "ts": 1644956235.104651}]}, "version": 1595}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.171182632446289, "step": null, "ts": 1644956235.5936184}]}, "version": 1596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.5745e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956235.6043236}]}, "version": 1597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956235.6049254}]}, "version": 1598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4980e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956235.606051}]}, "version": 1599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956235.606795}]}, "version": 1600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.2794e-11, 5.3951e-11, 3.2636e-11,  ..., 3.2108e-11, 8.5349e-11,\n         1.6221e-11],\n        [1.2549e-08, 1.2332e-08, 6.4343e-09,  ..., 7.3744e-09, 1.1861e-08,\n         1.2110e-08],\n        [2.5424e-09, 1.6636e-09, 2.3229e-09,  ..., 3.2938e-09, 2.1132e-09,\n         1.7026e-09],\n        ...,\n        [1.2128e-09, 6.7270e-10, 2.1204e-09,  ..., 2.7015e-09, 1.4614e-09,\n         1.2489e-09],\n        [3.3733e-08, 2.3766e-08, 3.6345e-08,  ..., 4.4747e-08, 3.2240e-08,\n         4.3763e-08],\n        [4.4338e-09, 3.2133e-09, 3.5502e-09,  ..., 4.2586e-09, 1.9700e-09,\n         2.4838e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956235.609049}]}, "version": 1601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956235.6097999}]}, "version": 1602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9970],\n        [0.9993],\n        [0.9909],\n        [0.9953],\n        [1.0000],\n        [0.9912],\n        [0.9651],\n        [0.9723],\n        [0.9997],\n        [1.0000],\n        [0.9927],\n        [0.9998],\n        [0.9992],\n        [0.8125],\n        [0.9434],\n        [0.9958],\n        [1.0000],\n        [1.0000],\n        [0.9993],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9341],\n        [0.9986],\n        [1.0000],\n        [0.9466],\n        [0.9939],\n        [0.9930],\n        [0.9966],\n        [0.9981],\n        [0.9997],\n        [0.9997],\n        [0.9829],\n        [0.9971],\n        [0.9962],\n        [1.0000],\n        [0.9993],\n        [0.9993],\n        [0.9995],\n        [0.9904],\n        [0.9987]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956235.6126378}]}, "version": 1603}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956235.6155925}]}, "version": 1604}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.61406135559082, "step": null, "ts": 1644956235.6173372}]}, "version": 1605}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.34768691658973694, "step": null, "ts": 1644956235.7116458}]}, "version": 1606}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.049819946289062, "step": null, "ts": 1644956235.721139}]}, "version": 1607}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956235.8250668}]}, "version": 1608}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.045921325683594, "step": null, "ts": 1644956235.8250668}]}, "version": 1609}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 72.0, "step": null, "ts": 1644956235.8250668}]}, "version": 1610}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956235.8250668}]}, "version": 1611}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.18142569065094, "step": null, "ts": 1644956236.3956556}]}, "version": 1612}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.0802e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956236.4101498}]}, "version": 1613}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.411301}]}, "version": 1614}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.4591e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956236.4127054}]}, "version": 1615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.4137654}]}, "version": 1616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.0577e-09, 1.8876e-09, 3.6388e-09,  ..., 3.6293e-09, 1.8521e-09,\n         3.4517e-09],\n        [3.5667e-10, 1.1871e-10, 2.7740e-10,  ..., 3.9536e-10, 4.3370e-10,\n         2.7006e-10],\n        [5.0560e-08, 3.5896e-08, 5.2832e-08,  ..., 3.8812e-08, 4.0807e-08,\n         4.9668e-08],\n        ...,\n        [2.5906e-08, 2.2856e-08, 3.3325e-08,  ..., 3.5242e-08, 3.8732e-08,\n         3.6759e-08],\n        [2.3669e-08, 5.5128e-09, 1.5969e-08,  ..., 1.4392e-08, 2.1598e-08,\n         9.3572e-09],\n        [3.0978e-09, 1.8703e-09, 2.9570e-09,  ..., 3.4612e-09, 2.2728e-09,\n         2.6478e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956236.416318}]}, "version": 1617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.4176288}]}, "version": 1618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9989],\n        [0.9999],\n        [0.9855],\n        [0.9987],\n        [0.9762],\n        [0.9938],\n        [0.9978],\n        [0.9987],\n        [0.9999],\n        [0.9979],\n        [0.9975],\n        [0.9963],\n        [0.9910],\n        [0.9999],\n        [0.9919],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9991],\n        [0.9935],\n        [0.9983],\n        [1.0000],\n        [0.9996],\n        [0.9923],\n        [0.9711],\n        [0.9972],\n        [0.9965],\n        [0.9989],\n        [0.9951],\n        [1.0000],\n        [0.9705],\n        [1.0000],\n        [0.9855],\n        [0.8854],\n        [0.9999],\n        [0.9972],\n        [0.9983],\n        [1.0000],\n        [0.9996],\n        [0.9902],\n        [0.9954],\n        [0.9990]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956236.420893}]}, "version": 1619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.4218788}]}, "version": 1620}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.212509155273438, "step": null, "ts": 1644956236.4232945}]}, "version": 1621}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2748391628265381, "step": null, "ts": 1644956236.508842}]}, "version": 1622}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.81242561340332, "step": null, "ts": 1644956236.5220952}]}, "version": 1623}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0111570358276367, "step": null, "ts": 1644956236.9875932}]}, "version": 1624}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0059e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956236.989442}]}, "version": 1625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.9905138}]}, "version": 1626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8840e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956236.9919298}]}, "version": 1627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.9926808}]}, "version": 1628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.8692e-10, 3.5971e-10, 3.5870e-10,  ..., 6.6184e-10, 4.9132e-10,\n         6.3068e-10],\n        [2.9480e-08, 1.9323e-08, 3.0925e-08,  ..., 2.7347e-08, 2.2306e-08,\n         2.4394e-08],\n        [8.0340e-10, 2.9272e-10, 5.0185e-10,  ..., 3.6667e-10, 4.6734e-10,\n         3.1081e-10],\n        ...,\n        [3.3784e-09, 1.7567e-09, 2.2706e-09,  ..., 3.2795e-09, 4.0636e-09,\n         4.6178e-09],\n        [1.4332e-10, 1.1943e-10, 1.0586e-10,  ..., 1.0834e-10, 1.9662e-10,\n         1.7955e-10],\n        [2.4551e-08, 2.1318e-08, 2.0740e-08,  ..., 2.8941e-08, 2.5606e-08,\n         2.1068e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956236.9949238}]}, "version": 1629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.9960403}]}, "version": 1630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9998],\n        [0.9903],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [0.8964],\n        [0.9999],\n        [0.9995],\n        [0.9993],\n        [0.7882],\n        [1.0000],\n        [1.0000],\n        [0.9841],\n        [1.0000],\n        [0.9584],\n        [0.9974],\n        [0.9988],\n        [0.9997],\n        [0.9936],\n        [0.9875],\n        [0.9165],\n        [0.9830],\n        [0.9824],\n        [0.9976],\n        [0.9999],\n        [0.9711],\n        [0.9989],\n        [0.8415],\n        [0.9951],\n        [0.9981],\n        [0.9906],\n        [0.9816],\n        [0.9985],\n        [0.9986],\n        [0.9762],\n        [1.0000],\n        [0.9238],\n        [0.9999],\n        [0.9955],\n        [0.9990],\n        [0.9999],\n        [0.9925]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956236.9989643}]}, "version": 1631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956236.9997673}]}, "version": 1632}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.42481803894043, "step": null, "ts": 1644956237.001143}]}, "version": 1633}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10355504602193832, "step": null, "ts": 1644956237.0989816}]}, "version": 1634}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.619651794433594, "step": null, "ts": 1644956237.1059492}]}, "version": 1635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.574 (0.574)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss 1.0333 (1.0333)", "step": null, "ts": 1644956237.3537138}]}, "version": 1636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956237.3546598}]}, "version": 1637}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0102088451385498, "step": null, "ts": 1644956237.8142867}]}, "version": 1638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.9765e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956237.826916}]}, "version": 1639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956237.8316739}]}, "version": 1640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9508e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956237.8329768}]}, "version": 1641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956237.8336647}]}, "version": 1642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.2191e-09, 3.7857e-09, 5.2534e-09,  ..., 1.1309e-08, 5.8171e-09,\n         4.2209e-09],\n        [5.0864e-08, 3.9119e-08, 3.6686e-08,  ..., 5.3298e-08, 5.7791e-08,\n         3.5519e-08],\n        [1.5134e-07, 6.6389e-08, 5.5882e-08,  ..., 4.9848e-08, 8.6703e-08,\n         5.1883e-08],\n        ...,\n        [1.0064e-10, 8.4816e-11, 2.1137e-10,  ..., 3.1609e-10, 1.6989e-10,\n         2.6989e-10],\n        [1.8375e-08, 1.3225e-08, 1.8542e-08,  ..., 1.7265e-08, 2.3787e-08,\n         1.2274e-08],\n        [1.0956e-10, 7.9502e-11, 7.5510e-11,  ..., 4.4649e-11, 1.1526e-10,\n         1.2483e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956237.8361847}]}, "version": 1643}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956237.836828}]}, "version": 1644}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9975],\n        [0.9828],\n        [0.9822],\n        [0.9976],\n        [1.0000],\n        [0.9907],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9994],\n        [0.9930],\n        [0.9612],\n        [0.8925],\n        [0.8827],\n        [0.9668],\n        [0.9991],\n        [0.9842],\n        [0.9160],\n        [0.9964],\n        [0.9904],\n        [0.9998],\n        [0.9996],\n        [0.9992],\n        [0.9999],\n        [0.9906],\n        [0.9973],\n        [0.9991],\n        [0.9947],\n        [0.9884],\n        [0.9995],\n        [0.9762],\n        [0.9936],\n        [1.0000],\n        [0.9997],\n        [0.9925],\n        [1.0000],\n        [0.9993],\n        [0.9782],\n        [0.9542],\n        [0.9999],\n        [0.9939],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956237.8396435}]}, "version": 1645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956237.8404028}]}, "version": 1646}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 16.906156539916992, "step": null, "ts": 1644956237.84143}]}, "version": 1647}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23014084994792938, "step": null, "ts": 1644956237.9385285}]}, "version": 1648}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.03306007385254, "step": null, "ts": 1644956237.945395}]}, "version": 1649}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1033258438110352, "step": null, "ts": 1644956238.3984451}]}, "version": 1650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.4569e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956238.6895432}]}, "version": 1651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956238.6905992}]}, "version": 1652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.5079e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956238.6920729}]}, "version": 1653}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956238.6930451}]}, "version": 1654}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[9.7454e-08, 8.5488e-08, 9.7615e-08,  ..., 1.2702e-07, 1.2344e-07,\n         1.0705e-07],\n        [2.7819e-09, 2.6207e-09, 2.0691e-09,  ..., 3.1965e-09, 2.7287e-09,\n         1.4648e-09],\n        [2.1397e-09, 1.5017e-09, 2.0657e-09,  ..., 2.9515e-09, 7.9054e-09,\n         1.6615e-09],\n        ...,\n        [3.2656e-08, 3.8434e-08, 3.5757e-08,  ..., 2.7829e-08, 4.5670e-08,\n         3.9181e-08],\n        [1.4123e-07, 8.8779e-08, 1.3056e-07,  ..., 1.1717e-07, 1.0615e-07,\n         7.2950e-08],\n        [4.3954e-08, 3.2621e-08, 3.1465e-08,  ..., 3.2968e-08, 4.7750e-08,\n         3.1713e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956238.6953945}]}, "version": 1655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956238.6963909}]}, "version": 1656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9667],\n        [0.9992],\n        [0.9993],\n        [0.9992],\n        [0.9625],\n        [0.9916],\n        [0.9995],\n        [0.9931],\n        [0.9954],\n        [0.9789],\n        [0.9753],\n        [0.9983],\n        [0.9997],\n        [0.9912],\n        [0.9991],\n        [0.9750],\n        [0.9999],\n        [0.9731],\n        [0.9971],\n        [0.9475],\n        [0.9816],\n        [0.9505],\n        [0.9758],\n        [0.9941],\n        [0.9537],\n        [0.9947],\n        [1.0000],\n        [0.9996],\n        [0.7727],\n        [1.0000],\n        [0.8983],\n        [0.9988],\n        [0.9846],\n        [0.9989],\n        [1.0000],\n        [0.9284],\n        [1.0000],\n        [0.9999],\n        [0.9949],\n        [0.9871],\n        [0.9621],\n        [0.9878]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956238.6994638}]}, "version": 1657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956238.7004094}]}, "version": 1658}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 16.865478515625, "step": null, "ts": 1644956238.701814}]}, "version": 1659}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.16656698286533356, "step": null, "ts": 1644956238.8050394}]}, "version": 1660}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.09501075744629, "step": null, "ts": 1644956238.8120844}]}, "version": 1661}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.982211172580719, "step": null, "ts": 1644956239.2495902}]}, "version": 1662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4760e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956239.2568805}]}, "version": 1663}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.2648706}]}, "version": 1664}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0062e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956239.2664943}]}, "version": 1665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.2674804}]}, "version": 1666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[9.5173e-09, 5.4268e-09, 1.0956e-08,  ..., 7.8458e-09, 7.1840e-09,\n         7.7153e-09],\n        [1.5685e-08, 2.9905e-09, 5.3971e-09,  ..., 1.6946e-09, 3.7388e-09,\n         1.8227e-09],\n        [9.0954e-07, 6.9946e-07, 1.1860e-06,  ..., 8.5209e-07, 9.2623e-07,\n         7.0420e-07],\n        ...,\n        [3.7696e-09, 2.5605e-09, 2.9244e-09,  ..., 1.6619e-08, 4.0691e-09,\n         7.2698e-09],\n        [7.5819e-11, 7.4636e-11, 6.7432e-11,  ..., 1.0516e-10, 1.4982e-10,\n         1.4502e-10],\n        [6.9215e-11, 1.5971e-11, 1.2535e-11,  ..., 8.2122e-11, 2.5694e-11,\n         3.7048e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956239.2700195}]}, "version": 1667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.2709866}]}, "version": 1668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9966],\n        [0.9987],\n        [0.7322],\n        [0.9907],\n        [0.9886],\n        [0.9988],\n        [0.9414],\n        [0.9988],\n        [0.7980],\n        [1.0000],\n        [0.9109],\n        [0.9597],\n        [0.9997],\n        [0.8291],\n        [0.9975],\n        [0.9999],\n        [0.9918],\n        [0.9616],\n        [0.8544],\n        [0.9708],\n        [0.9976],\n        [0.9270],\n        [0.9762],\n        [0.9996],\n        [0.9937],\n        [0.9999],\n        [0.9657],\n        [0.9986],\n        [0.9956],\n        [0.9937],\n        [0.9999],\n        [0.8346],\n        [0.9998],\n        [0.7700],\n        [0.9873],\n        [0.9600],\n        [1.0000],\n        [0.8854],\n        [0.9999],\n        [0.9983],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956239.2739232}]}, "version": 1669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.2748551}]}, "version": 1670}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.499778747558594, "step": null, "ts": 1644956239.2760952}]}, "version": 1671}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29723498225212097, "step": null, "ts": 1644956239.3704603}]}, "version": 1672}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.777989387512207, "step": null, "ts": 1644956239.3969982}]}, "version": 1673}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2042441368103027, "step": null, "ts": 1644956239.822012}]}, "version": 1674}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9806e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956239.8301206}]}, "version": 1675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.830864}]}, "version": 1676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2506e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956239.8319383}]}, "version": 1677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.8325727}]}, "version": 1678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.2419e-09, 1.7807e-09, 2.6379e-09,  ..., 3.0285e-09, 4.4569e-09,\n         4.0847e-09],\n        [2.6268e-07, 6.6917e-08, 1.4928e-07,  ..., 1.7009e-07, 1.8515e-07,\n         1.6416e-07],\n        [3.2108e-08, 2.7417e-08, 2.7375e-08,  ..., 4.0728e-08, 2.7900e-08,\n         3.2022e-08],\n        ...,\n        [1.9035e-08, 1.1673e-08, 2.7360e-08,  ..., 3.6015e-08, 3.9785e-08,\n         1.2497e-08],\n        [1.1910e-10, 1.7563e-10, 1.3943e-10,  ..., 2.4662e-10, 3.4247e-10,\n         3.1471e-10],\n        [4.8170e-07, 2.4410e-07, 4.9792e-07,  ..., 3.2790e-07, 4.1532e-07,\n         3.9781e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956239.8348823}]}, "version": 1679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.8379705}]}, "version": 1680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9984],\n        [0.9528],\n        [0.9878],\n        [0.9896],\n        [1.0000],\n        [0.9918],\n        [0.8833],\n        [0.9293],\n        [0.9864],\n        [0.9999],\n        [0.9947],\n        [0.7160],\n        [0.5701],\n        [0.9995],\n        [0.9790],\n        [0.9997],\n        [0.9993],\n        [0.9932],\n        [0.9872],\n        [0.9559],\n        [0.9859],\n        [0.6039],\n        [0.9684],\n        [0.9807],\n        [0.9484],\n        [0.9980],\n        [0.9999],\n        [0.9343],\n        [0.9989],\n        [0.9309],\n        [0.9997],\n        [0.8938],\n        [0.9936],\n        [1.0000],\n        [0.9999],\n        [0.9783],\n        [0.9975],\n        [0.9982],\n        [1.0000],\n        [0.9924],\n        [0.9999],\n        [0.8725]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956239.8407388}]}, "version": 1681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956239.844737}]}, "version": 1682}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.52743148803711, "step": null, "ts": 1644956239.8460503}]}, "version": 1683}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22733597457408905, "step": null, "ts": 1644956239.934695}]}, "version": 1684}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.439046859741211, "step": null, "ts": 1644956239.9467432}]}, "version": 1685}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.107572078704834, "step": null, "ts": 1644956240.3897126}]}, "version": 1686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7085e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956240.401596}]}, "version": 1687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.4024248}]}, "version": 1688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8617e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956240.4038782}]}, "version": 1689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.404854}]}, "version": 1690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.4067e-07, 1.7619e-07, 1.6861e-07,  ..., 2.1582e-07, 1.5455e-07,\n         1.9411e-07],\n        [2.3467e-08, 1.3786e-08, 9.5440e-09,  ..., 2.4500e-08, 1.7071e-08,\n         1.6285e-08],\n        [8.5201e-12, 4.9128e-12, 1.4557e-11,  ..., 2.1731e-11, 8.3873e-12,\n         1.0424e-11],\n        ...,\n        [4.5762e-09, 1.2730e-09, 8.7520e-10,  ..., 6.8203e-10, 1.4041e-09,\n         3.7473e-10],\n        [2.0395e-07, 1.5305e-07, 2.4700e-07,  ..., 2.4777e-07, 1.4131e-07,\n         2.3958e-07],\n        [8.4308e-08, 3.9512e-08, 8.3577e-08,  ..., 5.0663e-08, 8.9878e-08,\n         4.4623e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956240.4070506}]}, "version": 1691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.4078104}]}, "version": 1692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9333],\n        [0.9927],\n        [1.0000],\n        [1.0000],\n        [0.6725],\n        [0.9794],\n        [0.9673],\n        [0.9825],\n        [0.9996],\n        [0.9316],\n        [0.9937],\n        [0.9995],\n        [0.9990],\n        [0.9199],\n        [0.6726],\n        [0.8270],\n        [0.9659],\n        [1.0000],\n        [0.9879],\n        [0.9314],\n        [1.0000],\n        [0.9850],\n        [0.9420],\n        [0.7376],\n        [0.9974],\n        [0.9993],\n        [0.9997],\n        [0.9745],\n        [0.9885],\n        [0.6375],\n        [0.8137],\n        [0.9840],\n        [0.9997],\n        [0.8757],\n        [0.9987],\n        [0.9911],\n        [0.9694],\n        [0.9947],\n        [0.9837],\n        [0.9996],\n        [0.9356],\n        [0.9787]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956240.4107006}]}, "version": 1693}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.415909}]}, "version": 1694}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.490909576416016, "step": null, "ts": 1644956240.4169953}]}, "version": 1695}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15148048102855682, "step": null, "ts": 1644956240.5155876}]}, "version": 1696}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.14538860321045, "step": null, "ts": 1644956240.5253968}]}, "version": 1697}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2314866781234741, "step": null, "ts": 1644956240.9585154}]}, "version": 1698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1582e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956240.9667473}]}, "version": 1699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.9676247}]}, "version": 1700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8941e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956240.9689095}]}, "version": 1701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.969492}]}, "version": 1702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.5323e-09, 4.3234e-10, 1.3221e-09,  ..., 4.5436e-09, 1.6637e-09,\n         1.1455e-09],\n        [5.3759e-10, 8.6363e-11, 1.5324e-10,  ..., 4.6713e-10, 2.7007e-10,\n         3.3219e-10],\n        [7.9315e-08, 3.4847e-08, 3.8161e-08,  ..., 7.0681e-08, 6.8606e-08,\n         6.8996e-08],\n        ...,\n        [6.2409e-07, 3.8865e-07, 5.7215e-07,  ..., 4.2522e-07, 7.9467e-07,\n         4.8659e-07],\n        [5.5905e-10, 4.3999e-10, 5.9774e-10,  ..., 1.5629e-09, 9.7612e-10,\n         1.3703e-09],\n        [4.1700e-09, 2.5038e-09, 1.5583e-09,  ..., 1.6777e-09, 2.3034e-09,\n         2.5529e-09]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956240.9716556}]}, "version": 1703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.972761}]}, "version": 1704}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9993],\n        [0.9999],\n        [0.9797],\n        [0.9995],\n        [0.4896],\n        [0.9963],\n        [0.7175],\n        [0.9650],\n        [0.9997],\n        [0.9911],\n        [0.9984],\n        [0.9978],\n        [0.9095],\n        [0.9980],\n        [1.0000],\n        [0.9987],\n        [0.9995],\n        [0.7786],\n        [0.9621],\n        [0.9658],\n        [0.9342],\n        [0.8802],\n        [0.9836],\n        [0.8958],\n        [0.9990],\n        [0.9996],\n        [0.8952],\n        [0.9980],\n        [0.6936],\n        [0.9832],\n        [0.7437],\n        [0.9538],\n        [0.9150],\n        [0.8994],\n        [0.8883],\n        [0.9884],\n        [0.9999],\n        [0.9997],\n        [0.9507],\n        [0.8191],\n        [0.9997],\n        [0.9991]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956240.9757893}]}, "version": 1705}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956240.976658}]}, "version": 1706}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.93010902404785, "step": null, "ts": 1644956240.9779713}]}, "version": 1707}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2904288172721863, "step": null, "ts": 1644956241.0770745}]}, "version": 1708}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.820257186889648, "step": null, "ts": 1644956241.0818014}]}, "version": 1709}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9534329175949097, "step": null, "ts": 1644956241.5734336}]}, "version": 1710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5030e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956241.5845776}]}, "version": 1711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956241.5870662}]}, "version": 1712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.6495e-11, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956241.588208}]}, "version": 1713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956241.588771}]}, "version": 1714}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6329e-07, 9.0030e-08, 1.4532e-07,  ..., 9.5094e-08, 9.6385e-08,\n         1.1013e-07],\n        [1.6266e-10, 1.6514e-10, 2.8347e-10,  ..., 3.0205e-10, 2.0977e-10,\n         4.4578e-10],\n        [3.5521e-07, 1.9084e-07, 2.6172e-07,  ..., 3.2772e-07, 3.8025e-07,\n         3.9464e-07],\n        ...,\n        [2.4423e-08, 7.0694e-09, 5.5673e-09,  ..., 4.0129e-09, 7.4349e-09,\n         2.2492e-09],\n        [5.1308e-08, 1.9975e-08, 6.2107e-08,  ..., 6.9710e-08, 3.5644e-08,\n         3.5406e-08],\n        [6.2522e-08, 6.2586e-08, 6.7951e-08,  ..., 8.5379e-08, 6.7988e-08,\n         8.2929e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956241.5909076}]}, "version": 1715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956241.5951617}]}, "version": 1716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9610],\n        [0.9999],\n        [0.9062],\n        [0.9870],\n        [0.9952],\n        [0.8612],\n        [0.9958],\n        [0.9892],\n        [0.9310],\n        [0.9979],\n        [0.9981],\n        [0.9863],\n        [0.9999],\n        [0.9410],\n        [0.9982],\n        [0.9997],\n        [0.9990],\n        [0.7687],\n        [0.9872],\n        [0.9998],\n        [0.9946],\n        [0.9999],\n        [0.9600],\n        [0.9895],\n        [0.9812],\n        [0.9042],\n        [0.9242],\n        [0.8773],\n        [0.9989],\n        [0.9974],\n        [0.8362],\n        [0.6420],\n        [0.9850],\n        [0.9982],\n        [0.9223],\n        [0.9921],\n        [0.9914],\n        [0.9992],\n        [0.8697],\n        [0.9980],\n        [0.9858],\n        [0.9762]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956241.5979922}]}, "version": 1717}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956241.598696}]}, "version": 1718}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 16.73535919189453, "step": null, "ts": 1644956241.5999453}]}, "version": 1719}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2615815997123718, "step": null, "ts": 1644956241.7001789}]}, "version": 1720}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.709295272827148, "step": null, "ts": 1644956241.7071028}]}, "version": 1721}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0604709386825562, "step": null, "ts": 1644956242.178717}]}, "version": 1722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4215e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956242.1876156}]}, "version": 1723}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.1886451}]}, "version": 1724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.7873e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956242.1901615}]}, "version": 1725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.1912153}]}, "version": 1726}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.1350e-08, 1.2420e-08, 2.1984e-08,  ..., 6.7408e-09, 9.4841e-09,\n         1.1215e-08],\n        [1.1419e-07, 1.4745e-07, 1.0198e-07,  ..., 1.4379e-07, 1.6426e-07,\n         5.4619e-08],\n        [1.2112e-08, 1.2960e-09, 3.7718e-10,  ..., 4.3087e-10, 1.0667e-09,\n         4.9442e-10],\n        ...,\n        [5.1595e-11, 7.5004e-12, 1.8713e-11,  ..., 3.8651e-11, 5.1073e-11,\n         3.2289e-11],\n        [1.0608e-09, 9.2863e-10, 1.3484e-09,  ..., 2.0814e-09, 1.7462e-09,\n         1.2805e-09],\n        [1.6434e-06, 9.9086e-07, 1.6338e-06,  ..., 1.5027e-06, 1.9053e-06,\n         1.2254e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956242.193693}]}, "version": 1727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.1946614}]}, "version": 1728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9946],\n        [0.9583],\n        [0.9996],\n        [0.9788],\n        [0.6338],\n        [0.9849],\n        [0.9665],\n        [0.9847],\n        [0.9890],\n        [0.9936],\n        [0.9855],\n        [0.9999],\n        [0.7623],\n        [0.8987],\n        [0.9936],\n        [0.9909],\n        [0.9995],\n        [0.9326],\n        [0.9935],\n        [0.6256],\n        [0.8112],\n        [1.0000],\n        [0.9869],\n        [0.9925],\n        [0.9831],\n        [0.9702],\n        [0.9867],\n        [0.9682],\n        [0.9950],\n        [0.7855],\n        [0.9977],\n        [0.9974],\n        [0.9676],\n        [0.9869],\n        [0.9971],\n        [0.9979],\n        [0.9242],\n        [0.9871],\n        [0.8929],\n        [1.0000],\n        [0.9996],\n        [0.5167]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956242.1978457}]}, "version": 1729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.1998758}]}, "version": 1730}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.4190616607666, "step": null, "ts": 1644956242.2010388}]}, "version": 1731}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23604100942611694, "step": null, "ts": 1644956242.2946806}]}, "version": 1732}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.495810508728027, "step": null, "ts": 1644956242.3060777}]}, "version": 1733}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.085315465927124, "step": null, "ts": 1644956242.7972033}]}, "version": 1734}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9226e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956242.805689}]}, "version": 1735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.8065958}]}, "version": 1736}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4616e-11, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956242.8080752}]}, "version": 1737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.8086803}]}, "version": 1738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3129e-07, 2.9369e-07, 4.0024e-07,  ..., 7.8046e-07, 5.6563e-07,\n         3.5802e-07],\n        [1.9600e-10, 5.2286e-11, 5.9296e-11,  ..., 6.7054e-10, 1.9618e-10,\n         1.1349e-10],\n        [1.7915e-09, 1.0944e-09, 1.4936e-09,  ..., 1.5536e-09, 1.2376e-09,\n         1.0004e-09],\n        ...,\n        [6.1165e-08, 4.8305e-08, 6.2226e-08,  ..., 6.3732e-08, 3.0863e-08,\n         4.2648e-08],\n        [6.2636e-09, 6.4932e-09, 3.1240e-09,  ..., 7.5998e-09, 5.3360e-09,\n         5.7297e-09],\n        [8.4982e-07, 1.1162e-06, 9.6671e-07,  ..., 1.0207e-06, 9.9788e-07,\n         1.1248e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956242.810948}]}, "version": 1739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.811788}]}, "version": 1740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8547],\n        [0.9999],\n        [0.9992],\n        [0.9841],\n        [0.8884],\n        [0.9966],\n        [0.9996],\n        [0.9957],\n        [0.9364],\n        [0.9405],\n        [0.9744],\n        [0.9948],\n        [0.9635],\n        [0.8362],\n        [0.9962],\n        [0.9211],\n        [0.9639],\n        [0.9998],\n        [0.9991],\n        [0.7978],\n        [0.9993],\n        [0.6965],\n        [0.9941],\n        [0.9977],\n        [0.9933],\n        [0.9999],\n        [0.9696],\n        [0.9921],\n        [0.9998],\n        [0.9798],\n        [0.9961],\n        [0.9256],\n        [0.8878],\n        [0.8536],\n        [0.8723],\n        [0.9919],\n        [0.9585],\n        [0.7604],\n        [0.9665],\n        [0.9784],\n        [0.9981],\n        [0.6483]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956242.8147252}]}, "version": 1741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956242.8154626}]}, "version": 1742}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.064424514770508, "step": null, "ts": 1644956242.8165717}]}, "version": 1743}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.36841925978660583, "step": null, "ts": 1644956242.907211}]}, "version": 1744}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.375967025756836, "step": null, "ts": 1644956242.9140446}]}, "version": 1745}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1781179904937744, "step": null, "ts": 1644956243.4138558}]}, "version": 1746}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4136e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956243.4241114}]}, "version": 1747}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956243.4278023}]}, "version": 1748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7076e-10, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956243.4288917}]}, "version": 1749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956243.4294508}]}, "version": 1750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0231e-08, 3.0237e-08, 3.4561e-08,  ..., 8.2670e-08, 3.9911e-08,\n         4.4288e-08],\n        [8.6875e-08, 9.7206e-08, 1.0268e-07,  ..., 1.0749e-07, 1.0490e-07,\n         5.3918e-08],\n        [1.5624e-07, 8.2348e-08, 1.5141e-07,  ..., 1.1919e-07, 1.2709e-07,\n         1.5155e-07],\n        ...,\n        [1.6003e-07, 9.9376e-08, 1.3066e-07,  ..., 1.8202e-07, 1.4219e-07,\n         1.2507e-07],\n        [1.1006e-09, 1.1492e-09, 5.5462e-10,  ..., 1.3314e-09, 1.5051e-09,\n         6.7358e-10],\n        [2.3547e-07, 1.4568e-07, 1.7998e-07,  ..., 2.7214e-07, 1.8266e-07,\n         1.8302e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956243.4317331}]}, "version": 1751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956243.4325767}]}, "version": 1752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9828],\n        [0.9716],\n        [0.9608],\n        [0.9851],\n        [0.8566],\n        [0.9958],\n        [0.9058],\n        [0.9995],\n        [0.9996],\n        [0.9196],\n        [0.9441],\n        [0.9993],\n        [0.9984],\n        [0.9695],\n        [0.9949],\n        [0.9993],\n        [0.9996],\n        [0.9827],\n        [0.9643],\n        [0.8747],\n        [0.9992],\n        [0.9103],\n        [0.7736],\n        [0.9334],\n        [0.9940],\n        [0.9996],\n        [0.9930],\n        [0.9956],\n        [0.9577],\n        [0.8313],\n        [0.9434],\n        [0.7897],\n        [0.9895],\n        [0.8567],\n        [0.8153],\n        [0.9491],\n        [0.9909],\n        [0.9636],\n        [0.8248],\n        [0.9449],\n        [0.9997],\n        [0.9360]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956243.4354718}]}, "version": 1753}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956243.4394486}]}, "version": 1754}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 16.5589599609375, "step": null, "ts": 1644956243.4405181}]}, "version": 1755}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25707727670669556, "step": null, "ts": 1644956243.528789}]}, "version": 1756}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.091503143310547, "step": null, "ts": 1644956243.5423558}]}, "version": 1757}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.619 (0.619)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 0.9566 (0.9566)", "step": null, "ts": 1644956243.7870793}]}, "version": 1758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956243.788121}]}, "version": 1759}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8424217104911804, "step": null, "ts": 1644956243.9979453}]}, "version": 1760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4278e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956244.0019689}]}, "version": 1761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.0073051}]}, "version": 1762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.0275e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956244.0085096}]}, "version": 1763}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.0094726}]}, "version": 1764}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.4949e-07, 2.7179e-07, 6.1138e-07,  ..., 4.0081e-07, 5.2932e-07,\n         3.7238e-07],\n        [1.0667e-08, 7.1307e-09, 6.8354e-09,  ..., 1.0823e-08, 2.8814e-09,\n         1.2891e-08],\n        [1.2248e-08, 7.7133e-09, 5.8075e-08,  ..., 1.2789e-08, 1.1498e-08,\n         1.1915e-08],\n        ...,\n        [6.5124e-08, 6.4648e-08, 6.2336e-08,  ..., 4.5035e-08, 3.5372e-08,\n         3.5314e-08],\n        [1.1811e-08, 1.9706e-08, 1.5692e-08,  ..., 1.9447e-08, 1.8875e-08,\n         1.2712e-08],\n        [8.4359e-08, 4.2623e-08, 5.4471e-08,  ..., 5.2247e-08, 8.0920e-08,\n         6.5452e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956244.011992}]}, "version": 1765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.0128384}]}, "version": 1766}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8631],\n        [0.9955],\n        [0.9956],\n        [0.9613],\n        [0.9964],\n        [0.6815],\n        [0.4206],\n        [0.9120],\n        [0.9787],\n        [0.9952],\n        [0.9950],\n        [0.6440],\n        [0.9850],\n        [1.0000],\n        [1.0000],\n        [0.9637],\n        [0.9238],\n        [0.9924],\n        [0.9765],\n        [0.9945],\n        [0.9966],\n        [0.9917],\n        [0.9263],\n        [0.9937],\n        [0.9982],\n        [0.9817],\n        [0.8011],\n        [0.9618],\n        [0.9794],\n        [0.9637],\n        [0.9194],\n        [0.9713],\n        [0.8045],\n        [0.8946],\n        [0.9259],\n        [0.9922],\n        [0.9971],\n        [0.8251],\n        [0.9760],\n        [0.9772],\n        [0.9946],\n        [0.9780]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956244.016005}]}, "version": 1767}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.017238}]}, "version": 1768}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.259632110595703, "step": null, "ts": 1644956244.018258}]}, "version": 1769}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2573503255844116, "step": null, "ts": 1644956244.118876}]}, "version": 1770}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.001011848449707, "step": null, "ts": 1644956244.1255145}]}, "version": 1771}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1390079259872437, "step": null, "ts": 1644956244.596162}]}, "version": 1772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1181e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956244.6059403}]}, "version": 1773}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.610603}]}, "version": 1774}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8372e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956244.6117022}]}, "version": 1775}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.6124187}]}, "version": 1776}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.3692e-07, 3.0808e-07, 3.8997e-07,  ..., 2.5754e-07, 4.6578e-07,\n         3.7597e-07],\n        [3.5829e-07, 2.7405e-07, 4.9178e-07,  ..., 3.7321e-07, 5.4988e-07,\n         3.6740e-07],\n        [1.1740e-06, 7.7131e-07, 8.5273e-07,  ..., 9.1727e-07, 1.0042e-06,\n         1.0011e-06],\n        ...,\n        [8.8555e-07, 7.3673e-07, 9.5474e-07,  ..., 1.0153e-06, 8.3665e-07,\n         8.2069e-07],\n        [1.8786e-10, 5.0696e-11, 3.0286e-10,  ..., 1.4084e-10, 7.7788e-11,\n         6.9364e-11],\n        [3.8145e-07, 2.9307e-07, 2.8597e-07,  ..., 3.6099e-07, 3.6848e-07,\n         2.6383e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956244.6145756}]}, "version": 1777}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.6151545}]}, "version": 1778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8666],\n        [0.8607],\n        [0.6746],\n        [0.9955],\n        [0.9244],\n        [0.8758],\n        [0.9914],\n        [0.9366],\n        [0.8984],\n        [0.8277],\n        [0.9323],\n        [0.9999],\n        [0.9504],\n        [0.9916],\n        [0.7101],\n        [0.9812],\n        [1.0000],\n        [0.9997],\n        [0.8408],\n        [0.9823],\n        [0.9530],\n        [0.9997],\n        [0.9871],\n        [0.8346],\n        [0.4655],\n        [0.7380],\n        [0.5383],\n        [0.9972],\n        [0.9988],\n        [0.9264],\n        [0.9654],\n        [0.5926],\n        [0.5165],\n        [0.9598],\n        [0.9914],\n        [0.9922],\n        [0.9823],\n        [0.9964],\n        [0.9708],\n        [0.7340],\n        [0.9998],\n        [0.8734]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956244.6179452}]}, "version": 1779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956244.6186583}]}, "version": 1780}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.061918258666992, "step": null, "ts": 1644956244.6199968}]}, "version": 1781}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1861371397972107, "step": null, "ts": 1644956244.710798}]}, "version": 1782}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.910909652709961, "step": null, "ts": 1644956245.0774384}]}, "version": 1783}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.176522135734558, "step": null, "ts": 1644956245.4993615}]}, "version": 1784}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9220e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956245.506912}]}, "version": 1785}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956245.5109758}]}, "version": 1786}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6217e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956245.5121832}]}, "version": 1787}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956245.5132167}]}, "version": 1788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.4687e-07, 1.3953e-07, 7.6886e-08,  ..., 1.0964e-07, 1.1737e-07,\n         1.1059e-07],\n        [1.6350e-08, 3.5504e-09, 4.3651e-09,  ..., 6.2314e-09, 8.1602e-09,\n         1.0229e-08],\n        [3.0822e-07, 2.5352e-07, 2.5157e-07,  ..., 3.3675e-07, 2.0761e-07,\n         1.6047e-07],\n        ...,\n        [5.4244e-07, 5.1819e-07, 4.2685e-07,  ..., 5.2644e-07, 4.4244e-07,\n         4.1648e-07],\n        [2.1278e-07, 8.0091e-08, 1.0585e-07,  ..., 1.3526e-07, 7.5865e-08,\n         1.0168e-07],\n        [5.4201e-07, 2.0050e-07, 4.8872e-07,  ..., 3.8629e-07, 7.1808e-07,\n         3.9795e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956245.515631}]}, "version": 1789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956245.5165966}]}, "version": 1790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9581],\n        [0.9976],\n        [0.9166],\n        [0.7100],\n        [0.7039],\n        [0.9758],\n        [0.8307],\n        [0.5040],\n        [0.9866],\n        [0.9824],\n        [0.7011],\n        [0.9814],\n        [0.8726],\n        [0.9014],\n        [0.6138],\n        [0.9733],\n        [0.9885],\n        [0.9913],\n        [0.9974],\n        [0.9987],\n        [0.7258],\n        [0.8877],\n        [0.9896],\n        [0.9996],\n        [0.9953],\n        [0.9990],\n        [0.9786],\n        [0.7636],\n        [0.9963],\n        [0.9865],\n        [0.9374],\n        [0.9737],\n        [1.0000],\n        [0.6061],\n        [0.9754],\n        [0.8524],\n        [0.9932],\n        [0.9930],\n        [0.6173],\n        [0.8451],\n        [0.9559],\n        [0.8797]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956245.5197363}]}, "version": 1791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956245.5238626}]}, "version": 1792}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.505664825439453, "step": null, "ts": 1644956245.5252883}]}, "version": 1793}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2511143386363983, "step": null, "ts": 1644956245.6101465}]}, "version": 1794}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.725500106811523, "step": null, "ts": 1644956245.620468}]}, "version": 1795}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956245.8297076}]}, "version": 1796}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.043815612792969, "step": null, "ts": 1644956245.8297076}]}, "version": 1797}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 92.0, "step": null, "ts": 1644956245.8297076}]}, "version": 1798}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956245.8297076}]}, "version": 1799}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956255.8341563}]}, "version": 1800}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.156681060791016, "step": null, "ts": 1644956255.8341563}]}, "version": 1801}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644956255.8341563}]}, "version": 1802}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9991455078125, "step": null, "ts": 1644956255.8341563}]}, "version": 1803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [1][0/13]\tT 0.664 (0.664)\tD 0.537 (0.537)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.0877 (0.0877)", "step": null, "ts": 1644956259.886987}]}, "version": 1804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956259.8943217}]}, "version": 1805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [1][10/13]\tT 0.483 (0.476)\tD 0.363 (0.356)\tT@1 73.016 (82.828)\tT@5 98.413 (96.248)\tL 0.8383 (0.6681)", "step": null, "ts": 1644956264.4557621}]}, "version": 1806}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956264.4619582}]}, "version": 1807}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956269.8074791}]}, "version": 1808}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956265.8395607}]}, "version": 1809}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.070384979248047, "step": null, "ts": 1644956265.8395607}]}, "version": 1810}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9991455078125, "step": null, "ts": 1644956265.8395607}]}, "version": 1811}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956279.0900316}]}, "version": 1812}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956279.8833542}]}, "version": 1813}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956279.8122969}]}, "version": 1814}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.121425628662109, "step": null, "ts": 1644956279.8122969}]}, "version": 1815}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9991455078125, "step": null, "ts": 1644956279.8122969}]}, "version": 1816}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 82.893, Prec@5 95.975", "step": null, "ts": 1644956279.8870382}]}, "version": 1817}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956279.8875587}]}, "version": 1818}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [1][0/13]\tTime 0.672 (0.672)\tLoss 0.0877 (0.0877)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644956280.5630379}]}, "version": 1819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956280.5771918}]}, "version": 1820}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [1][10/13]\tTime 0.471 (0.480)\tLoss 0.8383 (0.6681)\tPrec@1 73.016 (82.828)\tPrec@5 98.413 (96.248)", "step": null, "ts": 1644956285.1705513}]}, "version": 1821}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956285.3556542}]}, "version": 1822}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 82.893, Prec@5 95.975", "step": null, "ts": 1644956285.87869}]}, "version": 1823}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956285.8798723}]}, "version": 1824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 0, Average clustering time 0.310, Prec@1 88.679", "step": null, "ts": 1644956286.1924257}]}, "version": 1825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.193589}]}, "version": 1826}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 1, Average clustering time 0.207, Prec@1 89.560", "step": null, "ts": 1644956286.29708}]}, "version": 1827}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.29841}]}, "version": 1828}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 2, Average clustering time 0.160, Prec@1 89.811", "step": null, "ts": 1644956286.361476}]}, "version": 1829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.3626413}]}, "version": 1830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 3, Average clustering time 0.136, Prec@1 89.182", "step": null, "ts": 1644956286.4254658}]}, "version": 1831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.4267292}]}, "version": 1832}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 4, Average clustering time 0.121, Prec@1 88.805", "step": null, "ts": 1644956286.4882476}]}, "version": 1833}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.4890924}]}, "version": 1834}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 0, Average clustering time 0.001, Prec@1 87.421", "step": null, "ts": 1644956286.6074135}]}, "version": 1835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.6084206}]}, "version": 1836}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 1, Average clustering time 0.030, Prec@1 88.302", "step": null, "ts": 1644956286.666971}]}, "version": 1837}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.6683865}]}, "version": 1838}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 2, Average clustering time 0.043, Prec@1 88.428", "step": null, "ts": 1644956286.7346208}]}, "version": 1839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.7357185}]}, "version": 1840}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 3, Average clustering time 0.047, Prec@1 88.050", "step": null, "ts": 1644956286.7946692}]}, "version": 1841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.7963064}]}, "version": 1842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 1, K-means clustering 4, Average clustering time 0.050, Prec@1 87.925", "step": null, "ts": 1644956286.8555214}]}, "version": 1843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956286.8573172}]}, "version": 1844}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 82.89308347881965, "step": null, "ts": 1644956287.6131876}]}, "version": 1845}
{"obj": {"type": "LogFloats", "path": ["metrics", "best_acc"], "values": [{"value": 82.89308347881965, "step": null, "ts": 1644956287.6254396}]}, "version": 1846}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.198508381843567, "step": null, "ts": 1644956289.3000712}]}, "version": 1847}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2956e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956289.3146577}]}, "version": 1848}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.322767}]}, "version": 1849}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.8167e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956289.3241897}]}, "version": 1850}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.3252087}]}, "version": 1851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.4393e-07, 1.1874e-07, 1.5326e-07,  ..., 1.8484e-07, 1.5733e-07,\n         1.9150e-07],\n        [6.2129e-07, 5.2059e-07, 1.6134e-06,  ..., 7.2871e-07, 8.9528e-07,\n         5.7146e-07],\n        [9.4181e-07, 6.6517e-07, 1.0714e-06,  ..., 9.4537e-07, 1.6235e-06,\n         6.5109e-07],\n        ...,\n        [6.8539e-07, 4.6755e-07, 7.2788e-07,  ..., 7.4137e-07, 5.8526e-07,\n         7.2095e-07],\n        [4.8655e-11, 5.2349e-12, 1.9993e-11,  ..., 4.9523e-11, 2.6711e-11,\n         1.2351e-11],\n        [1.2028e-06, 1.0945e-06, 1.3091e-06,  ..., 1.3436e-06, 1.2695e-06,\n         1.4657e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956289.3274992}]}, "version": 1852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.3284354}]}, "version": 1853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9290],\n        [0.7681],\n        [0.7255],\n        [0.8995],\n        [0.9206],\n        [0.9893],\n        [0.9921],\n        [0.9683],\n        [0.8147],\n        [0.9075],\n        [0.7107],\n        [0.9767],\n        [0.9999],\n        [0.6725],\n        [0.8845],\n        [0.4497],\n        [0.9954],\n        [0.7389],\n        [0.7027],\n        [0.9771],\n        [0.7327],\n        [0.9993],\n        [0.9518],\n        [0.9964],\n        [0.9292],\n        [0.9257],\n        [0.9194],\n        [0.8863],\n        [0.5690],\n        [0.4557],\n        [1.0000],\n        [0.9830],\n        [0.6126],\n        [0.4844],\n        [0.9991],\n        [0.9993],\n        [0.9590],\n        [0.9066],\n        [0.8862],\n        [0.7900],\n        [1.0000],\n        [0.6074]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956289.3315303}]}, "version": 1854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.3323634}]}, "version": 1855}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.67224884033203, "step": null, "ts": 1644956289.3338702}]}, "version": 1856}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20218800008296967, "step": null, "ts": 1644956289.42985}]}, "version": 1857}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.640480995178223, "step": null, "ts": 1644956289.4415631}]}, "version": 1858}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.049958", "step": null, "ts": 1644956289.6885076}]}, "version": 1859}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.6894054}]}, "version": 1860}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0970935821533203, "step": null, "ts": 1644956289.8728821}]}, "version": 1861}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.8, "step": null, "ts": 1644956289.8870916}]}, "version": 1862}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.976268768310547, "step": null, "ts": 1644956289.8870916}]}, "version": 1863}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 94.0, "step": null, "ts": 1644956289.8870916}]}, "version": 1864}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956289.8870916}]}, "version": 1865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.4150e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956289.8910348}]}, "version": 1866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.891416}]}, "version": 1867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4573e-10, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956289.8924725}]}, "version": 1868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.8930123}]}, "version": 1869}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.3521e-08, 5.0134e-08, 1.4141e-07,  ..., 4.7201e-07, 1.1198e-07,\n         1.2936e-07],\n        [9.2174e-08, 6.8956e-08, 2.1259e-07,  ..., 1.1061e-07, 1.0755e-07,\n         7.5613e-08],\n        [2.5875e-07, 1.1922e-07, 2.0746e-07,  ..., 2.0450e-07, 2.5062e-07,\n         1.4286e-07],\n        ...,\n        [7.1891e-07, 5.9039e-07, 1.0784e-06,  ..., 1.1923e-06, 9.1751e-07,\n         5.7012e-07],\n        [5.1854e-09, 2.1465e-09, 3.3660e-09,  ..., 5.7576e-09, 3.2370e-09,\n         2.1223e-09],\n        [2.5034e-07, 2.1543e-07, 2.9995e-07,  ..., 4.0867e-07, 6.1587e-07,\n         2.1191e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956289.8951387}]}, "version": 1870}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.895908}]}, "version": 1871}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9560],\n        [0.9696],\n        [0.9262],\n        [0.9996],\n        [0.8206],\n        [0.9973],\n        [0.9782],\n        [0.7059],\n        [0.9995],\n        [0.9988],\n        [0.9691],\n        [0.9922],\n        [0.9744],\n        [0.9640],\n        [0.9894],\n        [0.5273],\n        [0.9245],\n        [0.9729],\n        [0.9737],\n        [0.9711],\n        [0.9967],\n        [0.9600],\n        [0.9948],\n        [0.9910],\n        [0.9881],\n        [0.9996],\n        [0.8701],\n        [0.8096],\n        [0.6769],\n        [0.9943],\n        [0.8616],\n        [0.6326],\n        [0.9468],\n        [0.4419],\n        [0.9541],\n        [0.9858],\n        [0.9911],\n        [0.9065],\n        [0.5493],\n        [0.7574],\n        [0.9983],\n        [0.8922]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956289.8987617}]}, "version": 1872}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956289.8996139}]}, "version": 1873}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.470951080322266, "step": null, "ts": 1644956289.9010088}]}, "version": 1874}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.12977391481399536, "step": null, "ts": 1644956290.0109518}]}, "version": 1875}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.868114471435547, "step": null, "ts": 1644956290.0153868}]}, "version": 1876}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.168209433555603, "step": null, "ts": 1644956290.4391222}]}, "version": 1877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.2426e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956290.4542415}]}, "version": 1878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956290.4552503}]}, "version": 1879}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9552e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956290.4564471}]}, "version": 1880}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956290.457445}]}, "version": 1881}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.9905e-07, 1.7384e-07, 2.6908e-07,  ..., 3.1877e-07, 2.6192e-07,\n         2.9768e-07],\n        [9.9329e-08, 5.2142e-08, 1.0812e-07,  ..., 8.0018e-08, 8.5903e-08,\n         1.0804e-07],\n        [1.0752e-07, 8.1662e-08, 9.8687e-08,  ..., 1.8576e-07, 8.6598e-08,\n         1.0462e-07],\n        ...,\n        [6.3548e-07, 5.2947e-07, 4.4371e-07,  ..., 5.0627e-07, 7.3856e-07,\n         5.5387e-07],\n        [1.2258e-07, 7.1315e-09, 1.4014e-08,  ..., 4.9968e-09, 9.9448e-09,\n         7.8104e-09],\n        [9.7603e-07, 4.5841e-07, 7.8016e-07,  ..., 7.4839e-07, 1.0186e-06,\n         1.1777e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956290.4596832}]}, "version": 1882}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956290.4605713}]}, "version": 1883}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8932],\n        [0.9718],\n        [0.9570],\n        [0.8936],\n        [0.8546],\n        [0.9924],\n        [0.9599],\n        [0.8769],\n        [0.9958],\n        [0.9431],\n        [0.9518],\n        [0.5080],\n        [0.9893],\n        [0.7623],\n        [0.9663],\n        [0.9856],\n        [0.9877],\n        [0.9922],\n        [0.9983],\n        [0.9676],\n        [0.9989],\n        [0.9973],\n        [0.5390],\n        [0.9970],\n        [0.9537],\n        [0.6768],\n        [0.9051],\n        [0.9960],\n        [0.6753],\n        [1.0000],\n        [0.8492],\n        [0.9974],\n        [0.9582],\n        [0.8567],\n        [0.7813],\n        [0.7365],\n        [0.9819],\n        [0.9966],\n        [0.8696],\n        [0.8008],\n        [0.9957],\n        [0.7572]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956290.4634283}]}, "version": 1884}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956290.4648101}]}, "version": 1885}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.231204986572266, "step": null, "ts": 1644956290.4658122}]}, "version": 1886}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10794492065906525, "step": null, "ts": 1644956290.5633817}]}, "version": 1887}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.764881134033203, "step": null, "ts": 1644956290.570361}]}, "version": 1888}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9867978692054749, "step": null, "ts": 1644956290.997506}]}, "version": 1889}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8551e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956291.0056088}]}, "version": 1890}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.0139592}]}, "version": 1891}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0997e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956291.0151768}]}, "version": 1892}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.016213}]}, "version": 1893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.7044e-07, 2.6898e-07, 3.0688e-07,  ..., 3.3545e-07, 5.3387e-07,\n         2.8323e-07],\n        [1.7511e-07, 8.8911e-08, 1.2414e-07,  ..., 2.2566e-07, 1.7773e-07,\n         1.0084e-07],\n        [6.2066e-07, 4.1803e-07, 3.6535e-07,  ..., 5.1532e-07, 4.2622e-07,\n         3.8828e-07],\n        ...,\n        [7.1065e-07, 4.5128e-07, 5.8513e-07,  ..., 1.0083e-06, 5.7908e-07,\n         3.7587e-07],\n        [5.9915e-07, 6.7578e-07, 5.5091e-07,  ..., 7.8509e-07, 8.0451e-07,\n         6.1929e-07],\n        [1.1717e-09, 2.4913e-10, 3.0621e-10,  ..., 1.0541e-09, 3.9799e-10,\n         7.1827e-10]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956291.0184433}]}, "version": 1894}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.0193112}]}, "version": 1895}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8945],\n        [0.9281],\n        [0.8384],\n        [0.9919],\n        [0.9934],\n        [0.8909],\n        [0.9623],\n        [0.9900],\n        [0.6834],\n        [1.0000],\n        [0.9927],\n        [0.9557],\n        [0.9941],\n        [0.9920],\n        [0.9946],\n        [0.9929],\n        [1.0000],\n        [0.7733],\n        [0.9943],\n        [0.7159],\n        [0.6376],\n        [0.9712],\n        [0.5630],\n        [0.9864],\n        [0.8089],\n        [0.3987],\n        [0.7771],\n        [0.9811],\n        [0.9805],\n        [0.5315],\n        [0.9212],\n        [0.9924],\n        [0.8814],\n        [0.8138],\n        [0.7445],\n        [0.9834],\n        [0.9946],\n        [0.8635],\n        [0.8565],\n        [0.8034],\n        [0.7753],\n        [0.9996]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956291.0221725}]}, "version": 1896}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.023083}]}, "version": 1897}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.229873657226562, "step": null, "ts": 1644956291.0242245}]}, "version": 1898}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38551294803619385, "step": null, "ts": 1644956291.1172428}]}, "version": 1899}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.520010948181152, "step": null, "ts": 1644956291.1266441}]}, "version": 1900}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1483296155929565, "step": null, "ts": 1644956291.5576897}]}, "version": 1901}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9774e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956291.565867}]}, "version": 1902}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.5670047}]}, "version": 1903}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.4068e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956291.5683725}]}, "version": 1904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.5693772}]}, "version": 1905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.4093e-07, 3.0638e-07, 1.0658e-06,  ..., 7.9953e-07, 8.1165e-07,\n         4.6177e-07],\n        [7.3956e-07, 6.3920e-07, 1.3113e-06,  ..., 1.3655e-06, 1.0819e-06,\n         7.5134e-07],\n        [2.0856e-07, 2.6304e-07, 2.4919e-07,  ..., 1.4455e-07, 2.3022e-07,\n         1.1173e-07],\n        ...,\n        [9.2600e-08, 4.7987e-08, 1.1404e-07,  ..., 1.2705e-07, 8.2966e-08,\n         6.7248e-08],\n        [1.6424e-07, 6.1545e-08, 9.8469e-08,  ..., 1.5223e-07, 1.1527e-07,\n         1.0739e-07],\n        [7.1072e-08, 2.6008e-08, 3.7022e-08,  ..., 5.7668e-08, 3.1013e-08,\n         2.4855e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956291.5720038}]}, "version": 1906}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.5731158}]}, "version": 1907}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8003],\n        [0.6641],\n        [0.9307],\n        [0.9115],\n        [0.8869],\n        [0.7314],\n        [0.8786],\n        [0.9487],\n        [0.7063],\n        [0.9939],\n        [1.0000],\n        [0.9997],\n        [0.8579],\n        [0.9957],\n        [0.8448],\n        [0.9679],\n        [0.6159],\n        [0.9885],\n        [0.9961],\n        [0.9999],\n        [0.9929],\n        [1.0000],\n        [0.5748],\n        [0.4781],\n        [0.9908],\n        [0.9836],\n        [0.9974],\n        [0.8474],\n        [0.8443],\n        [0.9735],\n        [0.7024],\n        [0.8221],\n        [0.9773],\n        [0.9067],\n        [0.6220],\n        [0.9946],\n        [0.3432],\n        [0.7968],\n        [0.9174],\n        [0.9667],\n        [0.9565],\n        [0.9799]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956291.576117}]}, "version": 1908}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956291.5799894}]}, "version": 1909}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.70981788635254, "step": null, "ts": 1644956291.5811086}]}, "version": 1910}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2609202265739441, "step": null, "ts": 1644956291.6704714}]}, "version": 1911}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.407389640808105, "step": null, "ts": 1644956291.678639}]}, "version": 1912}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.118104338645935, "step": null, "ts": 1644956292.1292326}]}, "version": 1913}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.0818e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956292.14071}]}, "version": 1914}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.1418018}]}, "version": 1915}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6160e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956292.143342}]}, "version": 1916}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.144429}]}, "version": 1917}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0152e-07, 6.2525e-08, 6.8946e-08,  ..., 6.3962e-08, 4.1861e-08,\n         4.1082e-08],\n        [8.8282e-08, 4.7076e-08, 1.1434e-07,  ..., 9.2099e-08, 1.0436e-07,\n         7.4545e-08],\n        [1.3685e-06, 1.0597e-06, 1.6392e-06,  ..., 1.6160e-06, 1.2727e-06,\n         1.2890e-06],\n        ...,\n        [1.5425e-08, 1.7161e-08, 2.4503e-08,  ..., 3.6555e-08, 1.2572e-07,\n         2.7358e-08],\n        [1.4291e-07, 7.1958e-08, 9.3664e-08,  ..., 1.3078e-07, 9.6167e-08,\n         1.0034e-07],\n        [5.0060e-07, 5.5735e-07, 4.0842e-07,  ..., 5.1680e-07, 5.7767e-07,\n         2.8384e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956292.147028}]}, "version": 1918}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.148253}]}, "version": 1919}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9813],\n        [0.9659],\n        [0.5549],\n        [0.9937],\n        [0.9297],\n        [0.8376],\n        [0.8019],\n        [0.9826],\n        [0.9999],\n        [0.9986],\n        [0.9980],\n        [0.8552],\n        [0.9270],\n        [0.4100],\n        [0.8805],\n        [0.4224],\n        [0.8492],\n        [1.0000],\n        [0.7117],\n        [0.9857],\n        [0.9067],\n        [0.7501],\n        [0.8931],\n        [0.9165],\n        [0.9699],\n        [0.9997],\n        [0.9705],\n        [0.7063],\n        [0.9640],\n        [0.4291],\n        [0.9878],\n        [0.9954],\n        [0.9708],\n        [0.7762],\n        [0.5400],\n        [0.7066],\n        [0.7206],\n        [0.6993],\n        [0.9857],\n        [0.9906],\n        [0.9546],\n        [0.8418]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956292.1511333}]}, "version": 1920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.1521146}]}, "version": 1921}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.40036392211914, "step": null, "ts": 1644956292.153234}]}, "version": 1922}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.32480478286743164, "step": null, "ts": 1644956292.2478802}]}, "version": 1923}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.576574325561523, "step": null, "ts": 1644956292.2602725}]}, "version": 1924}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.000628113746643, "step": null, "ts": 1644956292.7359293}]}, "version": 1925}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.6970e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956292.7435918}]}, "version": 1926}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.7445374}]}, "version": 1927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.8171e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956292.7459047}]}, "version": 1928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.7468033}]}, "version": 1929}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6190e-07, 4.2843e-07, 3.5140e-07,  ..., 4.8112e-07, 2.8548e-07,\n         3.5677e-07],\n        [5.3282e-08, 2.9611e-08, 2.3464e-08,  ..., 7.8176e-08, 4.5512e-08,\n         6.0360e-08],\n        [2.6146e-08, 9.4829e-09, 8.6858e-09,  ..., 1.4698e-08, 5.2639e-09,\n         1.4205e-08],\n        ...,\n        [1.3717e-06, 1.0466e-06, 1.0735e-06,  ..., 1.2122e-06, 1.1401e-06,\n         1.1494e-06],\n        [6.7561e-07, 5.1848e-07, 7.5558e-07,  ..., 9.2800e-07, 8.9692e-07,\n         6.8165e-07],\n        [2.8724e-07, 1.5332e-07, 3.8163e-07,  ..., 5.5391e-07, 6.1990e-07,\n         2.5243e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956292.7492914}]}, "version": 1930}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.7502425}]}, "version": 1931}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8558],\n        [0.9821],\n        [0.9934],\n        [0.9772],\n        [0.9412],\n        [0.9079],\n        [0.9304],\n        [0.9775],\n        [0.7464],\n        [0.8769],\n        [0.8306],\n        [0.8255],\n        [0.7183],\n        [0.6813],\n        [0.8332],\n        [1.0000],\n        [0.6869],\n        [0.9271],\n        [0.6736],\n        [0.9798],\n        [0.9688],\n        [0.9983],\n        [0.9978],\n        [0.7607],\n        [0.9479],\n        [0.6254],\n        [0.8268],\n        [0.9815],\n        [0.9991],\n        [0.9772],\n        [0.7216],\n        [0.7828],\n        [0.4838],\n        [0.9920],\n        [0.9542],\n        [0.9662],\n        [0.9984],\n        [0.9996],\n        [0.7806],\n        [0.5922],\n        [0.7448],\n        [0.8893]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956292.7530613}]}, "version": 1932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956292.754068}]}, "version": 1933}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.4427433013916, "step": null, "ts": 1644956292.7553828}]}, "version": 1934}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3211997449398041, "step": null, "ts": 1644956292.8470047}]}, "version": 1935}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.690464973449707, "step": null, "ts": 1644956292.855385}]}, "version": 1936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.594 (0.594)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss 2.0317 (2.0317)", "step": null, "ts": 1644956293.1028986}]}, "version": 1937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.1038997}]}, "version": 1938}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0641857385635376, "step": null, "ts": 1644956293.3661098}]}, "version": 1939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3008e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956293.3730204}]}, "version": 1940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.374151}]}, "version": 1941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.4181e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956293.3753788}]}, "version": 1942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.3764553}]}, "version": 1943}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.1581e-07, 1.6418e-07, 3.7165e-08,  ..., 6.4908e-08, 4.3128e-08,\n         3.8459e-08],\n        [1.8294e-11, 5.4181e-12, 2.0358e-11,  ..., 1.3510e-11, 9.7223e-12,\n         1.5452e-11],\n        [9.0730e-08, 3.3301e-08, 8.8836e-08,  ..., 1.3895e-07, 7.1710e-08,\n         7.4779e-08],\n        ...,\n        [1.4447e-06, 1.3748e-06, 1.0449e-06,  ..., 1.5655e-06, 1.4403e-06,\n         1.1118e-06],\n        [2.7911e-07, 2.1159e-07, 7.1582e-07,  ..., 3.7086e-07, 3.9670e-07,\n         2.9942e-07],\n        [4.8846e-07, 3.2500e-07, 3.3952e-07,  ..., 4.1749e-07, 6.5183e-07,\n         5.4224e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956293.3789392}]}, "version": 1944}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.3798757}]}, "version": 1945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9800],\n        [1.0000],\n        [0.9736],\n        [0.9577],\n        [0.9966],\n        [0.6711],\n        [0.8330],\n        [0.9591],\n        [0.9707],\n        [0.7651],\n        [0.9437],\n        [0.9996],\n        [0.9982],\n        [0.7647],\n        [0.8498],\n        [0.9816],\n        [0.9982],\n        [0.9101],\n        [0.6144],\n        [0.9544],\n        [0.7975],\n        [0.9998],\n        [0.9986],\n        [0.5914],\n        [0.9494],\n        [0.8431],\n        [0.9998],\n        [0.9106],\n        [0.9947],\n        [0.9729],\n        [0.8653],\n        [0.6741],\n        [0.8163],\n        [0.6003],\n        [0.9998],\n        [0.9936],\n        [0.8301],\n        [0.9917],\n        [0.7735],\n        [0.5624],\n        [0.9007],\n        [0.8773]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956293.382708}]}, "version": 1946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.3836634}]}, "version": 1947}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.134117126464844, "step": null, "ts": 1644956293.3851027}]}, "version": 1948}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4097830653190613, "step": null, "ts": 1644956293.4768696}]}, "version": 1949}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.932724952697754, "step": null, "ts": 1644956293.4839733}]}, "version": 1950}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0869425535202026, "step": null, "ts": 1644956293.960981}]}, "version": 1951}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7156e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956293.9687593}]}, "version": 1952}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.9697478}]}, "version": 1953}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.8104e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956293.9712405}]}, "version": 1954}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.9722323}]}, "version": 1955}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.3184e-07, 1.6156e-07, 2.1837e-07,  ..., 4.7783e-07, 2.5010e-07,\n         2.1587e-07],\n        [2.6054e-07, 1.9519e-07, 3.1148e-07,  ..., 3.0028e-07, 2.6097e-07,\n         2.5706e-07],\n        [7.0767e-09, 1.5467e-08, 2.2586e-09,  ..., 3.5745e-09, 2.3962e-09,\n         2.3341e-09],\n        ...,\n        [5.1787e-08, 6.4415e-08, 1.2520e-07,  ..., 1.7469e-07, 5.7273e-08,\n         6.2420e-08],\n        [7.3883e-07, 6.4371e-07, 6.0954e-07,  ..., 6.4554e-07, 7.6432e-07,\n         5.4203e-07],\n        [2.6033e-07, 1.5351e-07, 2.6065e-07,  ..., 2.5479e-07, 2.1733e-07,\n         2.2691e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956293.974566}]}, "version": 1956}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.975483}]}, "version": 1957}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9245],\n        [0.9005],\n        [0.9988],\n        [0.7063],\n        [0.9296],\n        [0.9581],\n        [0.8055],\n        [0.9066],\n        [0.9764],\n        [0.9546],\n        [0.8073],\n        [0.7618],\n        [0.9657],\n        [0.7038],\n        [0.9699],\n        [0.9930],\n        [0.9237],\n        [0.9565],\n        [0.8038],\n        [0.9327],\n        [0.9157],\n        [1.0000],\n        [0.7500],\n        [0.6029],\n        [0.9962],\n        [0.9865],\n        [0.8520],\n        [0.9998],\n        [0.9634],\n        [0.7406],\n        [0.9833],\n        [0.9139],\n        [0.9890],\n        [0.9935],\n        [0.7795],\n        [1.0000],\n        [0.8921],\n        [0.7699],\n        [0.9414],\n        [0.9700],\n        [0.7810],\n        [0.9155]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956293.9785151}]}, "version": 1958}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956293.9868295}]}, "version": 1959}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.063793182373047, "step": null, "ts": 1644956293.9882889}]}, "version": 1960}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3068177103996277, "step": null, "ts": 1644956294.075462}]}, "version": 1961}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.867440223693848, "step": null, "ts": 1644956294.079124}]}, "version": 1962}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.077782154083252, "step": null, "ts": 1644956294.5572443}]}, "version": 1963}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1468e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956294.566898}]}, "version": 1964}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956294.5751357}]}, "version": 1965}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8903e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956294.5766153}]}, "version": 1966}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956294.577618}]}, "version": 1967}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.7397e-06, 1.5074e-06, 1.2978e-06,  ..., 1.5777e-06, 1.4292e-06,\n         1.4872e-06],\n        [1.0390e-06, 5.7377e-07, 4.1614e-07,  ..., 3.9234e-07, 5.8934e-07,\n         3.3779e-07],\n        [7.0664e-07, 6.0194e-07, 5.7692e-07,  ..., 6.4721e-07, 6.8028e-07,\n         7.3555e-07],\n        ...,\n        [3.6585e-07, 5.0099e-07, 4.2328e-07,  ..., 4.2826e-07, 4.2608e-07,\n         2.9860e-07],\n        [6.8065e-07, 6.5390e-07, 6.7631e-07,  ..., 9.5684e-07, 7.2556e-07,\n         7.4432e-07],\n        [1.4555e-06, 1.0483e-06, 1.0742e-06,  ..., 1.2933e-06, 1.0179e-06,\n         9.7255e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956294.5802007}]}, "version": 1968}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956294.581158}]}, "version": 1969}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.5143],\n        [0.8434],\n        [0.8078],\n        [0.5219],\n        [0.7341],\n        [0.9810],\n        [0.8414],\n        [0.8514],\n        [0.6803],\n        [0.8008],\n        [0.8384],\n        [0.8605],\n        [0.9030],\n        [0.9531],\n        [0.8410],\n        [0.7769],\n        [0.9906],\n        [0.9342],\n        [0.6391],\n        [0.7627],\n        [0.8882],\n        [0.9747],\n        [0.8686],\n        [0.9748],\n        [0.6409],\n        [0.9700],\n        [0.8660],\n        [0.9164],\n        [0.9997],\n        [0.8932],\n        [0.6902],\n        [0.6063],\n        [0.7766],\n        [0.7659],\n        [0.9910],\n        [0.9558],\n        [0.5678],\n        [0.7256],\n        [1.0000],\n        [0.8671],\n        [0.7665],\n        [0.6263]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956294.5841424}]}, "version": 1970}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956294.585143}]}, "version": 1971}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.25950050354004, "step": null, "ts": 1644956294.586325}]}, "version": 1972}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2809981107711792, "step": null, "ts": 1644956294.6808937}]}, "version": 1973}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.902745246887207, "step": null, "ts": 1644956294.6879454}]}, "version": 1974}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2434073686599731, "step": null, "ts": 1644956295.1521077}]}, "version": 1975}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.9579e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956295.16256}]}, "version": 1976}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.166891}]}, "version": 1977}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.2115e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956295.174467}]}, "version": 1978}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.1754632}]}, "version": 1979}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.0625e-07, 4.6679e-07, 6.0498e-07,  ..., 5.1158e-07, 5.2539e-07,\n         4.3290e-07],\n        [9.1323e-07, 6.5869e-07, 9.9526e-07,  ..., 8.6418e-07, 8.6299e-07,\n         6.2688e-07],\n        [7.2066e-07, 5.4098e-07, 8.4381e-07,  ..., 8.6979e-07, 6.0417e-07,\n         6.7780e-07],\n        ...,\n        [8.0101e-08, 1.3576e-07, 5.0470e-08,  ..., 4.9765e-08, 5.8928e-08,\n         3.9635e-08],\n        [3.0767e-08, 1.4537e-08, 2.0427e-08,  ..., 1.2591e-08, 2.0847e-08,\n         1.8831e-08],\n        [5.7467e-07, 3.9565e-07, 5.6570e-07,  ..., 4.0658e-07, 3.8277e-07,\n         3.4193e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956295.177934}]}, "version": 1980}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.1790094}]}, "version": 1981}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8421],\n        [0.7534],\n        [0.7825],\n        [0.7531],\n        [0.6799],\n        [0.6319],\n        [0.7435],\n        [0.7157],\n        [0.6385],\n        [0.7853],\n        [0.9049],\n        [0.5983],\n        [0.9096],\n        [0.9337],\n        [0.6075],\n        [0.6029],\n        [0.7303],\n        [0.6938],\n        [0.9507],\n        [0.7289],\n        [0.8724],\n        [0.6918],\n        [0.6543],\n        [0.6880],\n        [0.8131],\n        [0.9619],\n        [0.9126],\n        [0.5770],\n        [0.8518],\n        [0.9843],\n        [0.9984],\n        [0.8750],\n        [0.7665],\n        [0.7869],\n        [0.8917],\n        [0.9545],\n        [0.8551],\n        [1.0000],\n        [0.9648],\n        [0.9829],\n        [0.9919],\n        [0.8684]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956295.1819875}]}, "version": 1982}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.1832645}]}, "version": 1983}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 21.474075317382812, "step": null, "ts": 1644956295.184354}]}, "version": 1984}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17248530685901642, "step": null, "ts": 1644956295.2773995}]}, "version": 1985}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.153189659118652, "step": null, "ts": 1644956295.2906604}]}, "version": 1986}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.3286468982696533, "step": null, "ts": 1644956295.7620869}]}, "version": 1987}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.9704e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956295.7696657}]}, "version": 1988}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.7706373}]}, "version": 1989}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8489e-12, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956295.7721415}]}, "version": 1990}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.773153}]}, "version": 1991}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.6202e-09, 5.8563e-10, 9.9556e-10,  ..., 1.2401e-09, 1.3031e-09,\n         3.9197e-10],\n        [6.4419e-12, 1.9760e-11, 8.1134e-12,  ..., 2.4494e-11, 2.3203e-11,\n         3.6719e-11],\n        [4.2139e-09, 1.7069e-09, 3.0277e-09,  ..., 1.3978e-09, 1.5861e-09,\n         1.6517e-09],\n        ...,\n        [1.2703e-06, 1.0890e-06, 1.0258e-06,  ..., 1.2462e-06, 1.1700e-06,\n         1.1574e-06],\n        [4.2345e-08, 2.7361e-08, 4.1125e-08,  ..., 5.0614e-08, 4.0313e-08,\n         3.7061e-08],\n        [1.1066e-06, 8.2583e-07, 7.6810e-07,  ..., 1.0810e-06, 8.1506e-07,\n         7.0418e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956295.7754838}]}, "version": 1992}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.7765062}]}, "version": 1993}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9996],\n        [1.0000],\n        [0.9990],\n        [0.6554],\n        [0.9526],\n        [0.8807],\n        [0.9995],\n        [0.9996],\n        [0.7789],\n        [0.9653],\n        [0.9192],\n        [0.9974],\n        [0.5936],\n        [0.9301],\n        [0.8671],\n        [0.9107],\n        [0.9998],\n        [0.7289],\n        [0.9797],\n        [0.7833],\n        [0.7082],\n        [0.9715],\n        [0.7605],\n        [0.7841],\n        [0.8810],\n        [0.7674],\n        [0.8330],\n        [0.7277],\n        [0.8571],\n        [0.8917],\n        [0.9054],\n        [0.9219],\n        [0.7180],\n        [0.8416],\n        [0.9279],\n        [0.9725],\n        [0.7678],\n        [0.9426],\n        [0.9878],\n        [0.6381],\n        [0.9858],\n        [0.6996]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956295.7793953}]}, "version": 1994}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956295.7804015}]}, "version": 1995}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.387432098388672, "step": null, "ts": 1644956295.781774}]}, "version": 1996}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.329969197511673, "step": null, "ts": 1644956295.8759305}]}, "version": 1997}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.17059326171875, "step": null, "ts": 1644956295.8844912}]}, "version": 1998}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1789418458938599, "step": null, "ts": 1644956296.3741035}]}, "version": 1999}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7330e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956296.3825753}]}, "version": 2000}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.3863678}]}, "version": 2001}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.8582e-13, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956296.3874874}]}, "version": 2002}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.388045}]}, "version": 2003}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.3265e-06, 1.2822e-06, 1.5311e-06,  ..., 1.7195e-06, 1.4209e-06,\n         1.2048e-06],\n        [9.1640e-07, 8.1102e-07, 9.6428e-07,  ..., 1.1081e-06, 8.7131e-07,\n         9.1826e-07],\n        [8.2636e-07, 6.9253e-07, 9.1456e-07,  ..., 9.0858e-07, 7.1926e-07,\n         8.2613e-07],\n        ...,\n        [6.3570e-07, 5.2413e-07, 6.8791e-07,  ..., 6.7808e-07, 5.6618e-07,\n         6.1475e-07],\n        [2.3279e-07, 2.9738e-07, 2.0494e-07,  ..., 2.0137e-07, 1.9522e-07,\n         1.9591e-07],\n        [5.2038e-08, 3.0614e-08, 7.6072e-08,  ..., 6.1671e-08, 5.3870e-08,\n         3.7036e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956296.390224}]}, "version": 2004}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.3908858}]}, "version": 2005}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.5667],\n        [0.6981],\n        [0.7272],\n        [0.9543],\n        [0.9910],\n        [0.7618],\n        [0.8212],\n        [0.9277],\n        [0.9015],\n        [0.8763],\n        [0.9999],\n        [0.8180],\n        [0.7634],\n        [0.8183],\n        [0.9776],\n        [0.7807],\n        [0.7473],\n        [0.8404],\n        [0.7295],\n        [0.7094],\n        [0.7864],\n        [0.9923],\n        [0.8143],\n        [0.8071],\n        [0.7768],\n        [0.7896],\n        [0.9623],\n        [0.7172],\n        [0.8190],\n        [0.8441],\n        [0.8857],\n        [0.7017],\n        [0.8905],\n        [0.8219],\n        [0.9264],\n        [0.6775],\n        [0.9116],\n        [0.7936],\n        [0.7831],\n        [0.8012],\n        [0.9331],\n        [0.9821]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956296.3936582}]}, "version": 2006}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.3980327}]}, "version": 2007}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.25406265258789, "step": null, "ts": 1644956296.3993926}]}, "version": 2008}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3950241208076477, "step": null, "ts": 1644956296.487732}]}, "version": 2009}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.670207023620605, "step": null, "ts": 1644956296.5072188}]}, "version": 2010}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.4285476207733154, "step": null, "ts": 1644956296.9633162}]}, "version": 2011}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.1103e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956296.9740193}]}, "version": 2012}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.9814148}]}, "version": 2013}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.0306e-14, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956296.9826984}]}, "version": 2014}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.9837866}]}, "version": 2015}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.4392e-07, 6.6443e-07, 6.2451e-07,  ..., 7.0416e-07, 6.4849e-07,\n         6.1514e-07],\n        [7.9876e-07, 6.4984e-07, 7.1487e-07,  ..., 8.9135e-07, 7.8292e-07,\n         6.8051e-07],\n        [1.5102e-06, 1.4324e-06, 1.4735e-06,  ..., 1.6561e-06, 1.6853e-06,\n         1.4398e-06],\n        ...,\n        [8.7672e-07, 8.8757e-07, 9.7624e-07,  ..., 9.8987e-07, 8.8970e-07,\n         7.7992e-07],\n        [7.3193e-07, 7.8243e-07, 8.5069e-07,  ..., 9.3173e-07, 9.0431e-07,\n         6.5624e-07],\n        [1.5351e-06, 1.3769e-06, 1.5273e-06,  ..., 1.8280e-06, 1.6193e-06,\n         1.3771e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956296.9863935}]}, "version": 2016}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.9873831}]}, "version": 2017}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7699],\n        [0.7684],\n        [0.4833],\n        [0.7145],\n        [0.5320],\n        [0.8598],\n        [0.7707],\n        [0.8084],\n        [0.6326],\n        [0.8542],\n        [0.7638],\n        [0.6937],\n        [0.7018],\n        [0.5943],\n        [0.6344],\n        [0.6937],\n        [0.9116],\n        [0.6544],\n        [0.9773],\n        [0.9341],\n        [0.7207],\n        [0.8602],\n        [0.7927],\n        [0.7998],\n        [0.9713],\n        [0.6492],\n        [0.6965],\n        [0.8007],\n        [0.7762],\n        [0.6690],\n        [0.7701],\n        [0.7750],\n        [1.0000],\n        [0.5965],\n        [0.7517],\n        [0.5735],\n        [0.6666],\n        [0.8814],\n        [0.6214],\n        [0.7276],\n        [0.7279],\n        [0.5173]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956296.9902413}]}, "version": 2018}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956296.9946449}]}, "version": 2019}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 24.308055877685547, "step": null, "ts": 1644956296.9958403}]}, "version": 2020}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24379971623420715, "step": null, "ts": 1644956297.0961223}]}, "version": 2021}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.719890594482422, "step": null, "ts": 1644956297.1093266}]}, "version": 2022}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.3592557907104492, "step": null, "ts": 1644956297.570698}]}, "version": 2023}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8761e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956297.5757968}]}, "version": 2024}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956297.5824728}]}, "version": 2025}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.7235e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956297.5837216}]}, "version": 2026}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956297.5846572}]}, "version": 2027}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.8745e-07, 3.2955e-07, 4.2182e-07,  ..., 3.6128e-07, 3.4121e-07,\n         4.6749e-07],\n        [2.3875e-08, 4.2866e-08, 1.2634e-08,  ..., 1.2592e-08, 9.7116e-09,\n         9.4002e-09],\n        [1.1508e-07, 9.2458e-08, 7.0765e-08,  ..., 1.2907e-07, 1.2743e-07,\n         1.6386e-07],\n        ...,\n        [2.5330e-10, 8.8158e-11, 4.0541e-10,  ..., 2.6630e-10, 1.4009e-10,\n         1.5342e-10],\n        [6.3577e-07, 4.6197e-07, 5.8817e-07,  ..., 6.2143e-07, 5.8202e-07,\n         5.3469e-07],\n        [1.1407e-07, 7.4354e-08, 1.3337e-07,  ..., 1.3537e-07, 1.1858e-07,\n         7.9689e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956297.587239}]}, "version": 2028}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956297.5882077}]}, "version": 2029}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8818],\n        [0.9956],\n        [0.9618],\n        [0.7358],\n        [0.9845],\n        [0.8461],\n        [0.9806],\n        [0.7880],\n        [0.9999],\n        [0.7792],\n        [0.5011],\n        [0.9355],\n        [0.9731],\n        [0.9817],\n        [0.9520],\n        [0.7527],\n        [1.0000],\n        [0.9955],\n        [0.9909],\n        [0.5755],\n        [0.9095],\n        [1.0000],\n        [0.9961],\n        [0.9947],\n        [0.9621],\n        [0.7803],\n        [1.0000],\n        [0.8111],\n        [0.9928],\n        [0.8955],\n        [0.9938],\n        [0.9825],\n        [0.9957],\n        [0.9996],\n        [0.9633],\n        [0.9338],\n        [0.8907],\n        [0.9102],\n        [0.8191],\n        [0.9999],\n        [0.8194],\n        [0.9655]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956297.5911899}]}, "version": 2030}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956297.592182}]}, "version": 2031}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.820953369140625, "step": null, "ts": 1644956297.5932872}]}, "version": 2032}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3611966669559479, "step": null, "ts": 1644956297.687319}]}, "version": 2033}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 12.922510147094727, "step": null, "ts": 1644956297.6938016}]}, "version": 2034}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.4791256189346313, "step": null, "ts": 1644956298.176026}]}, "version": 2035}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.8657e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956298.181627}]}, "version": 2036}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.184716}]}, "version": 2037}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6102e-16, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956298.1861913}]}, "version": 2038}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.187168}]}, "version": 2039}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0130e-07, 5.9159e-08, 8.5539e-08,  ..., 9.7533e-08, 9.4428e-08,\n         9.1072e-08],\n        [2.5251e-07, 2.4575e-07, 3.3659e-07,  ..., 3.9523e-07, 3.4558e-07,\n         3.4773e-07],\n        [1.2582e-06, 1.3031e-06, 1.2128e-06,  ..., 1.3412e-06, 9.2214e-07,\n         1.1710e-06],\n        ...,\n        [1.4379e-07, 1.2353e-07, 1.2657e-07,  ..., 1.0171e-07, 1.3187e-07,\n         9.4849e-08],\n        [1.1115e-07, 9.9412e-08, 1.0770e-07,  ..., 9.9490e-08, 7.9887e-08,\n         1.1309e-07],\n        [1.0413e-07, 1.0781e-07, 1.1260e-07,  ..., 1.3619e-07, 1.0202e-07,\n         1.2851e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956298.1895864}]}, "version": 2040}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.190496}]}, "version": 2041}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9727],\n        [0.8981],\n        [0.5956],\n        [0.9199],\n        [0.9999],\n        [0.8713],\n        [0.9723],\n        [0.9736],\n        [0.5860],\n        [0.9493],\n        [0.6075],\n        [0.9789],\n        [1.0000],\n        [0.8834],\n        [0.9114],\n        [0.9640],\n        [0.9790],\n        [0.9739],\n        [0.9041],\n        [0.9353],\n        [0.9967],\n        [0.8302],\n        [0.9999],\n        [0.8586],\n        [0.8900],\n        [1.0000],\n        [0.8423],\n        [1.0000],\n        [0.9299],\n        [0.9914],\n        [0.8139],\n        [0.9965],\n        [1.0000],\n        [0.8733],\n        [0.6946],\n        [0.9521],\n        [1.0000],\n        [0.9999],\n        [0.8234],\n        [0.9578],\n        [0.9677],\n        [0.9624]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956298.193582}]}, "version": 2042}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.2010899}]}, "version": 2043}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.811420440673828, "step": null, "ts": 1644956298.2022438}]}, "version": 2044}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2978830933570862, "step": null, "ts": 1644956298.2880306}]}, "version": 2045}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.411733627319336, "step": null, "ts": 1644956298.294285}]}, "version": 2046}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.5318745374679565, "step": null, "ts": 1644956298.757685}]}, "version": 2047}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8436e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956298.7667346}]}, "version": 2048}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.7736063}]}, "version": 2049}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.8909e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956298.7751248}]}, "version": 2050}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.7761905}]}, "version": 2051}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0983e-08, 4.5401e-09, 3.5984e-09,  ..., 5.9934e-09, 3.3229e-09,\n         2.8608e-09],\n        [4.5021e-07, 3.5648e-07, 4.6142e-07,  ..., 5.3304e-07, 4.1287e-07,\n         4.0797e-07],\n        [6.1368e-09, 3.8883e-09, 9.8019e-09,  ..., 8.6972e-09, 9.6539e-09,\n         6.1026e-09],\n        ...,\n        [9.7433e-13, 6.2334e-13, 2.0151e-13,  ..., 2.0488e-13, 4.6577e-13,\n         9.6395e-13],\n        [3.0500e-07, 2.2536e-07, 2.5168e-07,  ..., 2.8891e-07, 3.2006e-07,\n         2.2430e-07],\n        [9.4754e-07, 7.2917e-07, 9.3843e-07,  ..., 1.0574e-06, 9.4395e-07,\n         8.2561e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956298.7784212}]}, "version": 2052}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.779592}]}, "version": 2053}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9987],\n        [0.8593],\n        [0.9975],\n        [0.6716],\n        [0.8767],\n        [0.7001],\n        [0.8594],\n        [1.0000],\n        [0.9097],\n        [0.9970],\n        [0.9188],\n        [0.9695],\n        [0.9175],\n        [0.8955],\n        [0.8915],\n        [0.5801],\n        [0.9979],\n        [0.9871],\n        [0.9500],\n        [0.4221],\n        [0.9454],\n        [1.0000],\n        [0.9427],\n        [0.9980],\n        [0.9996],\n        [0.8485],\n        [0.9769],\n        [0.7853],\n        [0.9983],\n        [0.5581],\n        [1.0000],\n        [0.8873],\n        [0.9999],\n        [0.7815],\n        [0.8150],\n        [0.4121],\n        [0.9868],\n        [0.8302],\n        [0.9987],\n        [1.0000],\n        [0.9123],\n        [0.7170]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956298.782695}]}, "version": 2054}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956298.7836058}]}, "version": 2055}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.542800903320312, "step": null, "ts": 1644956298.784815}]}, "version": 2056}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25179651379585266, "step": null, "ts": 1644956298.873964}]}, "version": 2057}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.827103614807129, "step": null, "ts": 1644956298.8852088}]}, "version": 2058}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.585 (0.585)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss 2.2138 (2.2138)", "step": null, "ts": 1644956299.13185}]}, "version": 2059}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956299.132926}]}, "version": 2060}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.610341191291809, "step": null, "ts": 1644956299.3408916}]}, "version": 2061}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.5674e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956299.3427932}]}, "version": 2062}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956299.3438923}]}, "version": 2063}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8771e-18, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956299.3456612}]}, "version": 2064}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956299.346691}]}, "version": 2065}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[6.4006e-07, 5.0779e-07, 5.9385e-07,  ..., 5.7677e-07, 5.2284e-07,\n         6.1450e-07],\n        [1.2820e-07, 7.3900e-08, 1.1192e-07,  ..., 1.6118e-07, 1.1715e-07,\n         1.2809e-07],\n        [2.9782e-07, 2.3011e-07, 2.8604e-07,  ..., 2.8090e-07, 2.8166e-07,\n         2.2830e-07],\n        ...,\n        [4.7387e-07, 4.3728e-07, 5.6544e-07,  ..., 5.4975e-07, 5.3699e-07,\n         4.3859e-07],\n        [1.2880e-07, 7.6566e-08, 8.4456e-08,  ..., 1.2849e-07, 7.5518e-08,\n         1.0682e-07],\n        [2.9237e-08, 2.0831e-08, 4.5768e-08,  ..., 5.0431e-08, 3.8901e-08,\n         2.5449e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956299.3494828}]}, "version": 2066}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956299.3506453}]}, "version": 2067}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8093],\n        [0.9648],\n        [0.9102],\n        [0.9731],\n        [1.0000],\n        [0.9888],\n        [0.8850],\n        [1.0000],\n        [0.7916],\n        [0.9902],\n        [0.9993],\n        [0.8599],\n        [0.8931],\n        [0.8656],\n        [1.0000],\n        [0.9566],\n        [0.7928],\n        [0.9992],\n        [0.9798],\n        [0.9274],\n        [0.9074],\n        [0.6259],\n        [0.8933],\n        [0.8750],\n        [0.9317],\n        [0.8463],\n        [0.9585],\n        [1.0000],\n        [0.8831],\n        [0.8375],\n        [0.8916],\n        [0.8011],\n        [0.8806],\n        [0.8854],\n        [0.8714],\n        [0.8192],\n        [0.9579],\n        [0.8456],\n        [0.8681],\n        [0.8427],\n        [0.9616],\n        [0.9905]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956299.353903}]}, "version": 2068}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956299.3549738}]}, "version": 2069}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.32061767578125, "step": null, "ts": 1644956299.3563287}]}, "version": 2070}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2914360761642456, "step": null, "ts": 1644956299.458882}]}, "version": 2071}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.300743103027344, "step": null, "ts": 1644956299.4657118}]}, "version": 2072}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956299.8911533}]}, "version": 2073}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.953582763671875, "step": null, "ts": 1644956299.8911533}]}, "version": 2074}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644956299.8911533}]}, "version": 2075}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956299.8911533}]}, "version": 2076}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.6144607067108154, "step": null, "ts": 1644956300.1791754}]}, "version": 2077}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.1923e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956300.192256}]}, "version": 2078}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.1972487}]}, "version": 2079}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.8640e-15, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956300.2038848}]}, "version": 2080}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.2049541}]}, "version": 2081}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.0370e-07, 3.4450e-07, 3.2298e-07,  ..., 4.0169e-07, 3.2625e-07,\n         2.4211e-07],\n        [8.3127e-07, 7.0874e-07, 8.0281e-07,  ..., 7.6601e-07, 7.2059e-07,\n         1.0412e-06],\n        [1.1668e-07, 7.6689e-08, 7.8962e-08,  ..., 1.1037e-07, 9.6821e-08,\n         6.5626e-08],\n        ...,\n        [2.5006e-07, 2.2766e-07, 2.4735e-07,  ..., 3.1406e-07, 2.5956e-07,\n         1.8113e-07],\n        [2.4886e-09, 3.4531e-09, 1.6255e-09,  ..., 1.5781e-09, 2.9921e-09,\n         6.2240e-09],\n        [1.0254e-07, 8.2013e-08, 1.1948e-07,  ..., 1.3352e-07, 1.2250e-07,\n         1.0041e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956300.2073774}]}, "version": 2082}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.20824}]}, "version": 2083}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8950],\n        [0.6986],\n        [0.9725],\n        [0.9924],\n        [0.9479],\n        [0.9416],\n        [1.0000],\n        [0.9883],\n        [0.9921],\n        [0.9757],\n        [0.9216],\n        [0.9419],\n        [0.9958],\n        [1.0000],\n        [0.9510],\n        [0.9633],\n        [0.9966],\n        [0.9598],\n        [0.9997],\n        [0.9967],\n        [0.8661],\n        [0.9941],\n        [0.9559],\n        [0.9489],\n        [1.0000],\n        [0.9600],\n        [0.9998],\n        [0.7529],\n        [0.9998],\n        [0.9612],\n        [0.9516],\n        [1.0000],\n        [0.9857],\n        [0.9998],\n        [0.9639],\n        [0.9838],\n        [1.0000],\n        [0.9600],\n        [0.9661],\n        [0.9196],\n        [0.9987],\n        [0.9645]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956300.2111175}]}, "version": 2084}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.212114}]}, "version": 2085}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.314748764038086, "step": null, "ts": 1644956300.2133174}]}, "version": 2086}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3046935796737671, "step": null, "ts": 1644956300.3053677}]}, "version": 2087}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.346181869506836, "step": null, "ts": 1644956300.3141282}]}, "version": 2088}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.5809273719787598, "step": null, "ts": 1644956300.7488167}]}, "version": 2089}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3513e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956300.761187}]}, "version": 2090}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.7623463}]}, "version": 2091}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.7630e-26, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956300.7635186}]}, "version": 2092}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.7641141}]}, "version": 2093}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.6713e-07, 1.9356e-07, 1.1750e-07,  ..., 1.8307e-07, 1.6037e-07,\n         1.2390e-07],\n        [7.8366e-07, 6.9386e-07, 8.3230e-07,  ..., 8.6748e-07, 7.8693e-07,\n         6.8911e-07],\n        [7.4520e-07, 6.6113e-07, 8.0571e-07,  ..., 8.0427e-07, 7.3220e-07,\n         6.8655e-07],\n        ...,\n        [9.3215e-07, 8.3451e-07, 9.7243e-07,  ..., 9.6309e-07, 8.9239e-07,\n         8.3862e-07],\n        [1.7582e-06, 1.8684e-06, 1.7137e-06,  ..., 1.7128e-06, 1.9356e-06,\n         1.9637e-06],\n        [8.9492e-07, 8.1186e-07, 9.1416e-07,  ..., 9.4879e-07, 8.7326e-07,\n         8.2290e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956300.7663436}]}, "version": 2094}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.767185}]}, "version": 2095}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9473],\n        [0.7492],\n        [0.7583],\n        [0.7192],\n        [0.7564],\n        [0.7523],\n        [0.7397],\n        [0.6975],\n        [0.6816],\n        [0.6918],\n        [0.8300],\n        [0.7320],\n        [0.7285],\n        [0.8244],\n        [0.6162],\n        [0.7057],\n        [0.6476],\n        [0.7225],\n        [0.8920],\n        [0.7038],\n        [0.6517],\n        [0.7389],\n        [0.7160],\n        [0.8233],\n        [0.8690],\n        [0.6777],\n        [0.8460],\n        [1.0000],\n        [0.8049],\n        [0.7202],\n        [0.7334],\n        [0.9301],\n        [0.7385],\n        [0.7360],\n        [0.7224],\n        [0.7402],\n        [0.7588],\n        [0.7047],\n        [0.6153],\n        [0.7047],\n        [0.4247],\n        [0.7151]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956300.7699049}]}, "version": 2096}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956300.770489}]}, "version": 2097}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 24.828510284423828, "step": null, "ts": 1644956300.7715852}]}, "version": 2098}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.509680986404419, "step": null, "ts": 1644956300.86298}]}, "version": 2099}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.1888427734375, "step": null, "ts": 1644956300.8809311}]}, "version": 2100}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.4714633226394653, "step": null, "ts": 1644956301.3605702}]}, "version": 2101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.3715e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956301.3721557}]}, "version": 2102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.373114}]}, "version": 2103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.3784e-17, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956301.3742442}]}, "version": 2104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.3751028}]}, "version": 2105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.4794e-07, 4.1782e-07, 5.5979e-07,  ..., 6.4753e-07, 5.3811e-07,\n         4.3265e-07],\n        [3.1855e-07, 2.3680e-07, 3.0783e-07,  ..., 3.4067e-07, 3.1506e-07,\n         2.9520e-07],\n        [3.9572e-13, 1.0130e-13, 4.9565e-13,  ..., 2.6448e-13, 4.6776e-13,\n         1.9583e-13],\n        ...,\n        [2.9608e-07, 2.5612e-07, 2.8555e-07,  ..., 3.3016e-07, 2.6985e-07,\n         2.6701e-07],\n        [4.8921e-08, 3.6902e-08, 6.5974e-08,  ..., 5.6058e-08, 5.7708e-08,\n         3.8778e-08],\n        [4.3008e-11, 1.5554e-11, 4.6445e-11,  ..., 2.7413e-11, 4.2350e-11,\n         2.3175e-11]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956301.3773277}]}, "version": 2106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.3781874}]}, "version": 2107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8246],\n        [0.9016],\n        [1.0000],\n        [0.8762],\n        [0.8307],\n        [0.9938],\n        [0.9772],\n        [0.8214],\n        [0.8860],\n        [0.9974],\n        [1.0000],\n        [0.7316],\n        [0.8405],\n        [0.9225],\n        [0.9999],\n        [1.0000],\n        [0.8500],\n        [0.7788],\n        [0.7307],\n        [0.9696],\n        [0.8771],\n        [1.0000],\n        [0.9982],\n        [0.9667],\n        [1.0000],\n        [1.0000],\n        [0.9591],\n        [0.9956],\n        [0.7940],\n        [0.7141],\n        [0.8184],\n        [0.7465],\n        [0.9665],\n        [0.9871],\n        [0.9889],\n        [1.0000],\n        [0.8570],\n        [0.6459],\n        [0.9916],\n        [0.9048],\n        [0.9848],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956301.380984}]}, "version": 2108}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.3818476}]}, "version": 2109}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 19.565685272216797, "step": null, "ts": 1644956301.3829947}]}, "version": 2110}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.45197468996047974, "step": null, "ts": 1644956301.486423}]}, "version": 2111}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.682125091552734, "step": null, "ts": 1644956301.4952147}]}, "version": 2112}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8648219108581543, "step": null, "ts": 1644956301.949503}]}, "version": 2113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.9162e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956301.9631586}]}, "version": 2114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.9641097}]}, "version": 2115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8386e-27, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956301.965446}]}, "version": 2116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.966336}]}, "version": 2117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.2421e-06, 9.8097e-07, 1.0048e-06,  ..., 9.1043e-07, 9.4685e-07,\n         9.6591e-07],\n        [8.0409e-07, 6.3797e-07, 7.8264e-07,  ..., 6.9107e-07, 7.2203e-07,\n         6.2313e-07],\n        [1.1915e-06, 1.0084e-06, 1.1311e-06,  ..., 1.1039e-06, 1.1377e-06,\n         1.0036e-06],\n        ...,\n        [9.9134e-07, 7.8671e-07, 8.7191e-07,  ..., 8.7957e-07, 8.8454e-07,\n         8.3145e-07],\n        [1.0913e-06, 7.9338e-07, 9.3608e-07,  ..., 8.5813e-07, 9.7991e-07,\n         8.5466e-07],\n        [3.3740e-25, 2.5448e-25, 3.8914e-27,  ..., 9.7019e-25, 7.4384e-26,\n         2.5144e-25]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956301.968559}]}, "version": 2118}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.96921}]}, "version": 2119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.6713],\n        [0.7747],\n        [0.6520],\n        [0.6869],\n        [0.6533],\n        [0.7013],\n        [0.6650],\n        [0.6739],\n        [0.6772],\n        [0.6997],\n        [0.6463],\n        [0.6857],\n        [0.6689],\n        [0.6677],\n        [0.6345],\n        [0.6764],\n        [0.6536],\n        [0.6734],\n        [0.6306],\n        [0.6532],\n        [0.6378],\n        [0.6735],\n        [0.6659],\n        [0.7545],\n        [0.7252],\n        [0.6728],\n        [0.6725],\n        [0.6431],\n        [0.6415],\n        [0.6789],\n        [0.6722],\n        [0.6743],\n        [0.8580],\n        [0.5022],\n        [0.6829],\n        [0.6724],\n        [0.6664],\n        [0.6332],\n        [0.6608],\n        [0.7232],\n        [0.7134],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956301.972216}]}, "version": 2120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956301.9729729}]}, "version": 2121}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 27.567398071289062, "step": null, "ts": 1644956301.9740176}]}, "version": 2122}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5856348872184753, "step": null, "ts": 1644956302.0756907}]}, "version": 2123}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.757400512695312, "step": null, "ts": 1644956302.0871751}]}, "version": 2124}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8843653202056885, "step": null, "ts": 1644956302.5526092}]}, "version": 2125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.2083e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956302.560795}]}, "version": 2126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956302.5617828}]}, "version": 2127}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.7147e-28, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956302.5632334}]}, "version": 2128}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956302.5642247}]}, "version": 2129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[8.1184e-07, 6.5535e-07, 8.5234e-07,  ..., 7.3321e-07, 7.8918e-07,\n         6.8784e-07],\n        [1.0686e-06, 8.8096e-07, 1.0837e-06,  ..., 9.6745e-07, 1.0628e-06,\n         9.2728e-07],\n        [4.7957e-07, 3.6145e-07, 4.6672e-07,  ..., 3.9174e-07, 4.5448e-07,\n         3.9470e-07],\n        ...,\n        [9.9624e-07, 8.3155e-07, 1.0265e-06,  ..., 8.7808e-07, 1.0032e-06,\n         8.6618e-07],\n        [1.3859e-06, 1.0842e-06, 1.0932e-06,  ..., 1.0327e-06, 1.1071e-06,\n         9.9995e-07],\n        [1.1312e-06, 9.4927e-07, 1.1335e-06,  ..., 1.0288e-06, 1.1167e-06,\n         1.0053e-06]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956302.5666933}]}, "version": 2130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956302.567715}]}, "version": 2131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7618],\n        [0.6870],\n        [0.8695],\n        [0.5511],\n        [0.6685],\n        [0.7260],\n        [1.0000],\n        [0.6985],\n        [0.6075],\n        [0.6730],\n        [0.6970],\n        [0.7029],\n        [0.6932],\n        [0.7027],\n        [0.5611],\n        [0.7046],\n        [0.6563],\n        [0.7877],\n        [0.7004],\n        [0.7214],\n        [0.7081],\n        [0.6692],\n        [0.6857],\n        [0.6958],\n        [0.7149],\n        [0.7038],\n        [0.6898],\n        [0.6863],\n        [0.6585],\n        [0.6931],\n        [0.6991],\n        [0.7109],\n        [0.6854],\n        [0.6686],\n        [0.6714],\n        [0.6712],\n        [0.7245],\n        [0.7311],\n        [0.6701],\n        [0.7117],\n        [0.6628],\n        [0.6659]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956302.570924}]}, "version": 2132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956302.57196}]}, "version": 2133}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 27.024234771728516, "step": null, "ts": 1644956302.5731761}]}, "version": 2134}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.790207028388977, "step": null, "ts": 1644956302.678728}]}, "version": 2135}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 16.914419174194336, "step": null, "ts": 1644956302.6893895}]}, "version": 2136}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.5637458562850952, "step": null, "ts": 1644956303.1576169}]}, "version": 2137}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.2870e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956303.1705909}]}, "version": 2138}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.1715546}]}, "version": 2139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5381e-20, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956303.173054}]}, "version": 2140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.1740897}]}, "version": 2141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.8484e-08, 3.4697e-08, 4.7373e-08,  ..., 6.3282e-08, 5.1775e-08,\n         3.4931e-08],\n        [1.7192e-08, 9.2805e-09, 1.8623e-08,  ..., 2.8148e-08, 2.6290e-08,\n         1.7205e-08],\n        [2.3794e-07, 2.1231e-07, 2.6483e-07,  ..., 3.0141e-07, 2.4983e-07,\n         2.1712e-07],\n        ...,\n        [2.7109e-07, 2.3665e-07, 3.1088e-07,  ..., 3.3051e-07, 2.8765e-07,\n         2.3524e-07],\n        [1.5553e-07, 1.3223e-07, 1.7365e-07,  ..., 1.6789e-07, 1.8017e-07,\n         1.3834e-07],\n        [6.0208e-12, 7.9054e-12, 3.9988e-12,  ..., 5.7010e-12, 5.9057e-12,\n         3.7574e-12]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956303.176407}]}, "version": 2142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.1775012}]}, "version": 2143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9874],\n        [0.9947],\n        [0.9196],\n        [0.9983],\n        [0.8352],\n        [0.9543],\n        [0.9821],\n        [0.9975],\n        [0.9382],\n        [0.8652],\n        [1.0000],\n        [0.9185],\n        [0.9970],\n        [0.9998],\n        [0.9997],\n        [0.8577],\n        [0.9660],\n        [1.0000],\n        [0.9863],\n        [1.0000],\n        [0.9837],\n        [1.0000],\n        [0.8338],\n        [0.9188],\n        [0.9399],\n        [0.9734],\n        [0.9093],\n        [1.0000],\n        [0.9846],\n        [0.9856],\n        [0.8596],\n        [0.9993],\n        [0.9930],\n        [1.0000],\n        [0.9019],\n        [0.9764],\n        [0.8996],\n        [0.8869],\n        [0.9384],\n        [0.9144],\n        [0.9512],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956303.1806562}]}, "version": 2144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.1815982}]}, "version": 2145}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 18.590415954589844, "step": null, "ts": 1644956303.1830425}]}, "version": 2146}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4486512839794159, "step": null, "ts": 1644956303.2855616}]}, "version": 2147}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.147237777709961, "step": null, "ts": 1644956303.2940216}]}, "version": 2148}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8538981676101685, "step": null, "ts": 1644956303.7381089}]}, "version": 2149}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.8651e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956303.7466097}]}, "version": 2150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.7535121}]}, "version": 2151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.8703e-31, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956303.7548249}]}, "version": 2152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.755773}]}, "version": 2153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[9.3187e-07, 7.6712e-07, 9.1152e-07,  ..., 8.4822e-07, 8.8240e-07,\n         8.3473e-07],\n        [1.3508e-06, 1.1495e-06, 1.2710e-06,  ..., 1.1841e-06, 1.3156e-06,\n         1.1874e-06],\n        [9.0526e-07, 7.5368e-07, 8.9452e-07,  ..., 8.3547e-07, 8.5670e-07,\n         8.2211e-07],\n        ...,\n        [8.9417e-07, 7.4889e-07, 8.9224e-07,  ..., 8.2107e-07, 8.7438e-07,\n         8.0974e-07],\n        [9.0782e-07, 7.3675e-07, 8.6895e-07,  ..., 8.1248e-07, 8.3732e-07,\n         7.8481e-07],\n        [9.0354e-07, 7.5747e-07, 8.9266e-07,  ..., 8.2956e-07, 8.6847e-07,\n         8.1899e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956303.758354}]}, "version": 2154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.7603052}]}, "version": 2155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7262],\n        [0.6095],\n        [0.7315],\n        [0.5995],\n        [0.7366],\n        [0.7342],\n        [0.7262],\n        [0.7356],\n        [0.7193],\n        [0.7298],\n        [0.7652],\n        [0.7305],\n        [0.5535],\n        [0.8457],\n        [0.7344],\n        [0.7189],\n        [0.7234],\n        [0.7156],\n        [0.7297],\n        [0.7279],\n        [0.7343],\n        [0.7853],\n        [0.7136],\n        [0.7328],\n        [0.7439],\n        [0.7384],\n        [0.7178],\n        [1.0000],\n        [0.7268],\n        [0.7195],\n        [0.7670],\n        [0.7323],\n        [0.7380],\n        [0.7344],\n        [0.7360],\n        [0.7351],\n        [0.8096],\n        [0.7527],\n        [0.7283],\n        [0.7333],\n        [0.7409],\n        [0.7310]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956303.7630842}]}, "version": 2156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956303.7676387}]}, "version": 2157}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 25.243408203125, "step": null, "ts": 1644956303.7690816}]}, "version": 2158}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.7304856777191162, "step": null, "ts": 1644956303.860378}]}, "version": 2159}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 13.536371231079102, "step": null, "ts": 1644956303.8652523}]}, "version": 2160}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.088284492492676, "step": null, "ts": 1644956304.361826}]}, "version": 2161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.4816e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956304.3715067}]}, "version": 2162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.3724313}]}, "version": 2163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.2422e-32, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956304.3738563}]}, "version": 2164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.3748267}]}, "version": 2165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.7029e-07, 5.3739e-07, 6.7594e-07,  ..., 5.5918e-07, 6.2655e-07,\n         5.8483e-07],\n        [7.7126e-07, 6.5684e-07, 7.7267e-07,  ..., 7.1204e-07, 7.4346e-07,\n         7.0297e-07],\n        [7.2305e-07, 6.1702e-07, 6.9684e-07,  ..., 6.7343e-07, 6.8718e-07,\n         6.5998e-07],\n        ...,\n        [7.8311e-07, 6.6224e-07, 7.7660e-07,  ..., 7.2229e-07, 7.4604e-07,\n         7.1041e-07],\n        [7.6873e-07, 6.4942e-07, 7.5533e-07,  ..., 7.1127e-07, 7.2669e-07,\n         6.9998e-07],\n        [7.2760e-07, 6.6277e-07, 7.5704e-07,  ..., 6.8548e-07, 7.3860e-07,\n         6.9797e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956304.3772016}]}, "version": 2166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.3780744}]}, "version": 2167}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8108],\n        [0.7688],\n        [0.7869],\n        [0.7734],\n        [0.7669],\n        [0.7780],\n        [0.6822],\n        [0.7686],\n        [0.7848],\n        [0.7690],\n        [0.7685],\n        [0.7681],\n        [0.7675],\n        [0.7452],\n        [0.7729],\n        [0.7671],\n        [0.7748],\n        [0.7707],\n        [0.7651],\n        [0.7695],\n        [0.7890],\n        [1.0000],\n        [0.7767],\n        [0.7664],\n        [0.6214],\n        [0.7659],\n        [0.7696],\n        [0.7534],\n        [0.7687],\n        [0.7560],\n        [0.7758],\n        [0.7093],\n        [0.7739],\n        [0.7679],\n        [0.7694],\n        [0.7737],\n        [0.7685],\n        [0.7770],\n        [0.7679],\n        [0.7667],\n        [0.7721],\n        [0.7732]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956304.3810735}]}, "version": 2168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.38258}]}, "version": 2169}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 23.74700927734375, "step": null, "ts": 1644956304.384012}]}, "version": 2170}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.6974210143089294, "step": null, "ts": 1644956304.4755738}]}, "version": 2171}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.008336067199707, "step": null, "ts": 1644956304.4826694}]}, "version": 2172}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8698036670684814, "step": null, "ts": 1644956304.9497402}]}, "version": 2173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.6137e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956304.959211}]}, "version": 2174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.9599848}]}, "version": 2175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.9472e-34, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956304.9610758}]}, "version": 2176}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.9618542}]}, "version": 2177}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.9570e-07, 6.5880e-07, 7.7019e-07,  ..., 7.0026e-07, 7.5078e-07,\n         6.8734e-07],\n        [7.9531e-07, 6.5563e-07, 7.3156e-07,  ..., 6.7644e-07, 7.4517e-07,\n         6.4320e-07],\n        [7.8909e-07, 6.5424e-07, 7.3712e-07,  ..., 6.6892e-07, 7.4487e-07,\n         6.2782e-07],\n        ...,\n        [7.8748e-07, 6.5242e-07, 7.6316e-07,  ..., 6.9185e-07, 7.4230e-07,\n         6.8160e-07],\n        [7.8947e-07, 6.4834e-07, 7.4812e-07,  ..., 6.7826e-07, 7.3560e-07,\n         6.5902e-07],\n        [7.8107e-07, 6.4553e-07, 7.5789e-07,  ..., 6.8800e-07, 7.3135e-07,\n         6.8043e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956304.9641159}]}, "version": 2178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.9649134}]}, "version": 2179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7680],\n        [0.7774],\n        [0.7812],\n        [0.7703],\n        [0.7741],\n        [0.7737],\n        [0.7637],\n        [0.7686],\n        [0.8618],\n        [0.7774],\n        [0.7541],\n        [0.7792],\n        [0.8499],\n        [0.6059],\n        [0.7614],\n        [0.7698],\n        [0.8079],\n        [0.7705],\n        [1.0000],\n        [0.7698],\n        [0.8000],\n        [0.7692],\n        [0.7689],\n        [0.7710],\n        [0.7772],\n        [0.7695],\n        [0.7946],\n        [0.7795],\n        [0.7755],\n        [0.7710],\n        [0.7728],\n        [0.7178],\n        [0.7864],\n        [0.8071],\n        [0.7697],\n        [0.7712],\n        [0.7742],\n        [0.7758],\n        [0.7606],\n        [0.7703],\n        [0.7750],\n        [0.7735]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956304.9677253}]}, "version": 2180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956304.9762619}]}, "version": 2181}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 23.352645874023438, "step": null, "ts": 1644956304.9776628}]}, "version": 2182}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5397314429283142, "step": null, "ts": 1644956305.065129}]}, "version": 2183}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.348749160766602, "step": null, "ts": 1644956305.0784764}]}, "version": 2184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.590 (0.590)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss 2.3124 (2.3124)", "step": null, "ts": 1644956305.3235178}]}, "version": 2185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956305.3246298}]}, "version": 2186}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8824611902236938, "step": null, "ts": 1644956305.5586834}]}, "version": 2187}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.0057e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956305.5665324}]}, "version": 2188}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956305.5674212}]}, "version": 2189}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.3187e-29, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956305.5688338}]}, "version": 2190}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956305.569777}]}, "version": 2191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.8027e-07, 1.3796e-07, 1.7328e-07,  ..., 1.5017e-07, 1.6699e-07,\n         1.4515e-07],\n        [1.1799e-07, 9.0258e-08, 1.1826e-07,  ..., 1.0227e-07, 1.1660e-07,\n         1.0329e-07],\n        [1.5326e-07, 1.1653e-07, 1.4688e-07,  ..., 1.2740e-07, 1.4115e-07,\n         1.2386e-07],\n        ...,\n        [5.8240e-08, 4.1523e-08, 5.5663e-08,  ..., 4.6319e-08, 5.0810e-08,\n         4.4780e-08],\n        [1.6294e-07, 1.2134e-07, 1.5764e-07,  ..., 1.3234e-07, 1.4288e-07,\n         1.2983e-07],\n        [5.3974e-07, 4.6934e-07, 4.3605e-07,  ..., 3.8247e-07, 4.7694e-07,\n         4.4344e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956305.572302}]}, "version": 2192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956305.5731213}]}, "version": 2193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9491],\n        [0.9650],\n        [0.9567],\n        [0.9541],\n        [0.9616],\n        [0.9646],\n        [0.9142],\n        [0.9555],\n        [0.9545],\n        [0.9615],\n        [0.9594],\n        [0.9652],\n        [0.9570],\n        [0.9581],\n        [0.9584],\n        [0.9565],\n        [0.9561],\n        [0.9623],\n        [0.9477],\n        [0.9586],\n        [0.9562],\n        [0.9426],\n        [0.9593],\n        [0.9844],\n        [0.9516],\n        [1.0000],\n        [0.9555],\n        [1.0000],\n        [0.9572],\n        [0.9576],\n        [0.9528],\n        [0.9564],\n        [0.9878],\n        [0.9500],\n        [0.9581],\n        [0.9923],\n        [0.9169],\n        [0.9586],\n        [0.9571],\n        [0.9840],\n        [0.9547],\n        [0.8511]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956305.5758457}]}, "version": 2194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956305.5796833}]}, "version": 2195}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 17.353857040405273, "step": null, "ts": 1644956305.5810826}]}, "version": 2196}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.48619335889816284, "step": null, "ts": 1644956305.6694844}]}, "version": 2197}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 14.930367469787598, "step": null, "ts": 1644956305.68425}]}, "version": 2198}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.766327142715454, "step": null, "ts": 1644956306.17611}]}, "version": 2199}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.7924e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956306.1837287}]}, "version": 2200}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.184792}]}, "version": 2201}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.3223e-34, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956306.186284}]}, "version": 2202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.1872098}]}, "version": 2203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.8744e-07, 3.8833e-07, 4.5557e-07,  ..., 4.3375e-07, 4.5774e-07,\n         4.2451e-07],\n        [5.2648e-07, 4.2947e-07, 5.0427e-07,  ..., 4.6674e-07, 5.0470e-07,\n         4.4830e-07],\n        [7.4164e-07, 6.5716e-07, 6.5752e-07,  ..., 5.5316e-07, 6.7310e-07,\n         5.3603e-07],\n        ...,\n        [1.6414e-07, 1.2382e-07, 1.5005e-07,  ..., 1.3874e-07, 1.5219e-07,\n         1.3567e-07],\n        [4.6544e-07, 3.8228e-07, 4.4130e-07,  ..., 4.1564e-07, 4.4671e-07,\n         4.0383e-07],\n        [6.3664e-07, 5.1668e-07, 5.9918e-07,  ..., 5.4801e-07, 6.0155e-07,\n         5.2701e-07]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956306.189465}]}, "version": 2204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.1903982}]}, "version": 2205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8582],\n        [0.8475],\n        [0.8106],\n        [0.8999],\n        [0.8521],\n        [0.8594],\n        [0.8645],\n        [1.0000],\n        [0.8684],\n        [0.8561],\n        [0.8380],\n        [0.8597],\n        [0.8302],\n        [0.8540],\n        [0.9482],\n        [0.8671],\n        [0.8801],\n        [0.8813],\n        [0.9083],\n        [0.9290],\n        [0.7886],\n        [0.8564],\n        [0.8564],\n        [0.9000],\n        [0.8022],\n        [0.8594],\n        [0.8613],\n        [0.9038],\n        [0.8473],\n        [0.8616],\n        [0.4154],\n        [0.8406],\n        [0.8564],\n        [0.8661],\n        [1.0000],\n        [0.7788],\n        [0.9782],\n        [0.8532],\n        [0.8722],\n        [0.9534],\n        [0.8637],\n        [0.8180]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956306.1935773}]}, "version": 2206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.194796}]}, "version": 2207}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 20.455928802490234, "step": null, "ts": 1644956306.1962}]}, "version": 2208}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3769996464252472, "step": null, "ts": 1644956306.2930434}]}, "version": 2209}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.697120666503906, "step": null, "ts": 1644956306.3023827}]}, "version": 2210}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.8986324071884155, "step": null, "ts": 1644956306.7402089}]}, "version": 2211}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.2374e-07, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956306.7473006}]}, "version": 2212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.7524796}]}, "version": 2213}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.2329e-30, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956306.7540247}]}, "version": 2214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.7550468}]}, "version": 2215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[9.8564e-08, 7.3006e-08, 9.0339e-08,  ..., 7.6764e-08, 8.6024e-08,\n         7.5595e-08],\n        [1.1149e-07, 8.8029e-08, 1.0494e-07,  ..., 9.2447e-08, 1.0283e-07,\n         9.1481e-08],\n        [9.9759e-08, 7.7428e-08, 9.7291e-08,  ..., 8.4914e-08, 9.4655e-08,\n         8.2482e-08],\n        ...,\n        [1.1681e-07, 9.3768e-08, 1.1077e-07,  ..., 9.9760e-08, 1.1057e-07,\n         9.7577e-08],\n        [9.3911e-08, 7.1884e-08, 8.7547e-08,  ..., 7.2785e-08, 8.2740e-08,\n         7.6762e-08],\n        [9.2491e-08, 7.1407e-08, 9.0561e-08,  ..., 7.8323e-08, 8.7564e-08,\n         7.8430e-08]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956306.7575805}]}, "version": 2216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.7586405}]}, "version": 2217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9734],\n        [0.9682],\n        [0.9712],\n        [0.9724],\n        [0.9703],\n        [0.9695],\n        [0.9694],\n        [0.9710],\n        [0.9700],\n        [0.9720],\n        [1.0000],\n        [0.9689],\n        [0.9711],\n        [0.9839],\n        [0.9825],\n        [0.9676],\n        [0.9708],\n        [0.9713],\n        [0.9712],\n        [0.9691],\n        [1.0000],\n        [0.9701],\n        [0.9707],\n        [0.9706],\n        [0.9724],\n        [0.9778],\n        [0.9714],\n        [0.9696],\n        [0.9735],\n        [0.9707],\n        [0.9714],\n        [0.9665],\n        [0.9697],\n        [0.9694],\n        [0.9521],\n        [0.9899],\n        [0.9791],\n        [0.9568],\n        [0.9773],\n        [0.9662],\n        [0.9741],\n        [0.9732]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956306.7618265}]}, "version": 2218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956306.762789}]}, "version": 2219}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 16.953195571899414, "step": null, "ts": 1644956306.764251}]}, "version": 2220}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.45060503482818604, "step": null, "ts": 1644956306.8702338}]}, "version": 2221}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 15.004610061645508, "step": null, "ts": 1644956306.8771524}]}, "version": 2222}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.591835618019104, "step": null, "ts": 1644956307.34939}]}, "version": 2223}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.4485e-06, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956307.3613098}]}, "version": 2224}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956307.3685732}]}, "version": 2225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956307.3698158}]}, "version": 2226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956307.3709018}]}, "version": 2227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[7.9785e-08, 5.0966e-08, 1.0880e-08,  ..., 3.4510e-08, 3.0635e-08,\n         1.4476e-08],\n        [3.1411e-07, 3.5682e-07, 4.4255e-07,  ..., 4.3606e-07, 3.1534e-07,\n         3.4939e-07],\n        [7.0758e-07, 8.9653e-07, 6.1764e-07,  ..., 8.3368e-07, 6.6543e-07,\n         6.5126e-07],\n        ...,\n        [4.8799e-07, 4.4005e-07, 4.8471e-07,  ..., 5.5811e-07, 4.4586e-07,\n         4.3406e-07],\n        [5.7902e-07, 6.0071e-07, 5.3877e-07,  ..., 6.5727e-07, 5.3727e-07,\n         5.5078e-07],\n        [0.0000e+00, 0.0000e+00, 0.0000e+00,  ..., 0.0000e+00, 0.0000e+00,\n         0.0000e+00]], device='cuda:0', grad_fn=<DivBackward0>)", "step": null, "ts": 1644956307.3734112}]}, "version": 2228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956307.3744268}]}, "version": 2229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9868],\n        [0.8829],\n        [0.7781],\n        [0.8230],\n        [1.0000],\n        [0.8637],\n        [0.9757],\n        [0.7676],\n        [0.7184],\n        [0.7457],\n        [0.6218],\n        [0.9373],\n        [0.9548],\n        [1.0000],\n        [0.3213],\n        [0.8093],\n        [0.7537],\n        [0.9142],\n        [0.9814],\n        [1.0000],\n        [0.7516],\n        [1.0000],\n        [0.7503],\n        [0.9703],\n        [1.0000],\n        [0.9998],\n        [0.9084],\n        [0.5570],\n        [0.8034],\n        [0.7857],\n        [0.8871],\n        [0.5026],\n        [0.8188],\n        [0.7779],\n        [0.7312],\n        [0.6945],\n        [0.9999],\n        [0.8334],\n        [0.8581],\n        [0.8433],\n        [0.8110],\n        [1.0000]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956307.377689}]}, "version": 2230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956307.3787138}]}, "version": 2231}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956307.3802674}]}, "version": 2232}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3574318289756775, "step": null, "ts": 1644956307.4718652}]}, "version": 2233}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 17.49463653564453, "step": null, "ts": 1644956307.4816902}]}, "version": 2234}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956307.964261}]}, "version": 2235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956307.9736564}]}, "version": 2236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.012451}]}, "version": 2237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956308.0135934}]}, "version": 2238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.0145721}]}, "version": 2239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956308.0163457}]}, "version": 2240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.0172608}]}, "version": 2241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956308.0193954}]}, "version": 2242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.0202363}]}, "version": 2243}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.0213292}]}, "version": 2244}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.1092515}]}, "version": 2245}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.1160414}]}, "version": 2246}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.5719268}]}, "version": 2247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956308.5852478}]}, "version": 2248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.586276}]}, "version": 2249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956308.5872982}]}, "version": 2250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.588118}]}, "version": 2251}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956308.589572}]}, "version": 2252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.5904872}]}, "version": 2253}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956308.5926797}]}, "version": 2254}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956308.5936618}]}, "version": 2255}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.5951612}]}, "version": 2256}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.6832187}]}, "version": 2257}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956308.6899457}]}, "version": 2258}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.1869884}]}, "version": 2259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956309.1930845}]}, "version": 2260}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.1990724}]}, "version": 2261}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956309.2000456}]}, "version": 2262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.2010202}]}, "version": 2263}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956309.2025175}]}, "version": 2264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.203455}]}, "version": 2265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956309.2057238}]}, "version": 2266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.2067955}]}, "version": 2267}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.2084022}]}, "version": 2268}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.3080165}]}, "version": 2269}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.321356}]}, "version": 2270}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.7890327}]}, "version": 2271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956309.7970827}]}, "version": 2272}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.7978835}]}, "version": 2273}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956309.7987733}]}, "version": 2274}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.7995884}]}, "version": 2275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956309.8010163}]}, "version": 2276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.8018467}]}, "version": 2277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956309.8038368}]}, "version": 2278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956309.8043892}]}, "version": 2279}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.8053174}]}, "version": 2280}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956309.895382}]}, "version": 2281}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.030239105224609, "step": null, "ts": 1644956309.895382}]}, "version": 2282}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 74.0, "step": null, "ts": 1644956309.895382}]}, "version": 2283}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956309.895382}]}, "version": 2284}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.9097872}]}, "version": 2285}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956309.9137857}]}, "version": 2286}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956310.3676963}]}, "version": 2287}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956310.3693535}]}, "version": 2288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956310.370397}]}, "version": 2289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956310.3716402}]}, "version": 2290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956310.372603}]}, "version": 2291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956310.3744123}]}, "version": 2292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956310.3755813}]}, "version": 2293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956310.3780115}]}, "version": 2294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956310.3794868}]}, "version": 2295}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956310.381053}]}, "version": 2296}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956310.479276}]}, "version": 2297}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956310.486167}]}, "version": 2298}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644956310.7680526}]}, "version": 2299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644956310.7930741}]}, "version": 2300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644956310.79457}]}, "version": 2301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644956310.7955725}]}, "version": 2302}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.2121673}]}, "version": 2303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956311.2213204}]}, "version": 2304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.2275658}]}, "version": 2305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956311.228464}]}, "version": 2306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.2294748}]}, "version": 2307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956311.2309592}]}, "version": 2308}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.2315977}]}, "version": 2309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956311.2334979}]}, "version": 2310}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.234036}]}, "version": 2311}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.2349992}]}, "version": 2312}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.3284414}]}, "version": 2313}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.337461}]}, "version": 2314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.847 (0.847)\tDT 0.000 (0.000)\tS@1 2.381 (2.381)\tLoss nan (nan)", "step": null, "ts": 1644956311.5840998}]}, "version": 2315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.585028}]}, "version": 2316}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.7911766}]}, "version": 2317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956311.8004405}]}, "version": 2318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.801485}]}, "version": 2319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956311.8027382}]}, "version": 2320}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.8038285}]}, "version": 2321}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956311.8056452}]}, "version": 2322}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.8066552}]}, "version": 2323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956311.8089578}]}, "version": 2324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956311.809979}]}, "version": 2325}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.8113468}]}, "version": 2326}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.9100904}]}, "version": 2327}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956311.9186294}]}, "version": 2328}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.3938165}]}, "version": 2329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956312.404444}]}, "version": 2330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.4054825}]}, "version": 2331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956312.4067175}]}, "version": 2332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.4077811}]}, "version": 2333}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956312.4095635}]}, "version": 2334}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.4104369}]}, "version": 2335}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956312.4125476}]}, "version": 2336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.4133859}]}, "version": 2337}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.4148045}]}, "version": 2338}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.505283}]}, "version": 2339}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.5143328}]}, "version": 2340}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.9772813}]}, "version": 2341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956312.9873574}]}, "version": 2342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.988427}]}, "version": 2343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956312.9896283}]}, "version": 2344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.9906533}]}, "version": 2345}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956312.9924443}]}, "version": 2346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.993413}]}, "version": 2347}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956312.995765}]}, "version": 2348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956312.9965427}]}, "version": 2349}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956312.9978583}]}, "version": 2350}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.0873997}]}, "version": 2351}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.0995858}]}, "version": 2352}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.5890667}]}, "version": 2353}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956313.59853}]}, "version": 2354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956313.599578}]}, "version": 2355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956313.6008873}]}, "version": 2356}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956313.6019034}]}, "version": 2357}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956313.6034193}]}, "version": 2358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956313.604447}]}, "version": 2359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956313.6067054}]}, "version": 2360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956313.6076455}]}, "version": 2361}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.609109}]}, "version": 2362}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.6977358}]}, "version": 2363}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956313.7068405}]}, "version": 2364}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.1913254}]}, "version": 2365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956314.1993747}]}, "version": 2366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.2005017}]}, "version": 2367}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956314.2017224}]}, "version": 2368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.2028484}]}, "version": 2369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956314.2045794}]}, "version": 2370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.205529}]}, "version": 2371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956314.2078981}]}, "version": 2372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.2089303}]}, "version": 2373}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.2101228}]}, "version": 2374}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.3019335}]}, "version": 2375}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.3063066}]}, "version": 2376}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.8148534}]}, "version": 2377}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956314.8188152}]}, "version": 2378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.8196864}]}, "version": 2379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956314.8208137}]}, "version": 2380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.8214142}]}, "version": 2381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956314.8226492}]}, "version": 2382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.8232348}]}, "version": 2383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956314.825009}]}, "version": 2384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956314.8256023}]}, "version": 2385}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.8267038}]}, "version": 2386}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.9182436}]}, "version": 2387}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956314.929013}]}, "version": 2388}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956315.39499}]}, "version": 2389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956315.4073336}]}, "version": 2390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956315.4083683}]}, "version": 2391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956315.4096696}]}, "version": 2392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956315.410628}]}, "version": 2393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956315.4124637}]}, "version": 2394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956315.413698}]}, "version": 2395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956315.4160025}]}, "version": 2396}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956315.416884}]}, "version": 2397}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956315.4180148}]}, "version": 2398}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956315.505212}]}, "version": 2399}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956315.5120542}]}, "version": 2400}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956315.997005}]}, "version": 2401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956316.008134}]}, "version": 2402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.0091696}]}, "version": 2403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956316.0101032}]}, "version": 2404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.0108378}]}, "version": 2405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956316.012499}]}, "version": 2406}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.0132484}]}, "version": 2407}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956316.015393}]}, "version": 2408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.0162935}]}, "version": 2409}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.017408}]}, "version": 2410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644956316.0754988}]}, "version": 2411}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644956316.0765705}]}, "version": 2412}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644956316.0776036}]}, "version": 2413}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644956316.0783496}]}, "version": 2414}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.105971}]}, "version": 2415}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.1179085}]}, "version": 2416}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.5689116}]}, "version": 2417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956316.5770226}]}, "version": 2418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.577763}]}, "version": 2419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956316.5788143}]}, "version": 2420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.5794168}]}, "version": 2421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956316.5806885}]}, "version": 2422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.581345}]}, "version": 2423}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956316.58317}]}, "version": 2424}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956316.5851684}]}, "version": 2425}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.5861754}]}, "version": 2426}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.6889327}]}, "version": 2427}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956316.6983807}]}, "version": 2428}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.168133}]}, "version": 2429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956317.1814582}]}, "version": 2430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.1871736}]}, "version": 2431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956317.188264}]}, "version": 2432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.189141}]}, "version": 2433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956317.1905506}]}, "version": 2434}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.1911585}]}, "version": 2435}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956317.1931396}]}, "version": 2436}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.1939363}]}, "version": 2437}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.195222}]}, "version": 2438}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.2868338}]}, "version": 2439}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.291189}]}, "version": 2440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.589 (0.589)\tDT 0.000 (0.000)\tS@1 7.143 (7.143)\tLoss nan (nan)", "step": null, "ts": 1644956317.542731}]}, "version": 2441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.5437458}]}, "version": 2442}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.7621248}]}, "version": 2443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956317.7742865}]}, "version": 2444}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.775259}]}, "version": 2445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956317.7761755}]}, "version": 2446}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.7767873}]}, "version": 2447}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956317.77856}]}, "version": 2448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.7794058}]}, "version": 2449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956317.7813332}]}, "version": 2450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956317.7822037}]}, "version": 2451}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.7832575}]}, "version": 2452}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.8800507}]}, "version": 2453}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956317.8883874}]}, "version": 2454}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956318.3720844}]}, "version": 2455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956318.3795145}]}, "version": 2456}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956318.3806133}]}, "version": 2457}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956318.381878}]}, "version": 2458}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956318.3827379}]}, "version": 2459}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956318.3845575}]}, "version": 2460}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956318.3855605}]}, "version": 2461}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956318.387514}]}, "version": 2462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956318.38841}]}, "version": 2463}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956318.389775}]}, "version": 2464}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956318.4812434}]}, "version": 2465}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956318.4855747}]}, "version": 2466}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956318.9932969}]}, "version": 2467}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956319.0021508}]}, "version": 2468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.0055025}]}, "version": 2469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956319.006717}]}, "version": 2470}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.0077899}]}, "version": 2471}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956319.0096738}]}, "version": 2472}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.0107253}]}, "version": 2473}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956319.013095}]}, "version": 2474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.014084}]}, "version": 2475}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.0153232}]}, "version": 2476}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.103943}]}, "version": 2477}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.1144617}]}, "version": 2478}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.5770767}]}, "version": 2479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956319.5873446}]}, "version": 2480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.5921283}]}, "version": 2481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956319.5930867}]}, "version": 2482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.5937805}]}, "version": 2483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956319.5951347}]}, "version": 2484}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.5958269}]}, "version": 2485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956319.597732}]}, "version": 2486}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956319.598876}]}, "version": 2487}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.6005533}]}, "version": 2488}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.6920593}]}, "version": 2489}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956319.6990888}]}, "version": 2490}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956319.8998187}]}, "version": 2491}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.034900665283203, "step": null, "ts": 1644956319.8998187}]}, "version": 2492}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 90.0, "step": null, "ts": 1644956319.8998187}]}, "version": 2493}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956319.8998187}]}, "version": 2494}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.1732259}]}, "version": 2495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956320.1841218}]}, "version": 2496}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.1908557}]}, "version": 2497}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956320.1920948}]}, "version": 2498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.193117}]}, "version": 2499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956320.1945744}]}, "version": 2500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.1952891}]}, "version": 2501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956320.1974435}]}, "version": 2502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.1981723}]}, "version": 2503}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.1993105}]}, "version": 2504}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.2911205}]}, "version": 2505}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.3053458}]}, "version": 2506}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.7905986}]}, "version": 2507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956320.7952328}]}, "version": 2508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.7961786}]}, "version": 2509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956320.7970905}]}, "version": 2510}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.7976978}]}, "version": 2511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956320.799537}]}, "version": 2512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.8001935}]}, "version": 2513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956320.8022788}]}, "version": 2514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956320.8032305}]}, "version": 2515}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.8043623}]}, "version": 2516}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.898502}]}, "version": 2517}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956320.9074502}]}, "version": 2518}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956321.3800852}]}, "version": 2519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956321.3817205}]}, "version": 2520}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956321.3828108}]}, "version": 2521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956321.384126}]}, "version": 2522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956321.3851001}]}, "version": 2523}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956321.3867755}]}, "version": 2524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956321.387874}]}, "version": 2525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956321.3902245}]}, "version": 2526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956321.3913171}]}, "version": 2527}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956321.392656}]}, "version": 2528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644956321.4744604}]}, "version": 2529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644956321.4753556}]}, "version": 2530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644956321.4760427}]}, "version": 2531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644956321.476918}]}, "version": 2532}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956321.4873526}]}, "version": 2533}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956321.4971836}]}, "version": 2534}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.2009842}]}, "version": 2535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956322.208266}]}, "version": 2536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.215457}]}, "version": 2537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956322.2167068}]}, "version": 2538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.2176666}]}, "version": 2539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956322.219451}]}, "version": 2540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.2203507}]}, "version": 2541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956322.2224586}]}, "version": 2542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.2234783}]}, "version": 2543}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.224842}]}, "version": 2544}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.3102436}]}, "version": 2545}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.335509}]}, "version": 2546}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.7776186}]}, "version": 2547}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956322.787363}]}, "version": 2548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.788391}]}, "version": 2549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956322.7894108}]}, "version": 2550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.790309}]}, "version": 2551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956322.7917104}]}, "version": 2552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.7927637}]}, "version": 2553}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956322.7950742}]}, "version": 2554}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956322.7960994}]}, "version": 2555}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.797242}]}, "version": 2556}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.8886757}]}, "version": 2557}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956322.9094002}]}, "version": 2558}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956323.3807824}]}, "version": 2559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956323.3877342}]}, "version": 2560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.388723}]}, "version": 2561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956323.3898125}]}, "version": 2562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.3906872}]}, "version": 2563}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956323.3925552}]}, "version": 2564}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.3934653}]}, "version": 2565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956323.3956485}]}, "version": 2566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.3965242}]}, "version": 2567}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956323.3975878}]}, "version": 2568}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956323.4913192}]}, "version": 2569}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956323.4981127}]}, "version": 2570}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.587 (0.587)\tDT 0.000 (0.000)\tS@1 0.000 (0.000)\tLoss nan (nan)", "step": null, "ts": 1644956323.7449157}]}, "version": 2571}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.7460666}]}, "version": 2572}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956323.9815848}]}, "version": 2573}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956323.9954035}]}, "version": 2574}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.9964085}]}, "version": 2575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956323.997664}]}, "version": 2576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956323.9986067}]}, "version": 2577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956324.000333}]}, "version": 2578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.0011475}]}, "version": 2579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956324.0032034}]}, "version": 2580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.00415}]}, "version": 2581}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.0053055}]}, "version": 2582}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.0940647}]}, "version": 2583}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.1052308}]}, "version": 2584}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.5760887}]}, "version": 2585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956324.5840852}]}, "version": 2586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.584968}]}, "version": 2587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956324.5861275}]}, "version": 2588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.5870209}]}, "version": 2589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956324.5885403}]}, "version": 2590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.589424}]}, "version": 2591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956324.591664}]}, "version": 2592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956324.592612}]}, "version": 2593}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.5939517}]}, "version": 2594}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.6790776}]}, "version": 2595}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956324.6923566}]}, "version": 2596}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.1773202}]}, "version": 2597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956325.1867135}]}, "version": 2598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.197265}]}, "version": 2599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956325.1981657}]}, "version": 2600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.1987119}]}, "version": 2601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956325.2003262}]}, "version": 2602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.2009609}]}, "version": 2603}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956325.202713}]}, "version": 2604}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.2034986}]}, "version": 2605}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.2046185}]}, "version": 2606}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.2999675}]}, "version": 2607}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.3083367}]}, "version": 2608}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.7832034}]}, "version": 2609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956325.787634}]}, "version": 2610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.7886202}]}, "version": 2611}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956325.7898386}]}, "version": 2612}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.7907822}]}, "version": 2613}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956325.7925131}]}, "version": 2614}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.7931843}]}, "version": 2615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956325.795204}]}, "version": 2616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956325.795885}]}, "version": 2617}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.796882}]}, "version": 2618}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.896181}]}, "version": 2619}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956325.9029534}]}, "version": 2620}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956326.3786771}]}, "version": 2621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956326.3986893}]}, "version": 2622}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956326.408399}]}, "version": 2623}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956326.4095452}]}, "version": 2624}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956326.4102545}]}, "version": 2625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956326.411732}]}, "version": 2626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956326.413002}]}, "version": 2627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956326.4149637}]}, "version": 2628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956326.4155772}]}, "version": 2629}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956326.4165366}]}, "version": 2630}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956326.5152354}]}, "version": 2631}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956326.52211}]}, "version": 2632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644956326.7634525}]}, "version": 2633}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644956326.7645006}]}, "version": 2634}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644956326.7654219}]}, "version": 2635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644956326.7664185}]}, "version": 2636}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.0217648}]}, "version": 2637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956327.0333998}]}, "version": 2638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.0350323}]}, "version": 2639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956327.0359893}]}, "version": 2640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.0366464}]}, "version": 2641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956327.0383422}]}, "version": 2642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.0389266}]}, "version": 2643}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956327.0408208}]}, "version": 2644}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.0418189}]}, "version": 2645}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.0428677}]}, "version": 2646}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.1392562}]}, "version": 2647}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.1432538}]}, "version": 2648}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.6184335}]}, "version": 2649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956327.630795}]}, "version": 2650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.631811}]}, "version": 2651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956327.63309}]}, "version": 2652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.6339958}]}, "version": 2653}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956327.6354644}]}, "version": 2654}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.636396}]}, "version": 2655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956327.638462}]}, "version": 2656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956327.6391358}]}, "version": 2657}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.6402667}]}, "version": 2658}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.725344}]}, "version": 2659}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956327.733951}]}, "version": 2660}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.2103767}]}, "version": 2661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956328.218593}]}, "version": 2662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.2195947}]}, "version": 2663}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956328.22089}]}, "version": 2664}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.2218947}]}, "version": 2665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956328.2234535}]}, "version": 2666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.2243762}]}, "version": 2667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956328.226483}]}, "version": 2668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.2273703}]}, "version": 2669}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.228546}]}, "version": 2670}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.3199177}]}, "version": 2671}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.3327584}]}, "version": 2672}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.8049464}]}, "version": 2673}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956328.816966}]}, "version": 2674}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.8242815}]}, "version": 2675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956328.825179}]}, "version": 2676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.8260462}]}, "version": 2677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956328.8274372}]}, "version": 2678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.828293}]}, "version": 2679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956328.830311}]}, "version": 2680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956328.8312302}]}, "version": 2681}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.832438}]}, "version": 2682}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.9175391}]}, "version": 2683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956328.929078}]}, "version": 2684}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956329.357733}]}, "version": 2685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644956329.3646264}]}, "version": 2686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956329.3716524}]}, "version": 2687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644956329.3729253}]}, "version": 2688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956329.3739254}]}, "version": 2689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<DivBackward0>)", "step": null, "ts": 1644956329.3755896}]}, "version": 2690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956329.3765845}]}, "version": 2691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<UnsqueezeBackward0>)", "step": null, "ts": 1644956329.3788807}]}, "version": 2692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956329.3799186}]}, "version": 2693}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956329.3811498}]}, "version": 2694}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956329.466305}]}, "version": 2695}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644956329.4743366}]}, "version": 2696}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [2/200]\tBT 0.539 (0.539)\tDT 0.000 (0.000)\tS@1 2.381 (2.381)\tLoss nan (nan)", "step": null, "ts": 1644956329.7220812}]}, "version": 2697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956329.723191}]}, "version": 2698}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644956329.9044735}]}, "version": 2699}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.058311462402344, "step": null, "ts": 1644956329.9044735}]}, "version": 2700}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644956329.9044735}]}, "version": 2701}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9620361328125, "step": null, "ts": 1644956329.9044735}]}, "version": 2702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644956332.1500936}]}, "version": 2703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644956332.1511395}]}, "version": 2704}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644956332.1518629}]}, "version": 2705}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644956332.1527965}]}, "version": 2706}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956339.9083996}]}, "version": 2707}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.169673919677734, "step": null, "ts": 1644956339.9083996}]}, "version": 2708}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 43.0, "step": null, "ts": 1644956339.9083996}]}, "version": 2709}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9991455078125, "step": null, "ts": 1644956339.9083996}]}, "version": 2710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [2][0/13]\tT 0.654 (0.654)\tD 0.528 (0.528)\tT@1 33.333 (33.333)\tT@5 100.000 (100.000)\tL nan (nan)", "step": null, "ts": 1644956343.8453608}]}, "version": 2711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956343.859082}]}, "version": 2712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [2][10/13]\tT 0.466 (0.474)\tD 0.350 (0.353)\tT@1 0.000 (3.030)\tT@5 0.000 (15.296)\tL nan (nan)", "step": null, "ts": 1644956348.403187}]}, "version": 2713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644956348.4157064}]}, "version": 2714}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644956353.7718828}]}, "version": 2715}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644956349.911639}]}, "version": 2716}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.054973602294922, "step": null, "ts": 1644956349.911639}]}, "version": 2717}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9991455078125, "step": null, "ts": 1644956349.911639}]}, "version": 2718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "An uncaught exception occurred while run was active on worker compute130.", "step": null, "ts": 1644956353.7817733}, {"value": "Marking run as failed", "step": null, "ts": 1644956353.7817733}, {"value": "Traceback:", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"main.py\", line 281, in <module>\n    main()\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"main.py\", line 135, in main\n    target_features, target_features_2, target_targets, pseudo_labels = validate_compute_cen(val_loader_target, val_loader_source, model, criterion, epoch, args, run)\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/SRDC_CVPR2020/trainer.py\", line 405, in validate_compute_cen\n    tsne_proj = tsne.fit_transform(target_features.cpu().data.numpy())\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 932, in fit_transform\n    embedding = self._fit(X)\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 702, in _fit\n    X = self._validate_data(X, accept_sparse=['csr'],\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/base.py\", line 421, in _validate_data\n    X = check_array(X, **check_params)\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 63, in inner_f\n    return f(*args, **kwargs)\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 663, in check_array\n    _assert_all_finite(array,\n", "step": null, "ts": 1644956353.7817733}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 103, in _assert_all_finite\n    raise ValueError(\n", "step": null, "ts": 1644956353.7817733}, {"value": "Input contains NaN, infinity or a value too large for dtype('float32').", "step": null, "ts": 1644956353.7817733}]}, "version": 2719}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": true}, "version": 2720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Traceback (most recent call last):\n", "step": null, "ts": 1644956353.7840633}]}, "version": 2721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.784844}]}, "version": 2722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"main.py\", line 281, in <module>\n    main()\n", "step": null, "ts": 1644956353.7854476}]}, "version": 2723}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7863343}]}, "version": 2724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"main.py\", line 135, in main\n    target_features, target_features_2, target_targets, pseudo_labels = validate_compute_cen(val_loader_target, val_loader_source, model, criterion, epoch, args, run)\n", "step": null, "ts": 1644956353.7868555}]}, "version": 2725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7872312}]}, "version": 2726}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/SRDC_CVPR2020/trainer.py\", line 405, in validate_compute_cen\n    tsne_proj = tsne.fit_transform(target_features.cpu().data.numpy())\n", "step": null, "ts": 1644956353.7875924}]}, "version": 2727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.788016}]}, "version": 2728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 932, in fit_transform\n    embedding = self._fit(X)\n", "step": null, "ts": 1644956353.7883968}]}, "version": 2729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7888172}]}, "version": 2730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 702, in _fit\n    X = self._validate_data(X, accept_sparse=['csr'],\n", "step": null, "ts": 1644956353.789247}]}, "version": 2731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7896578}]}, "version": 2732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/base.py\", line 421, in _validate_data\n    X = check_array(X, **check_params)\n", "step": null, "ts": 1644956353.7900388}]}, "version": 2733}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7903707}]}, "version": 2734}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 63, in inner_f\n    return f(*args, **kwargs)\n", "step": null, "ts": 1644956353.7906916}]}, "version": 2735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7914143}]}, "version": 2736}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 663, in check_array\n    _assert_all_finite(array,\n", "step": null, "ts": 1644956353.792231}]}, "version": 2737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7927847}]}, "version": 2738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 103, in _assert_all_finite\n    raise ValueError(\n", "step": null, "ts": 1644956353.793319}]}, "version": 2739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7937093}]}, "version": 2740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "ValueError: Input contains NaN, infinity or a value too large for dtype('float32').\n", "step": null, "ts": 1644956353.794608}]}, "version": 2741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644956353.7954109}]}, "version": 2742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\nIf you suspect this is an IPython 7.29.0 bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@python.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n", "step": null, "ts": 1644956353.7963393}]}, "version": 2743}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1644956353.796899}]}, "version": 2744}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Shutting down background jobs, please wait a moment...\n", "step": null, "ts": 1644956353.797599}]}, "version": 2745}
