{"obj": {"type": "AssignString", "path": ["sys", "name"], "value": "Untitled"}, "version": 1}
{"obj": {"type": "AssignString", "path": ["sys", "description"], "value": ""}, "version": 2}
{"obj": {"type": "AssignString", "path": ["sys", "hostname"], "value": "compute130"}, "version": 3}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": false}, "version": 4}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stdout"]}, "version": 5}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stderr"]}, "version": 6}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "cpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 7}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "cpu"]}, "version": 8}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "memory"], "min": 0.0, "max": 125.80869674682617, "unit": "GB"}, "version": 9}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "memory"]}, "version": 10}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 11}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu"]}, "version": 12}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu_memory"], "min": 0.0, "max": 11.9124755859375, "unit": "GB"}, "version": 13}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu_memory"]}, "version": 14}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 2.8, "step": null, "ts": 1644962584.9146094}]}, "version": 15}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.374427795410156, "step": null, "ts": 1644962584.9146094}]}, "version": 16}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 0.9229736328125, "step": null, "ts": 1644962584.9146094}]}, "version": 17}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "", "step": null, "ts": 1644962584.9250548}]}, "version": 18}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "https://app.neptune.ai/junkataoka/SRDC/e/SRDC-247\n", "step": null, "ts": 1644962584.9264014}]}, "version": 19}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Remember to stop your run once you\u2019ve finished logging your metadata (https://docs.neptune.ai/api-reference/run#stop). It will be stopped automatically only when the notebook kernel/interactive console is terminated.\n", "step": null, "ts": 1644962584.927778}]}, "version": 20}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "begin training", "step": null, "ts": 1644962585.0423353}]}, "version": 21}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962585.0435164}]}, "version": 22}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962594.9251194}]}, "version": 23}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.793586730957031, "step": null, "ts": 1644962594.9251194}]}, "version": 24}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 37.0, "step": null, "ts": 1644962594.9251194}]}, "version": 25}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 4.0382080078125, "step": null, "ts": 1644962594.9251194}]}, "version": 26}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.664 (0.664)\tD 0.543 (0.543)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1956 (0.1956)", "step": null, "ts": 1644962600.8762348}]}, "version": 27}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962600.8902922}]}, "version": 28}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962604.9285545}]}, "version": 29}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.738254547119141, "step": null, "ts": 1644962604.9285545}]}, "version": 30}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9600830078125, "step": null, "ts": 1644962604.9285545}]}, "version": 31}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.482 (0.479)\tD 0.357 (0.358)\tT@1 76.190 (81.530)\tT@5 100.000 (94.517)\tL 0.8891 (0.7919)", "step": null, "ts": 1644962605.4771903}]}, "version": 32}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962605.4834712}]}, "version": 33}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962611.4402633}]}, "version": 34}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.4, "step": null, "ts": 1644962614.9328992}]}, "version": 35}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.668037414550781, "step": null, "ts": 1644962614.9328992}]}, "version": 36}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644962614.9328992}]}, "version": 37}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962620.5722756}]}, "version": 38}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962621.4785662}]}, "version": 39}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644962621.484046}]}, "version": 40}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962621.4850183}]}, "version": 41}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.671 (0.671)\tLoss 0.1956 (0.1956)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644962622.1587896}]}, "version": 42}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962622.1726837}]}, "version": 43}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962624.9373457}]}, "version": 44}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.771129608154297, "step": null, "ts": 1644962624.9373457}]}, "version": 45}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 50.0, "step": null, "ts": 1644962624.9373457}]}, "version": 46}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644962624.9373457}]}, "version": 47}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.485 (0.476)\tLoss 0.8891 (0.7919)\tPrec@1 76.190 (81.530)\tPrec@5 100.000 (94.517)", "step": null, "ts": 1644962626.7282846}]}, "version": 48}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962626.734094}]}, "version": 49}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644962627.4160058}]}, "version": 50}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.4168293}]}, "version": 51}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.012, Prec@1 74.465", "step": null, "ts": 1644962627.4304118}]}, "version": 52}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.4313512}]}, "version": 53}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.049, Prec@1 81.258", "step": null, "ts": 1644962627.51652}]}, "version": 54}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.517681}]}, "version": 55}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.054, Prec@1 82.013", "step": null, "ts": 1644962627.5795462}]}, "version": 56}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.5805578}]}, "version": 57}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.056, Prec@1 82.138", "step": null, "ts": 1644962627.6414754}]}, "version": 58}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.6426067}]}, "version": 59}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.057, Prec@1 82.642", "step": null, "ts": 1644962627.7030709}]}, "version": 60}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.7042809}]}, "version": 61}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 77.610", "step": null, "ts": 1644962627.8231964}]}, "version": 62}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.8245094}]}, "version": 63}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.030, Prec@1 83.648", "step": null, "ts": 1644962627.8832498}]}, "version": 64}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.8845232}]}, "version": 65}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.041, Prec@1 85.283", "step": null, "ts": 1644962627.9464161}]}, "version": 66}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962627.9477363}]}, "version": 67}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.046, Prec@1 86.038", "step": null, "ts": 1644962628.0062435}]}, "version": 68}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962628.0072856}]}, "version": 69}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.049, Prec@1 86.289", "step": null, "ts": 1644962628.0661244}]}, "version": 70}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962628.0674174}]}, "version": 71}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644962628.481926}]}, "version": 72}
{"obj": {"type": "LogFloats", "path": ["metrics", "best_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644962628.4864702}]}, "version": 73}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8525061011314392, "step": null, "ts": 1644962630.4433305}]}, "version": 74}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962630.4540544}]}, "version": 75}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Warning: string series 'monitoring/stdout' value was longer than 1000 characters and was truncated. This warning is printed only once per series.\n", "step": null, "ts": 1644962630.4556568}]}, "version": 76}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.5156],\n        [100000.3203],\n        [100000.8203],\n        [100000.0625],\n        [ 99999.8125],\n        [100000.0078],\n        [100003.2578],\n        [ 99997.8984],\n        [100000.4609],\n        [ 99999.7188],\n        [100000.0312],\n        [ 99999.9844],\n        [ 99999.7578],\n        [100000.0391],\n        [ 99999.6094],\n        [100000.0859],\n        [ 99999.8594],\n        [100000.0938],\n        [ 99999.9141],\n        [ 99999.8125],\n        [ 99996.0078],\n        [100000.2656],\n        [ 99999.6562],\n        [100002.3984],\n        [100002.8359],\n        [ 99999.6406],\n        [100000.4844],\n        [100000.0078],\n        [100008.2812],\n        [ 99990.3984],\n        [ 99999.9453],\n        [ 99999.3281],\n        [100000.1562],\n        [ 99999.9297],\n        [ 99999.8438],\n        [ 99997.6562],\n        [ 99999.9062],\n        [ 99999.5547],\n        [ 99999.7188],\n        [100000.0703],\n        [ 99999.9688],\n        [ 99954.6641]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962630.453817}]}, "version": 77}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.4580646}]}, "version": 78}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962630.46479}]}, "version": 79}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.4659166}]}, "version": 80}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962630.4682765}]}, "version": 81}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.4696553}]}, "version": 82}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962630.472196}]}, "version": 83}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.4735503}]}, "version": 84}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9785.982421875, "step": null, "ts": 1644962630.4758453}]}, "version": 85}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.32100024819374084, "step": null, "ts": 1644962630.58404}]}, "version": 86}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0625],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0625],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962630.5929036}]}, "version": 87}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.599082}]}, "version": 88}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962630.6025856}]}, "version": 89}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.6053925}]}, "version": 90}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962630.6066353}]}, "version": 91}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.607642}]}, "version": 92}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962630.6088343}]}, "version": 93}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962630.6097775}]}, "version": 94}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962630.6110542}]}, "version": 95}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 2.024 (2.024)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962631.7314765}]}, "version": 96}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.7327628}]}, "version": 97}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.000000", "step": null, "ts": 1644962631.7341843}]}, "version": 98}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.7348578}]}, "version": 99}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6724250316619873, "step": null, "ts": 1644962631.9483836}]}, "version": 100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.7422],\n        [100000.7031],\n        [100000.3047],\n        [100000.3047],\n        [100000.0469],\n        [100000.2578],\n        [100001.5781],\n        [ 99999.6406],\n        [ 99999.8438],\n        [ 99999.8281],\n        [100000.8828],\n        [100000.6562],\n        [ 99999.7109],\n        [ 99999.9688],\n        [ 99999.8828],\n        [ 99999.3594],\n        [100000.0156],\n        [100000.2266],\n        [ 99999.8594],\n        [100000.0391],\n        [100000.0859],\n        [ 99999.3047],\n        [ 99999.8516],\n        [100000.2734],\n        [ 99999.9688],\n        [ 99999.1406],\n        [100000.7188],\n        [100000.1484],\n        [ 99999.8984],\n        [100000.1797],\n        [100000.2031],\n        [ 99999.8438],\n        [100000.2031],\n        [ 99999.8750],\n        [100000.4297],\n        [ 99999.2344],\n        [100000.1406],\n        [100000.0078],\n        [100000.1875],\n        [ 99999.6719],\n        [100000.0938],\n        [ 99999.8516]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962631.960807}]}, "version": 101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.9618468}]}, "version": 102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962631.9664285}]}, "version": 103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.967569}]}, "version": 104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962631.9690428}]}, "version": 105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.970175}]}, "version": 106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962631.971929}]}, "version": 107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962631.972859}]}, "version": 108}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -299.3360595703125, "step": null, "ts": 1644962631.9743042}]}, "version": 109}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24318914115428925, "step": null, "ts": 1644962632.0857127}]}, "version": 110}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0078],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.1016],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962632.0938787}]}, "version": 111}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.0990586}]}, "version": 112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962632.1107352}]}, "version": 113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.115322}]}, "version": 114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962632.1166651}]}, "version": 115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.117637}]}, "version": 116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962632.1190193}]}, "version": 117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.1200228}]}, "version": 118}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962632.1215184}]}, "version": 119}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8772707581520081, "step": null, "ts": 1644962632.5521371}]}, "version": 120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.3281],\n        [100000.1562],\n        [ 99999.7969],\n        [100000.1094],\n        [ 99998.8438],\n        [100000.0156],\n        [ 99999.8906],\n        [ 99999.3672],\n        [100000.7344],\n        [100000.1406],\n        [100000.3594],\n        [ 99999.9453],\n        [ 99999.8906],\n        [ 99999.9141],\n        [100000.2656],\n        [ 99999.7578],\n        [100000.1953],\n        [100000.5391],\n        [100000.0547],\n        [ 99999.6953],\n        [ 99999.0625],\n        [ 99999.9609],\n        [ 99999.8828],\n        [ 99999.9766],\n        [100000.3125],\n        [ 99999.9844],\n        [100000.0859],\n        [100000.7812],\n        [ 99998.8047],\n        [100002.2734],\n        [100002.1094],\n        [100000.1250],\n        [ 99999.9219],\n        [ 99999.9062],\n        [ 99999.9375],\n        [ 99999.3984],\n        [100005.7109],\n        [100000.1172],\n        [ 99999.2891],\n        [ 99999.8828],\n        [ 99999.2109],\n        [ 99999.9766]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962632.5601337}]}, "version": 121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.5657747}]}, "version": 122}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962632.5694015}]}, "version": 123}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.5703952}]}, "version": 124}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962632.5717459}]}, "version": 125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.5726988}]}, "version": 126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962632.5737853}]}, "version": 127}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.5747416}]}, "version": 128}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -8036.0224609375, "step": null, "ts": 1644962632.5757854}]}, "version": 129}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21641263365745544, "step": null, "ts": 1644962632.6638174}]}, "version": 130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0703],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0703],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962632.6698182}]}, "version": 131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.6759222}]}, "version": 132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962632.6915877}]}, "version": 133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.7037885}]}, "version": 134}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962632.7080438}]}, "version": 135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.7089272}]}, "version": 136}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962632.7103727}]}, "version": 137}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962632.711409}]}, "version": 138}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962632.7126174}]}, "version": 139}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9187384247779846, "step": null, "ts": 1644962633.141448}]}, "version": 140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.7812],\n        [ 99999.7500],\n        [ 99999.4844],\n        [ 99999.7422],\n        [100000.0781],\n        [100000.2031],\n        [ 99997.7812],\n        [ 99999.0312],\n        [100000.0859],\n        [ 99999.9219],\n        [ 99999.9766],\n        [100000.0547],\n        [ 99999.9141],\n        [ 99999.9688],\n        [100000.4844],\n        [ 99999.9609],\n        [100000.0312],\n        [100000.0391],\n        [100000.1562],\n        [ 99999.2344],\n        [ 99999.6016],\n        [100000.0391],\n        [ 99999.8516],\n        [100000.2656],\n        [ 99999.9453],\n        [ 99999.9062],\n        [100000.0000],\n        [ 99999.1641],\n        [100003.2031],\n        [100000.2344],\n        [100005.9688],\n        [100000.3047],\n        [100000.5703],\n        [100000.3359],\n        [100000.1328],\n        [ 99999.9062],\n        [ 99999.9453],\n        [ 99999.2812],\n        [ 99999.8750],\n        [100000.2500],\n        [100000.0312],\n        [ 99999.6016]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962633.1504622}]}, "version": 141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.151452}]}, "version": 142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962633.1547096}]}, "version": 143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.1556575}]}, "version": 144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962633.1567914}]}, "version": 145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.157694}]}, "version": 146}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962633.1590931}]}, "version": 147}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.159788}]}, "version": 148}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -6631.4453125, "step": null, "ts": 1644962633.1610417}]}, "version": 149}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20896455645561218, "step": null, "ts": 1644962633.2619984}]}, "version": 150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0703],\n        [100000.0469],\n        [100000.0625],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0547],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962633.2683048}]}, "version": 151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.27446}]}, "version": 152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962633.283701}]}, "version": 153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.2866747}]}, "version": 154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962633.2877676}]}, "version": 155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.288473}]}, "version": 156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962633.2896464}]}, "version": 157}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.2905543}]}, "version": 158}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962633.2915516}]}, "version": 159}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962633.6088693}]}, "version": 160}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.724602460861206, "step": null, "ts": 1644962633.7192247}]}, "version": 161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.5078],\n        [100000.3984],\n        [ 99999.8125],\n        [100000.6562],\n        [ 99996.4375],\n        [100000.0312],\n        [100000.1797],\n        [ 99999.8203],\n        [100002.9453],\n        [100000.1016],\n        [100000.1641],\n        [ 99995.9062],\n        [ 99998.2422],\n        [100000.2578],\n        [ 99999.7578],\n        [100000.2031],\n        [ 99999.2188],\n        [100000.4453],\n        [ 99999.9453],\n        [ 99999.8516],\n        [100001.7734],\n        [100000.0469],\n        [ 99990.1797],\n        [ 99999.9688],\n        [100000.7188],\n        [ 99999.6328],\n        [100011.1172],\n        [100000.1094],\n        [ 99999.0547],\n        [100000.2344],\n        [100000.0625],\n        [100000.2031],\n        [100000.7656],\n        [100005.0078],\n        [100000.3281],\n        [100000.1406],\n        [ 99999.7812],\n        [ 99999.4531],\n        [ 99999.5391],\n        [100003.8984],\n        [ 99999.9453],\n        [ 99999.4531]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962633.7322543}]}, "version": 162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.7332828}]}, "version": 163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962633.7365482}]}, "version": 164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.7406187}]}, "version": 165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962633.741729}]}, "version": 166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.7426846}]}, "version": 167}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962633.7438347}]}, "version": 168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.744714}]}, "version": 169}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -12733.296875, "step": null, "ts": 1644962633.745734}]}, "version": 170}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.31185537576675415, "step": null, "ts": 1644962633.8328779}]}, "version": 171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0703],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0078],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962633.8447585}]}, "version": 172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.8488333}]}, "version": 173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962633.8538039}]}, "version": 174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.8606958}]}, "version": 175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962633.8618112}]}, "version": 176}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.8626273}]}, "version": 177}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962633.863757}]}, "version": 178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962633.8646073}]}, "version": 179}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962633.8655558}]}, "version": 180}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0130709409713745, "step": null, "ts": 1644962634.3006446}]}, "version": 181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100002.5391],\n        [100000.1328],\n        [100000.0078],\n        [ 99999.3047],\n        [ 99999.7969],\n        [ 99999.7891],\n        [ 99999.9062],\n        [ 99999.8203],\n        [ 99999.8281],\n        [100000.0781],\n        [ 99999.7109],\n        [100000.1094],\n        [100001.4531],\n        [ 99999.9375],\n        [100000.2969],\n        [100000.2500],\n        [ 99998.7344],\n        [100000.6875],\n        [100000.1406],\n        [100000.1641],\n        [100000.8672],\n        [ 99999.9922],\n        [ 99999.6797],\n        [ 99999.7422],\n        [ 99998.8984],\n        [100000.4766],\n        [100002.5781],\n        [ 99999.4844],\n        [100000.0156],\n        [100001.2812],\n        [ 99999.9531],\n        [ 99998.1641],\n        [100000.0078],\n        [100000.0000],\n        [ 99999.8047],\n        [100000.6406],\n        [100000.6875],\n        [ 99999.7969],\n        [ 99999.9062],\n        [100000.1250],\n        [ 99999.9219],\n        [100000.6406]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962634.3182151}]}, "version": 182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.5387921}]}, "version": 183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962634.5425513}]}, "version": 184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.543658}]}, "version": 185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000.0078, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962634.544819}]}, "version": 186}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.5457695}]}, "version": 187}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(99999.9922, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962634.5470252}]}, "version": 188}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.5479717}]}, "version": 189}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -10131.375, "step": null, "ts": 1644962634.549281}]}, "version": 190}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3622387945652008, "step": null, "ts": 1644962634.6335657}]}, "version": 191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0547],\n        [100000.0234],\n        [100000.0078],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962634.6519058}]}, "version": 192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.6560285}]}, "version": 193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962634.659416}]}, "version": 194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.6658323}]}, "version": 195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962634.6672301}]}, "version": 196}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.6679618}]}, "version": 197}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962634.6693058}]}, "version": 198}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962634.6700516}]}, "version": 199}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962634.6711416}]}, "version": 200}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962634.9420285}]}, "version": 201}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.00274658203125, "step": null, "ts": 1644962634.9420285}]}, "version": 202}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644962634.9420285}]}, "version": 203}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962634.9420285}]}, "version": 204}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0309386253356934, "step": null, "ts": 1644962635.103173}]}, "version": 205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9766],\n        [ 99999.7266],\n        [ 99999.5547],\n        [ 99999.7422],\n        [100000.0938],\n        [ 99999.6719],\n        [ 99997.6719],\n        [ 99999.8906],\n        [ 99999.8281],\n        [100000.1016],\n        [100000.2500],\n        [100001.7812],\n        [ 99999.7266],\n        [ 99999.9766],\n        [ 99999.8281],\n        [100000.2188],\n        [100000.1484],\n        [100000.6641],\n        [ 99999.6641],\n        [100000.1016],\n        [100010.7500],\n        [100000.0859],\n        [100000.4141],\n        [100000.3125],\n        [100000.4062],\n        [100000.1406],\n        [ 99999.8594],\n        [ 99999.7500],\n        [100000.8047],\n        [ 99999.3984],\n        [ 99999.9844],\n        [ 99999.5156],\n        [ 99999.7344],\n        [100000.4766],\n        [ 99999.6641],\n        [100000.3125],\n        [100000.0000],\n        [100000.3906],\n        [100000.4375],\n        [100000.5469],\n        [100000.0625],\n        [100000.1406]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962635.1067905}]}, "version": 206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.1228786}]}, "version": 207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962635.1266952}]}, "version": 208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.1300926}]}, "version": 209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962635.1314566}]}, "version": 210}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.1323605}]}, "version": 211}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962635.133552}]}, "version": 212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.1344023}]}, "version": 213}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -368.4136657714844, "step": null, "ts": 1644962635.135501}]}, "version": 214}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.36147186160087585, "step": null, "ts": 1644962635.2227685}]}, "version": 215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962635.228575}]}, "version": 216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.2378278}]}, "version": 217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962635.2437983}]}, "version": 218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.2472565}]}, "version": 219}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962635.2483222}]}, "version": 220}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.2492518}]}, "version": 221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962635.2506633}]}, "version": 222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.2515094}]}, "version": 223}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962635.2525542}]}, "version": 224}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5970225930213928, "step": null, "ts": 1644962635.6781123}]}, "version": 225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0625],\n        [100000.3203],\n        [ 99999.8672],\n        [ 99999.7422],\n        [100001.4062],\n        [ 99999.7109],\n        [ 99992.5938],\n        [ 99999.8906],\n        [100000.2734],\n        [ 99998.0234],\n        [ 99999.5859],\n        [100000.0625],\n        [100000.5547],\n        [ 99999.8984],\n        [ 99999.8594],\n        [ 99998.6953],\n        [100000.1172],\n        [100000.0859],\n        [ 99999.2969],\n        [100000.1797],\n        [100000.3672],\n        [ 99998.4531],\n        [ 99999.7031],\n        [100001.0078],\n        [100000.1875],\n        [ 99999.8672],\n        [ 99999.9453],\n        [ 99999.9922],\n        [ 99999.9062],\n        [ 99999.5312],\n        [ 99995.1562],\n        [100000.1094],\n        [ 99999.3359],\n        [100001.5078],\n        [ 99999.9219],\n        [ 99999.9922],\n        [100000.2188],\n        [100000.0000],\n        [100000.0703],\n        [ 99999.9766],\n        [ 99999.8906],\n        [100000.1406]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962635.6915963}]}, "version": 226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.701472}]}, "version": 227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962635.7048924}]}, "version": 228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.7079039}]}, "version": 229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962635.709244}]}, "version": 230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.7103186}]}, "version": 231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962635.7117653}]}, "version": 232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.7126858}]}, "version": 233}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -15703.626953125, "step": null, "ts": 1644962635.7137368}]}, "version": 234}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4371560513973236, "step": null, "ts": 1644962635.8021476}]}, "version": 235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0781],\n        [100000.0469],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0625],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0547],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962635.813447}]}, "version": 236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.8198102}]}, "version": 237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962635.8257563}]}, "version": 238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.8343756}]}, "version": 239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962635.83599}]}, "version": 240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.8370082}]}, "version": 241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962635.8384757}]}, "version": 242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962635.84785}]}, "version": 243}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962635.8599665}]}, "version": 244}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.44670894742012024, "step": null, "ts": 1644962636.2885814}]}, "version": 245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8516],\n        [100000.0703],\n        [ 99999.8906],\n        [100000.0234],\n        [100000.1094],\n        [100000.0625],\n        [100000.5625],\n        [100000.1562],\n        [ 99999.8281],\n        [ 99999.6328],\n        [100000.1406],\n        [ 99999.8047],\n        [ 99997.2422],\n        [100000.0156],\n        [ 99999.9844],\n        [ 99999.8281],\n        [100000.2812],\n        [100000.0156],\n        [ 99992.2422],\n        [100000.2812],\n        [100000.3750],\n        [100000.2812],\n        [ 99999.8906],\n        [ 99999.9844],\n        [100000.0391],\n        [100001.5078],\n        [ 99999.7266],\n        [100000.5703],\n        [ 99999.9688],\n        [ 99999.9141],\n        [ 99999.7500],\n        [100000.2500],\n        [ 99999.6719],\n        [100000.3125],\n        [100000.0625],\n        [ 99999.8828],\n        [100000.0625],\n        [100000.0625],\n        [100000.1875],\n        [ 99999.8984],\n        [ 99999.9453],\n        [100000.0000]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962636.2996733}]}, "version": 246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.308081}]}, "version": 247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962636.3115122}]}, "version": 248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.3121953}]}, "version": 249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962636.3135993}]}, "version": 250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.314583}]}, "version": 251}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962636.3156486}]}, "version": 252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.3162482}]}, "version": 253}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -16417.4296875, "step": null, "ts": 1644962636.3170826}]}, "version": 254}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.198784738779068, "step": null, "ts": 1644962636.4166498}]}, "version": 255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0625],\n        [100000.0547],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0078],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962636.4265716}]}, "version": 256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.4300559}]}, "version": 257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962636.4424179}]}, "version": 258}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.4458365}]}, "version": 259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962636.446974}]}, "version": 260}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.4475648}]}, "version": 261}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962636.4484518}]}, "version": 262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.4491184}]}, "version": 263}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962636.4500208}]}, "version": 264}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8735696077346802, "step": null, "ts": 1644962636.8766947}]}, "version": 265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.5547],\n        [ 99999.8516],\n        [100000.1016],\n        [ 99999.9375],\n        [100003.1016],\n        [100000.0234],\n        [ 99999.6328],\n        [ 99999.9766],\n        [100000.0391],\n        [100000.4453],\n        [100000.3438],\n        [ 99999.8672],\n        [100000.3828],\n        [ 99944.9141],\n        [100000.0391],\n        [ 99999.9219],\n        [ 99999.9688],\n        [100000.0781],\n        [100000.1953],\n        [ 99998.8516],\n        [100000.0547],\n        [100000.1406],\n        [100734.3828],\n        [ 99999.2578],\n        [100000.4844],\n        [100000.0625],\n        [100000.7109],\n        [100000.0234],\n        [100000.2422],\n        [ 99999.8750],\n        [ 99999.6719],\n        [100000.5781],\n        [ 99999.8594],\n        [ 99998.0859],\n        [100000.2031],\n        [ 99998.9297],\n        [ 99999.2812],\n        [100000.4062],\n        [ 99999.9922],\n        [ 99999.7500],\n        [ 99999.2266],\n        [100000.1953]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962636.8931823}]}, "version": 266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.9030082}]}, "version": 267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962636.9063745}]}, "version": 268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.9074614}]}, "version": 269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000.0234, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962636.9087968}]}, "version": 270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.9097319}]}, "version": 271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(99999.9766, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962636.911223}]}, "version": 272}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962636.912201}]}, "version": 273}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -13769.5556640625, "step": null, "ts": 1644962636.9133754}]}, "version": 274}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29908081889152527, "step": null, "ts": 1644962637.004481}]}, "version": 275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0156],\n        [100000.0156],\n        [100000.0078],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0547],\n        [100000.0625],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962637.0162132}]}, "version": 276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.0219646}]}, "version": 277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962637.0279481}]}, "version": 278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.0365336}]}, "version": 279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962637.0379047}]}, "version": 280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.0384881}]}, "version": 281}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962637.0393934}]}, "version": 282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.0401616}]}, "version": 283}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962637.04123}]}, "version": 284}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8777306079864502, "step": null, "ts": 1644962637.4702578}]}, "version": 285}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8438],\n        [100000.9766],\n        [100000.2422],\n        [ 99999.5703],\n        [ 99999.7500],\n        [ 99999.9375],\n        [ 99999.7891],\n        [100000.3047],\n        [100000.0156],\n        [100000.1406],\n        [100000.5938],\n        [100000.2031],\n        [100000.3359],\n        [ 99997.0938],\n        [100000.2578],\n        [100000.3125],\n        [100000.0859],\n        [100000.8594],\n        [ 99998.5703],\n        [100000.0234],\n        [ 99999.6953],\n        [100000.2344],\n        [ 99999.0000],\n        [100000.0078],\n        [100000.3359],\n        [100000.0156],\n        [ 99999.8984],\n        [100000.4453],\n        [ 99992.5938],\n        [ 99999.9766],\n        [ 99999.9453],\n        [100000.2344],\n        [100000.4766],\n        [ 99999.9062],\n        [100000.1016],\n        [ 99999.6641],\n        [100000.1094],\n        [ 99999.9688],\n        [100000.1484],\n        [100001.1484],\n        [ 99999.9609],\n        [100000.0781]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962637.4859114}]}, "version": 286}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.486987}]}, "version": 287}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962637.4902313}]}, "version": 288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.4911692}]}, "version": 289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962637.4925652}]}, "version": 290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.4935448}]}, "version": 291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962637.494747}]}, "version": 292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.4956303}]}, "version": 293}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -12088.5703125, "step": null, "ts": 1644962637.4966118}]}, "version": 294}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38284674286842346, "step": null, "ts": 1644962637.5840375}]}, "version": 295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0781],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0078],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0781]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962637.5928366}]}, "version": 296}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.6046262}]}, "version": 297}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962637.6105616}]}, "version": 298}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.6141307}]}, "version": 299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962637.6154969}]}, "version": 300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.6163523}]}, "version": 301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962637.617425}]}, "version": 302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.618202}]}, "version": 303}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962637.6192012}]}, "version": 304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.573 (0.573)\tDT 0.000 (0.000)\tS@1 90.476 (90.476)\tLoss nan (nan)", "step": null, "ts": 1644962637.8620598}]}, "version": 305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962637.8631744}]}, "version": 306}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1661701202392578, "step": null, "ts": 1644962638.0494087}]}, "version": 307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8750],\n        [100000.0078],\n        [ 99999.8984],\n        [ 99999.7812],\n        [100000.9922],\n        [100000.1484],\n        [100000.6406],\n        [100000.1719],\n        [ 99999.8828],\n        [100000.3750],\n        [ 99999.8672],\n        [100000.1875],\n        [100000.1172],\n        [ 99999.9922],\n        [ 99999.9766],\n        [ 99999.9062],\n        [ 99999.9453],\n        [ 99999.9688],\n        [ 99999.2656],\n        [100000.0625],\n        [100000.1328],\n        [ 99999.8438],\n        [100000.1406],\n        [100000.0547],\n        [ 99999.1641],\n        [ 99999.9062],\n        [ 99999.9062],\n        [ 99999.6016],\n        [100000.5391],\n        [100000.1719],\n        [ 99999.7109],\n        [100000.0703],\n        [ 99999.9062],\n        [100000.0312],\n        [ 99999.9375],\n        [ 99999.8203],\n        [ 99999.9531],\n        [100000.2891],\n        [100000.2891],\n        [100000.1484],\n        [100000.2344],\n        [ 99999.6719]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962638.0594687}]}, "version": 308}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.0642905}]}, "version": 309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962638.0674953}]}, "version": 310}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.0738292}]}, "version": 311}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962638.0749755}]}, "version": 312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.0755394}]}, "version": 313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962638.0765269}]}, "version": 314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.0771096}]}, "version": 315}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -1289.44775390625, "step": null, "ts": 1644962638.0781927}]}, "version": 316}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1851971596479416, "step": null, "ts": 1644962638.1673937}]}, "version": 317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0625],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962638.1766617}]}, "version": 318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.184412}]}, "version": 319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962638.1904058}]}, "version": 320}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.1964543}]}, "version": 321}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962638.1978562}]}, "version": 322}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.1987107}]}, "version": 323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962638.1998067}]}, "version": 324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.2004485}]}, "version": 325}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962638.2014303}]}, "version": 326}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7115513682365417, "step": null, "ts": 1644962638.654468}]}, "version": 327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.4688],\n        [100000.3203],\n        [ 99999.6094],\n        [100000.3359],\n        [100000.0625],\n        [ 99999.2656],\n        [100000.4219],\n        [100000.2578],\n        [ 99999.9922],\n        [100003.6250],\n        [100000.0000],\n        [ 99999.9688],\n        [ 99999.7422],\n        [100000.2812],\n        [ 99999.8203],\n        [100000.2344],\n        [100000.1641],\n        [100000.0938],\n        [ 99999.8438],\n        [ 99999.5625],\n        [ 99999.6016],\n        [100000.0625],\n        [ 99999.8984],\n        [ 99999.6953],\n        [100000.3047],\n        [100000.0547],\n        [ 99999.9688],\n        [ 99999.5312],\n        [100000.1719],\n        [100000.7891],\n        [100000.6016],\n        [100000.0234],\n        [100000.3594],\n        [ 99999.3906],\n        [ 99999.6719],\n        [100000.2031],\n        [100000.2969],\n        [ 99994.5469],\n        [100000.0156],\n        [100000.6875],\n        [100000.1094],\n        [100000.3359]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962638.66545}]}, "version": 328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.6727114}]}, "version": 329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962638.6758683}]}, "version": 330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.6767993}]}, "version": 331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962638.6782172}]}, "version": 332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.6792483}]}, "version": 333}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962638.6804185}]}, "version": 334}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.6811755}]}, "version": 335}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9832.0390625, "step": null, "ts": 1644962638.6822274}]}, "version": 336}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.26593175530433655, "step": null, "ts": 1644962638.7759168}]}, "version": 337}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962638.7859373}]}, "version": 338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.7948472}]}, "version": 339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962638.7983036}]}, "version": 340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.8012154}]}, "version": 341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962638.8022978}]}, "version": 342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.8033075}]}, "version": 343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962638.8044345}]}, "version": 344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962638.805208}]}, "version": 345}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962638.8062744}]}, "version": 346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962639.0137093}]}, "version": 347}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6423642635345459, "step": null, "ts": 1644962639.2774224}]}, "version": 348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8281],\n        [ 99999.9688],\n        [ 99999.4688],\n        [100000.0078],\n        [100000.1562],\n        [ 99999.0703],\n        [ 99998.4062],\n        [ 99999.5469],\n        [ 99999.9375],\n        [100000.1641],\n        [ 99999.2891],\n        [ 99999.7578],\n        [ 99999.5078],\n        [100000.1562],\n        [100000.1016],\n        [100000.1562],\n        [ 99999.6250],\n        [100000.6484],\n        [ 99998.8281],\n        [ 99981.1797],\n        [ 99999.9453],\n        [100000.4688],\n        [100000.1641],\n        [100000.1719],\n        [ 99999.8906],\n        [100000.0703],\n        [100000.3047],\n        [100000.3906],\n        [ 99999.8750],\n        [100000.7969],\n        [ 99999.9844],\n        [100000.1328],\n        [ 99992.1719],\n        [100000.2891],\n        [100000.7422],\n        [ 99989.4375],\n        [100000.2109],\n        [ 99998.9688],\n        [ 99999.5938],\n        [ 99999.8359],\n        [ 99999.9297],\n        [100000.1797]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962639.2847385}]}, "version": 349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.291606}]}, "version": 350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962639.2947881}]}, "version": 351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.2958705}]}, "version": 352}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962639.2973838}]}, "version": 353}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.2984364}]}, "version": 354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962639.2996795}]}, "version": 355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.3008285}]}, "version": 356}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -11628.05078125, "step": null, "ts": 1644962639.3019638}]}, "version": 357}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2825162708759308, "step": null, "ts": 1644962639.3859808}]}, "version": 358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0625],\n        [100000.1016],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0781],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0703],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962639.3993216}]}, "version": 359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.4138005}]}, "version": 360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962639.4199214}]}, "version": 361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.4233577}]}, "version": 362}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962639.424482}]}, "version": 363}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.4254868}]}, "version": 364}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962639.4266295}]}, "version": 365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.4276533}]}, "version": 366}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962639.4286876}]}, "version": 367}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8185580968856812, "step": null, "ts": 1644962639.8986828}]}, "version": 368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9688],\n        [ 99998.8125],\n        [ 99999.7734],\n        [ 99999.6250],\n        [100000.3125],\n        [ 99999.7734],\n        [100000.1172],\n        [100000.5703],\n        [100000.4922],\n        [100000.0156],\n        [100000.1562],\n        [100000.3984],\n        [100000.2969],\n        [ 99999.8984],\n        [ 99999.7266],\n        [ 99999.9766],\n        [ 99999.1250],\n        [ 99999.8828],\n        [ 99999.8672],\n        [100000.0391],\n        [100000.0391],\n        [100000.5391],\n        [100000.1797],\n        [100000.8984],\n        [100000.1484],\n        [100000.3125],\n        [ 99999.1562],\n        [100000.6953],\n        [100000.0000],\n        [100000.1641],\n        [ 99999.7109],\n        [ 99999.6797],\n        [100000.2031],\n        [100000.0000],\n        [ 99999.5000],\n        [100000.3281],\n        [ 99999.4531],\n        [100000.2188],\n        [100000.2109],\n        [100000.0625],\n        [ 99999.9141],\n        [100000.2266]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962639.921371}]}, "version": 369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.9224586}]}, "version": 370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962639.925911}]}, "version": 371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.930981}]}, "version": 372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962639.9324532}]}, "version": 373}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.933606}]}, "version": 374}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962639.9350019}]}, "version": 375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962639.9360456}]}, "version": 376}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -15012.8544921875, "step": null, "ts": 1644962639.9374485}]}, "version": 377}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2794090211391449, "step": null, "ts": 1644962640.0216868}]}, "version": 378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.1016],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962640.0420456}]}, "version": 379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.0500968}]}, "version": 380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962640.056214}]}, "version": 381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.0598044}]}, "version": 382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962640.061033}]}, "version": 383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.0619502}]}, "version": 384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962640.0630875}]}, "version": 385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.063817}]}, "version": 386}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962640.0648768}]}, "version": 387}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8446803689002991, "step": null, "ts": 1644962640.52033}]}, "version": 388}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.9766],\n        [ 99999.8281],\n        [100000.2734],\n        [ 99999.9766],\n        [ 99999.8438],\n        [ 99999.8672],\n        [ 99999.7031],\n        [100000.3828],\n        [ 99999.7891],\n        [ 99999.4922],\n        [ 99999.6797],\n        [ 99999.7891],\n        [ 99999.7031],\n        [100000.1094],\n        [ 99999.7812],\n        [ 99999.8203],\n        [100000.2344],\n        [100000.3594],\n        [ 99999.9766],\n        [100000.0078],\n        [ 99999.1562],\n        [ 99996.2109],\n        [100001.1328],\n        [100000.1328],\n        [ 99999.9453],\n        [100000.0781],\n        [ 99999.8984],\n        [ 99998.8906],\n        [ 99999.5938],\n        [ 99999.6172],\n        [ 99999.2109],\n        [100000.0469],\n        [100000.1484],\n        [ 99999.7109],\n        [100000.1094],\n        [100000.2656],\n        [100000.1875],\n        [ 99999.7188],\n        [ 99999.0625],\n        [ 99999.6250],\n        [100000.3516],\n        [100000.1172]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962640.5288692}]}, "version": 389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.5298862}]}, "version": 390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962640.533298}]}, "version": 391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.536864}]}, "version": 392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962640.538287}]}, "version": 393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.5393815}]}, "version": 394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962640.5407574}]}, "version": 395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.5416946}]}, "version": 396}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -7943.91796875, "step": null, "ts": 1644962640.5430102}]}, "version": 397}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1883794516324997, "step": null, "ts": 1644962640.630974}]}, "version": 398}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0859],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0625],\n        [100000.0312],\n        [100000.0078],\n        [100000.0938],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962640.6422641}]}, "version": 399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.6506703}]}, "version": 400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962640.6566353}]}, "version": 401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.6600482}]}, "version": 402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962640.6614656}]}, "version": 403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.6624265}]}, "version": 404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962640.6636713}]}, "version": 405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962640.6646743}]}, "version": 406}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962640.6656375}]}, "version": 407}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7663541436195374, "step": null, "ts": 1644962641.105833}]}, "version": 408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.3984],\n        [ 99999.8906],\n        [ 99999.7422],\n        [ 99999.8594],\n        [ 99999.9688],\n        [100000.0938],\n        [ 99998.0391],\n        [ 99999.8750],\n        [ 99999.4453],\n        [ 99999.8984],\n        [100000.0000],\n        [ 99999.9609],\n        [100000.9062],\n        [ 99999.6016],\n        [ 99999.6719],\n        [ 99999.6016],\n        [100000.3359],\n        [ 99999.8047],\n        [100000.2422],\n        [100000.6172],\n        [ 99999.8359],\n        [ 99999.9531],\n        [ 99999.9609],\n        [ 99999.8672],\n        [100000.2578],\n        [ 99999.4297],\n        [100000.0234],\n        [ 99999.4219],\n        [ 99999.9922],\n        [ 99999.8047],\n        [ 99999.7812],\n        [100008.4531],\n        [100000.1250],\n        [100000.3047],\n        [ 99999.8438],\n        [100000.1953],\n        [ 99999.8750],\n        [100001.1328],\n        [100000.1172],\n        [ 99999.1172],\n        [ 99998.0312],\n        [ 99999.8750]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962641.1184921}]}, "version": 409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.1290827}]}, "version": 410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962641.1325696}]}, "version": 411}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.1334639}]}, "version": 412}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962641.1345518}]}, "version": 413}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.1353033}]}, "version": 414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962641.1364028}]}, "version": 415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.137146}]}, "version": 416}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -322.3619384765625, "step": null, "ts": 1644962641.1383188}]}, "version": 417}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2777023911476135, "step": null, "ts": 1644962641.2276642}]}, "version": 418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962641.2398026}]}, "version": 419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.2464266}]}, "version": 420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962641.2506473}]}, "version": 421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.2546544}]}, "version": 422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962641.2559588}]}, "version": 423}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.2569714}]}, "version": 424}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962641.2585146}]}, "version": 425}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.259731}]}, "version": 426}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962641.2616014}]}, "version": 427}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5561953783035278, "step": null, "ts": 1644962641.7159433}]}, "version": 428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100008.2344],\n        [ 99998.4062],\n        [100000.0938],\n        [ 99999.7734],\n        [ 99999.9297],\n        [100000.1250],\n        [100000.8438],\n        [ 99997.9141],\n        [100000.4531],\n        [100000.1562],\n        [100000.0312],\n        [100000.1562],\n        [100000.1875],\n        [ 99999.9219],\n        [100000.0938],\n        [ 99998.4375],\n        [ 99999.9922],\n        [ 99999.9375],\n        [ 99999.9922],\n        [ 99999.9141],\n        [100000.5156],\n        [ 99999.0938],\n        [100000.3359],\n        [ 99999.8984],\n        [100000.1016],\n        [100000.0703],\n        [ 99999.7891],\n        [100000.4375],\n        [100003.2266],\n        [100013.3828],\n        [100000.2188],\n        [ 99999.9609],\n        [ 99999.7891],\n        [ 99999.0781],\n        [100000.1484],\n        [100000.3516],\n        [100000.3125],\n        [100000.0234],\n        [ 99999.0859],\n        [100000.1562],\n        [ 99999.9297],\n        [ 99999.9375]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962641.7196019}]}, "version": 429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.7206738}]}, "version": 430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962641.724153}]}, "version": 431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.7252436}]}, "version": 432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962641.726749}]}, "version": 433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.7278492}]}, "version": 434}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962641.7292166}]}, "version": 435}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.7301326}]}, "version": 436}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2878.23193359375, "step": null, "ts": 1644962641.7314904}]}, "version": 437}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2969922125339508, "step": null, "ts": 1644962641.8273196}]}, "version": 438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0469],\n        [100000.0625],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0703],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962641.836077}]}, "version": 439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.8422277}]}, "version": 440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962641.8481421}]}, "version": 441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.8543322}]}, "version": 442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962641.8554327}]}, "version": 443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.8560405}]}, "version": 444}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962641.8570924}]}, "version": 445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962641.8576393}]}, "version": 446}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962641.8584838}]}, "version": 447}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7657560110092163, "step": null, "ts": 1644962642.5768824}]}, "version": 448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99998.9844],\n        [100000.0156],\n        [100000.1953],\n        [ 99999.8594],\n        [100000.0781],\n        [100002.9219],\n        [ 99999.8906],\n        [100000.1172],\n        [100000.0391],\n        [100000.1875],\n        [100000.2109],\n        [100000.3438],\n        [ 99993.3281],\n        [100000.4531],\n        [ 99999.9609],\n        [ 99999.9688],\n        [ 99981.3359],\n        [ 99999.9375],\n        [100000.1875],\n        [ 99999.0234],\n        [ 99999.9609],\n        [100000.1406],\n        [ 99998.6250],\n        [ 99999.6953],\n        [100000.1172],\n        [ 99999.8984],\n        [100000.3750],\n        [100000.0312],\n        [100000.6406],\n        [ 99998.9766],\n        [ 99999.8672],\n        [ 99999.9844],\n        [ 99999.8828],\n        [ 99999.8984],\n        [ 99999.8125],\n        [ 99999.9453],\n        [ 99999.7578],\n        [ 99999.7812],\n        [ 99999.6484],\n        [ 99999.5156],\n        [100000.1719],\n        [100000.5859]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962642.5870779}]}, "version": 449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.5929735}]}, "version": 450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962642.596568}]}, "version": 451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.5976202}]}, "version": 452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962642.598874}]}, "version": 453}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.599824}]}, "version": 454}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962642.601145}]}, "version": 455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.6021445}]}, "version": 456}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -6124.875, "step": null, "ts": 1644962642.6036198}]}, "version": 457}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3938591480255127, "step": null, "ts": 1644962642.6916177}]}, "version": 458}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962642.7137926}]}, "version": 459}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.7177117}]}, "version": 460}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962642.7236674}]}, "version": 461}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.7318168}]}, "version": 462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962642.7332826}]}, "version": 463}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.7342348}]}, "version": 464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962642.7357183}]}, "version": 465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962642.7367487}]}, "version": 466}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962642.7377486}]}, "version": 467}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6978301405906677, "step": null, "ts": 1644962643.1625938}]}, "version": 468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9609],\n        [100000.0234],\n        [100017.9688],\n        [ 99999.9375],\n        [100000.9219],\n        [ 99998.4375],\n        [ 99999.9609],\n        [100000.3516],\n        [100000.1719],\n        [100000.1328],\n        [ 99999.8516],\n        [100000.1641],\n        [100000.0000],\n        [100000.1797],\n        [100000.0547],\n        [ 99999.9766],\n        [100000.5703],\n        [100000.0078],\n        [100000.6172],\n        [100000.8828],\n        [100000.0234],\n        [100000.0234],\n        [100000.2266],\n        [100000.1562],\n        [ 99999.9531],\n        [100000.1953],\n        [ 99999.9688],\n        [100000.2031],\n        [ 99999.9062],\n        [100000.2344],\n        [ 99999.9297],\n        [ 99999.0469],\n        [100000.0000],\n        [ 99999.9297],\n        [ 99998.7656],\n        [ 99999.5078],\n        [100000.9922],\n        [100000.1328],\n        [100000.6016],\n        [100001.1328],\n        [100011.2734],\n        [ 99999.8203]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962643.1716824}]}, "version": 469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.179638}]}, "version": 470}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962643.183254}]}, "version": 471}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.184189}]}, "version": 472}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962643.1856809}]}, "version": 473}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.1867225}]}, "version": 474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962643.1879516}]}, "version": 475}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.1888435}]}, "version": 476}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -3638.085693359375, "step": null, "ts": 1644962643.189931}]}, "version": 477}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4222899377346039, "step": null, "ts": 1644962643.2823198}]}, "version": 478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0469],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0625],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962643.2929742}]}, "version": 479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.2964122}]}, "version": 480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962643.302426}]}, "version": 481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.3106346}]}, "version": 482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962643.3121219}]}, "version": 483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.313073}]}, "version": 484}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962643.3146365}]}, "version": 485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.315574}]}, "version": 486}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962643.3165765}]}, "version": 487}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8129495978355408, "step": null, "ts": 1644962643.7463427}]}, "version": 488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.1328],\n        [100000.5859],\n        [100000.2344],\n        [ 99999.8672],\n        [100000.1094],\n        [100000.0156],\n        [ 99999.2812],\n        [100000.6016],\n        [ 99999.9844],\n        [ 99999.9688],\n        [ 99999.8516],\n        [ 99999.8828],\n        [ 99999.9297],\n        [100001.1797],\n        [100000.5234],\n        [100000.3672],\n        [ 99999.9375],\n        [ 99987.3672],\n        [ 99999.7891],\n        [100000.2188],\n        [ 99999.9219],\n        [100000.0938],\n        [ 99999.8359],\n        [ 99999.9375],\n        [100000.1250],\n        [ 99998.5547],\n        [ 99999.9453],\n        [100000.0469],\n        [100000.0781],\n        [ 99999.4922],\n        [ 99999.9922],\n        [ 99999.5938],\n        [100001.6328],\n        [ 99999.9297],\n        [100000.2500],\n        [100000.3438],\n        [100000.6797],\n        [ 99998.8125],\n        [ 99999.7578],\n        [100000.2969],\n        [100000.7188],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962643.7601163}]}, "version": 489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.77153}]}, "version": 490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962643.7786276}]}, "version": 491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.7805545}]}, "version": 492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962643.7817392}]}, "version": 493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.7822802}]}, "version": 494}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962643.783371}]}, "version": 495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.7841291}]}, "version": 496}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -7045.90966796875, "step": null, "ts": 1644962643.7854548}]}, "version": 497}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21753370761871338, "step": null, "ts": 1644962643.8751493}]}, "version": 498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0781],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0781],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0625],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962643.8840384}]}, "version": 499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.887559}]}, "version": 500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962643.8970706}]}, "version": 501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.9003527}]}, "version": 502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962643.9016747}]}, "version": 503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.9026802}]}, "version": 504}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962643.903745}]}, "version": 505}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962643.9046621}]}, "version": 506}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962643.9057276}]}, "version": 507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.585 (0.585)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss nan (nan)", "step": null, "ts": 1644962644.1475813}]}, "version": 508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.1486714}]}, "version": 509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962644.3139956}]}, "version": 510}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0312995910644531, "step": null, "ts": 1644962644.3830976}]}, "version": 511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8594],\n        [ 99999.8516],\n        [ 99999.5156],\n        [ 99999.9219],\n        [100000.0938],\n        [100000.4062],\n        [ 99999.9844],\n        [100000.6562],\n        [ 99999.9062],\n        [ 99999.2578],\n        [100000.0156],\n        [100000.0391],\n        [100000.5625],\n        [100000.3359],\n        [100000.1016],\n        [ 99999.3203],\n        [ 99985.9531],\n        [100000.0781],\n        [ 99997.1094],\n        [ 99999.8516],\n        [ 99999.7031],\n        [ 99999.8438],\n        [100000.0547],\n        [ 99999.9922],\n        [ 99999.7422],\n        [ 99999.7109],\n        [ 99999.7031],\n        [ 99999.9766],\n        [100000.7266],\n        [100000.2656],\n        [ 99999.4531],\n        [100000.1641],\n        [100000.0078],\n        [ 99999.8359],\n        [100000.3281],\n        [ 99996.1328],\n        [100000.4141],\n        [ 99999.9609],\n        [ 99999.3594],\n        [100001.4141],\n        [ 99999.7969],\n        [ 99999.8750]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962644.3929188}]}, "version": 512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.3935497}]}, "version": 513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962644.3967175}]}, "version": 514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.403028}]}, "version": 515}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962644.4043949}]}, "version": 516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.4051254}]}, "version": 517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962644.4062655}]}, "version": 518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.4068432}]}, "version": 519}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -1243.395751953125, "step": null, "ts": 1644962644.4078856}]}, "version": 520}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5515048503875732, "step": null, "ts": 1644962644.4916344}]}, "version": 521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0703],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0625],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962644.5101655}]}, "version": 522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.5195487}]}, "version": 523}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962644.5256505}]}, "version": 524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.528941}]}, "version": 525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962644.5301125}]}, "version": 526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.5309582}]}, "version": 527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962644.53236}]}, "version": 528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962644.533262}]}, "version": 529}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962644.5345573}]}, "version": 530}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.9, "step": null, "ts": 1644962644.9465303}]}, "version": 531}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.046352386474609, "step": null, "ts": 1644962644.9465303}]}, "version": 532}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 77.0, "step": null, "ts": 1644962644.9465303}]}, "version": 533}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962644.9465303}]}, "version": 534}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5437223315238953, "step": null, "ts": 1644962644.9893825}]}, "version": 535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100001.8516],\n        [100000.2031],\n        [100000.5859],\n        [100000.2344],\n        [100000.1562],\n        [100001.7109],\n        [ 99999.9766],\n        [ 99999.3516],\n        [100000.5938],\n        [ 99999.3047],\n        [100002.0469],\n        [100000.1953],\n        [100000.1797],\n        [ 99999.9062],\n        [100000.0703],\n        [100000.2500],\n        [ 99999.8828],\n        [100000.8359],\n        [100000.1875],\n        [100000.7344],\n        [ 99999.9844],\n        [ 99999.9844],\n        [100000.0625],\n        [ 99999.9609],\n        [ 99999.9844],\n        [ 99996.8047],\n        [ 99999.6484],\n        [100000.1562],\n        [ 99999.3359],\n        [100000.8125],\n        [ 99999.9297],\n        [ 99999.7812],\n        [100003.3906],\n        [100000.0781],\n        [ 99964.4062],\n        [ 99999.7109],\n        [100000.5703],\n        [100002.9609],\n        [ 99999.9219],\n        [ 99999.9844],\n        [ 99999.9609],\n        [100000.1094]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962645.0039864}]}, "version": 536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.0112786}]}, "version": 537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962645.014408}]}, "version": 538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.015306}]}, "version": 539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962645.0164669}]}, "version": 540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.0170827}]}, "version": 541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962645.0181618}]}, "version": 542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.0188468}]}, "version": 543}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -299.33599853515625, "step": null, "ts": 1644962645.0196798}]}, "version": 544}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25448527932167053, "step": null, "ts": 1644962645.1067383}]}, "version": 545}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0234],\n        [100000.0703],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0781],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962645.1250381}]}, "version": 546}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.1286871}]}, "version": 547}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962645.1345274}]}, "version": 548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.1428268}]}, "version": 549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962645.1442366}]}, "version": 550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.1452935}]}, "version": 551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962645.1465247}]}, "version": 552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.1472757}]}, "version": 553}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962645.1482663}]}, "version": 554}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9740424752235413, "step": null, "ts": 1644962645.5993032}]}, "version": 555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9688],\n        [ 99999.9219],\n        [100000.2500],\n        [ 99999.8750],\n        [ 99999.8750],\n        [ 99999.8125],\n        [ 99999.9844],\n        [ 99999.9531],\n        [ 99999.8594],\n        [ 99999.8828],\n        [ 99999.7422],\n        [100000.3906],\n        [ 99999.9609],\n        [ 99999.8984],\n        [100000.2266],\n        [ 99999.7969],\n        [100000.1562],\n        [100000.6484],\n        [100000.3750],\n        [ 99999.9453],\n        [100000.0078],\n        [100000.0156],\n        [ 99999.9766],\n        [100013.4531],\n        [100005.4688],\n        [ 99999.2734],\n        [100000.2734],\n        [ 99999.6484],\n        [100000.8281],\n        [ 99999.9297],\n        [100000.0625],\n        [100001.7891],\n        [ 99999.1094],\n        [100000.2891],\n        [100003.9375],\n        [100002.8438],\n        [100000.1406],\n        [100000.4141],\n        [100000.2500],\n        [100000.2500],\n        [ 99999.7812],\n        [ 99999.9609]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962645.6146455}]}, "version": 556}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.6156375}]}, "version": 557}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962645.6190505}]}, "version": 558}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.6201515}]}, "version": 559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962645.6214814}]}, "version": 560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.6224134}]}, "version": 561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962645.623625}]}, "version": 562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.6245387}]}, "version": 563}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -8887.98046875, "step": null, "ts": 1644962645.6254697}]}, "version": 564}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.30886325240135193, "step": null, "ts": 1644962645.7248695}]}, "version": 565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0547],\n        [100000.0625],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962645.7351184}]}, "version": 566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.7438185}]}, "version": 567}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962645.7526498}]}, "version": 568}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.7535894}]}, "version": 569}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962645.754748}]}, "version": 570}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.7556336}]}, "version": 571}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962645.756916}]}, "version": 572}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962645.7578514}]}, "version": 573}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962645.758999}]}, "version": 574}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8365302681922913, "step": null, "ts": 1644962646.2146285}]}, "version": 575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [ 99999.0781],\n        [100000.1562],\n        [ 99997.1641],\n        [100000.3906],\n        [100000.1875],\n        [100000.2344],\n        [100000.3125],\n        [100000.1094],\n        [100000.0547],\n        [ 99999.6328],\n        [ 99999.8359],\n        [100000.3203],\n        [ 99994.2656],\n        [100000.1172],\n        [ 99999.6328],\n        [100000.1719],\n        [ 99999.8203],\n        [ 99999.9609],\n        [100008.5547],\n        [100001.3203],\n        [ 99999.9297],\n        [ 99999.7891],\n        [100000.0391],\n        [ 99999.4062],\n        [100000.3750],\n        [100000.3828],\n        [100000.1406],\n        [100001.1875],\n        [ 99999.9609],\n        [ 99999.6328],\n        [ 99999.8125],\n        [ 99999.6641],\n        [ 99999.8203],\n        [100131.8750],\n        [ 99999.0938],\n        [ 99999.9453],\n        [ 99998.9062],\n        [100000.0312],\n        [ 99999.9609],\n        [ 99999.6328],\n        [ 99999.9141]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962646.2317858}]}, "version": 576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.2372591}]}, "version": 577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962646.240465}]}, "version": 578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.246772}]}, "version": 579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962646.2479126}]}, "version": 580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.2489095}]}, "version": 581}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962646.250239}]}, "version": 582}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.2512312}]}, "version": 583}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -1611.811767578125, "step": null, "ts": 1644962646.2525055}]}, "version": 584}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5077725648880005, "step": null, "ts": 1644962646.3367875}]}, "version": 585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0703],\n        [100000.0625],\n        [100000.0547],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0078],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962646.3520014}]}, "version": 586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.3608148}]}, "version": 587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962646.3669107}]}, "version": 588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.3705077}]}, "version": 589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962646.371627}]}, "version": 590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.3725586}]}, "version": 591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962646.37374}]}, "version": 592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.3746216}]}, "version": 593}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962646.3756166}]}, "version": 594}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.818547785282135, "step": null, "ts": 1644962646.8303328}]}, "version": 595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9297],\n        [ 99999.9375],\n        [ 99999.9531],\n        [100000.2266],\n        [ 99999.7188],\n        [100002.5938],\n        [ 99999.0547],\n        [100000.0547],\n        [ 99999.7578],\n        [ 99999.1094],\n        [100000.2188],\n        [ 99999.9453],\n        [ 99998.8750],\n        [ 99999.5859],\n        [ 99999.6719],\n        [ 99999.7969],\n        [100000.0547],\n        [100000.1484],\n        [ 99999.7031],\n        [100000.3125],\n        [100000.3438],\n        [100000.0000],\n        [100001.1016],\n        [ 99998.4375],\n        [100000.1250],\n        [ 99999.9297],\n        [100000.0547],\n        [100000.0859],\n        [100000.4766],\n        [100000.6328],\n        [ 99999.7344],\n        [ 99997.3438],\n        [ 99999.1250],\n        [100000.1328],\n        [100000.4141],\n        [ 99856.3594],\n        [100084.3125],\n        [100000.3359],\n        [100000.6250],\n        [100000.5625],\n        [100000.0312],\n        [100004.8359]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962646.8400037}]}, "version": 596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.8479626}]}, "version": 597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962646.851421}]}, "version": 598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.852437}]}, "version": 599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962646.8536084}]}, "version": 600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.854493}]}, "version": 601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962646.8558218}]}, "version": 602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.8566391}]}, "version": 603}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -16463.47265625, "step": null, "ts": 1644962646.857885}]}, "version": 604}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2757737934589386, "step": null, "ts": 1644962646.9415505}]}, "version": 605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0547],\n        [100000.0391],\n        [100000.0703],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962646.9666526}]}, "version": 606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.9766638}]}, "version": 607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962646.9825509}]}, "version": 608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.983561}]}, "version": 609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962646.984704}]}, "version": 610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.9854474}]}, "version": 611}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962646.9867442}]}, "version": 612}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962646.9876306}]}, "version": 613}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962646.9885905}]}, "version": 614}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117434144020081, "step": null, "ts": 1644962647.4350548}]}, "version": 615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.2578],\n        [ 99999.9453],\n        [ 99999.7812],\n        [100000.3906],\n        [100000.2500],\n        [ 99999.8359],\n        [100000.0938],\n        [100007.7344],\n        [ 99999.7266],\n        [ 99988.4531],\n        [100001.8594],\n        [100000.7188],\n        [100000.0781],\n        [100000.2891],\n        [ 99999.9844],\n        [ 99999.9297],\n        [ 99999.5156],\n        [ 99952.5859],\n        [ 99999.7969],\n        [ 99999.9766],\n        [ 99995.2812],\n        [100003.4531],\n        [100000.2969],\n        [ 99999.9609],\n        [ 99999.9141],\n        [100000.1328],\n        [100000.0938],\n        [ 99999.9062],\n        [ 99997.6484],\n        [100000.2188],\n        [ 99999.9922],\n        [100000.5625],\n        [100000.0547],\n        [ 99999.9375],\n        [ 99999.6172],\n        [100000.5703],\n        [ 99999.8828],\n        [100000.4297],\n        [100000.1719],\n        [100000.0391],\n        [100000.1953],\n        [100000.3516]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962647.4436207}]}, "version": 616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.4447982}]}, "version": 617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962647.4483328}]}, "version": 618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.4538257}]}, "version": 619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962647.4553044}]}, "version": 620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.4561887}]}, "version": 621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962647.4575527}]}, "version": 622}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.458477}]}, "version": 623}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -14989.8203125, "step": null, "ts": 1644962647.4594922}]}, "version": 624}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3120548725128174, "step": null, "ts": 1644962647.5565128}]}, "version": 625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0078],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0781],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962647.562603}]}, "version": 626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.5718207}]}, "version": 627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962647.577881}]}, "version": 628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.5813053}]}, "version": 629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962647.5823832}]}, "version": 630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.5832112}]}, "version": 631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962647.5845885}]}, "version": 632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962647.585533}]}, "version": 633}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962647.5865047}]}, "version": 634}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7969096899032593, "step": null, "ts": 1644962648.0560222}]}, "version": 635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99995.0078],\n        [ 99999.8750],\n        [100000.2734],\n        [100000.3828],\n        [100000.0156],\n        [100000.0078],\n        [ 99999.9375],\n        [ 99997.2812],\n        [100000.8125],\n        [100000.1797],\n        [100000.0000],\n        [100000.8203],\n        [100000.1094],\n        [100000.2578],\n        [100000.0156],\n        [ 99999.9922],\n        [ 99999.6797],\n        [ 99999.8984],\n        [100000.0156],\n        [100000.1094],\n        [ 99999.7031],\n        [ 99999.6250],\n        [ 99997.5469],\n        [100000.3672],\n        [ 99998.8516],\n        [100000.0156],\n        [100000.1016],\n        [ 99999.2734],\n        [100000.1719],\n        [100001.3516],\n        [100000.4766],\n        [100000.0078],\n        [100001.5078],\n        [100000.0938],\n        [100000.2656],\n        [ 99999.9531],\n        [100000.0391],\n        [100000.5703],\n        [100000.0625],\n        [100000.6484],\n        [100000.3516],\n        [ 99996.8984]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962648.0653374}]}, "version": 636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.066188}]}, "version": 637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962648.0696073}]}, "version": 638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.0757387}]}, "version": 639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962648.0768464}]}, "version": 640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.0776675}]}, "version": 641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962648.078808}]}, "version": 642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.0796278}]}, "version": 643}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -621.6979370117188, "step": null, "ts": 1644962648.0806365}]}, "version": 644}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3860815763473511, "step": null, "ts": 1644962648.167663}]}, "version": 645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962648.1921074}]}, "version": 646}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.1955469}]}, "version": 647}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962648.2014227}]}, "version": 648}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.203247}]}, "version": 649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962648.2043364}]}, "version": 650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.205272}]}, "version": 651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962648.2064338}]}, "version": 652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.2128158}]}, "version": 653}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962648.2140052}]}, "version": 654}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6743414402008057, "step": null, "ts": 1644962648.6550188}]}, "version": 655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.5234],\n        [100000.1562],\n        [ 99999.8516],\n        [ 99999.5391],\n        [ 99999.6016],\n        [100000.3203],\n        [100000.2031],\n        [ 99999.8438],\n        [ 99999.9297],\n        [100000.2109],\n        [100003.4688],\n        [100000.5938],\n        [100000.0156],\n        [ 99993.4375],\n        [ 99999.9766],\n        [100000.2969],\n        [100000.1172],\n        [ 99999.6719],\n        [100015.8438],\n        [100000.0000],\n        [ 99997.7422],\n        [ 99999.8750],\n        [100000.0703],\n        [100000.1250],\n        [100000.1484],\n        [ 99999.1406],\n        [100000.1328],\n        [100000.3984],\n        [ 99999.5938],\n        [ 99999.9688],\n        [100000.0234],\n        [ 99999.9609],\n        [100000.0625],\n        [ 99999.5625],\n        [ 99999.7969],\n        [ 99999.9062],\n        [100001.0781],\n        [100000.0156],\n        [ 99999.9453],\n        [100000.0781],\n        [100000.1875],\n        [ 99999.7500]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962648.6683807}]}, "version": 656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.673009}]}, "version": 657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962648.6764705}]}, "version": 658}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.6790059}]}, "version": 659}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962648.6804273}]}, "version": 660}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.6813643}]}, "version": 661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962648.6825635}]}, "version": 662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.6833735}]}, "version": 663}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -13308.943359375, "step": null, "ts": 1644962648.6844928}]}, "version": 664}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3410724103450775, "step": null, "ts": 1644962648.7724178}]}, "version": 665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0078],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962648.7812629}]}, "version": 666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.786265}]}, "version": 667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962648.7963405}]}, "version": 668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.799857}]}, "version": 669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962648.8009653}]}, "version": 670}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.8018677}]}, "version": 671}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962648.8030424}]}, "version": 672}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962648.803943}]}, "version": 673}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962648.8050687}]}, "version": 674}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343263268470764, "step": null, "ts": 1644962649.2589378}]}, "version": 675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99998.5625],\n        [100059.4141],\n        [ 99992.3047],\n        [100000.9766],\n        [ 99999.5781],\n        [ 99999.9297],\n        [100000.0156],\n        [100000.2578],\n        [ 99998.8203],\n        [ 99999.9609],\n        [100000.0859],\n        [ 99999.7500],\n        [ 99999.8516],\n        [100000.2891],\n        [100000.3906],\n        [100000.9766],\n        [100000.2734],\n        [100000.0703],\n        [ 99998.1875],\n        [100000.6094],\n        [100000.7812],\n        [100000.3906],\n        [ 99999.8984],\n        [100000.1406],\n        [ 99999.9453],\n        [100000.3594],\n        [ 99999.5938],\n        [100000.1953],\n        [ 99999.0938],\n        [ 99999.8359],\n        [ 99999.5781],\n        [100000.2422],\n        [ 99999.9531],\n        [100000.4609],\n        [ 99999.7344],\n        [100000.1875],\n        [ 99999.7891],\n        [100001.5938],\n        [ 99999.8359],\n        [ 99999.6484],\n        [100000.2891],\n        [ 99999.7188]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962649.2680888}]}, "version": 676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.274782}]}, "version": 677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962649.277914}]}, "version": 678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.2788718}]}, "version": 679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962649.2800364}]}, "version": 680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.2809398}]}, "version": 681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962649.282044}]}, "version": 682}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.28295}]}, "version": 683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9463.6298828125, "step": null, "ts": 1644962649.2841728}]}, "version": 684}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15337210893630981, "step": null, "ts": 1644962649.3827453}]}, "version": 685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0469],\n        [100000.0781],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0078],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962649.3888812}]}, "version": 686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.3931055}]}, "version": 687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962649.4043152}]}, "version": 688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.408013}]}, "version": 689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962649.4094362}]}, "version": 690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.4105258}]}, "version": 691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962649.4116876}]}, "version": 692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.4126568}]}, "version": 693}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962649.41372}]}, "version": 694}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962649.728739}]}, "version": 695}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8938291668891907, "step": null, "ts": 1644962649.8773835}]}, "version": 696}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99997.8359],\n        [100000.3516],\n        [ 99999.9062],\n        [100000.3672],\n        [100000.1562],\n        [ 99999.6484],\n        [ 99999.8281],\n        [ 99999.9688],\n        [ 99997.0078],\n        [100000.1172],\n        [100000.0234],\n        [100000.2656],\n        [ 99999.9062],\n        [100000.4062],\n        [ 99998.5703],\n        [ 99999.3750],\n        [100000.3047],\n        [ 99999.5781],\n        [100001.0938],\n        [ 99999.8125],\n        [ 99999.9688],\n        [ 99999.7031],\n        [ 99999.9688],\n        [100000.1406],\n        [ 99999.6641],\n        [100000.0234],\n        [ 99999.1094],\n        [100000.3750],\n        [100004.8672],\n        [100001.2578],\n        [100000.0156],\n        [100000.2344],\n        [ 99999.8047],\n        [100000.1172],\n        [ 99999.0000],\n        [100007.4297],\n        [ 99999.6953],\n        [ 99998.6562],\n        [100000.0859],\n        [100000.8984],\n        [100000.0234],\n        [100000.6641]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962649.8833747}]}, "version": 697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.8917422}]}, "version": 698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962649.8952281}]}, "version": 699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.8962603}]}, "version": 700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962649.8976698}]}, "version": 701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.8987343}]}, "version": 702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962649.8998652}]}, "version": 703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962649.9007132}]}, "version": 704}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -6562.3681640625, "step": null, "ts": 1644962649.9017186}]}, "version": 705}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23163539171218872, "step": null, "ts": 1644962649.991356}]}, "version": 706}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469],\n        [100000.0859],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962650.0022333}]}, "version": 707}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.0056272}]}, "version": 708}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962650.0116305}]}, "version": 709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.0162675}]}, "version": 710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962650.0176814}]}, "version": 711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.0185914}]}, "version": 712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962650.019679}]}, "version": 713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.0202348}]}, "version": 714}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962650.0211573}]}, "version": 715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.606 (0.606)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962650.2659612}]}, "version": 716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.267033}]}, "version": 717}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7544655799865723, "step": null, "ts": 1644962650.4908564}]}, "version": 718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9297],\n        [ 99999.9922],\n        [100000.0703],\n        [100000.0078],\n        [ 99998.2734],\n        [100000.2031],\n        [100000.1797],\n        [ 99999.8750],\n        [100000.4609],\n        [100000.1016],\n        [100000.1953],\n        [100000.3438],\n        [100000.0859],\n        [100000.0312],\n        [100000.5000],\n        [ 99999.8516],\n        [100000.0312],\n        [100000.1406],\n        [ 99999.7734],\n        [ 99998.0625],\n        [ 99999.2344],\n        [ 99999.8984],\n        [100000.4766],\n        [ 99999.8750],\n        [ 99996.2812],\n        [ 99999.9453],\n        [ 99999.8281],\n        [100000.0781],\n        [100000.1797],\n        [100000.6406],\n        [ 99999.7656],\n        [ 99999.2656],\n        [100000.2188],\n        [ 99999.1094],\n        [100000.1484],\n        [ 99999.9453],\n        [ 99999.9219],\n        [100000.6875],\n        [100000.1250],\n        [ 99999.7891],\n        [ 99999.5000],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962650.4972467}]}, "version": 719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.5042202}]}, "version": 720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962650.5078118}]}, "version": 721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.5088456}]}, "version": 722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962650.5103166}]}, "version": 723}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.5112839}]}, "version": 724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962650.512363}]}, "version": 725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.5133998}]}, "version": 726}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -14253.0009765625, "step": null, "ts": 1644962650.5145273}]}, "version": 727}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2959151864051819, "step": null, "ts": 1644962650.6021883}]}, "version": 728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0781],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.1016],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962650.6167274}]}, "version": 729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.6237373}]}, "version": 730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962650.6298158}]}, "version": 731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.638831}]}, "version": 732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962650.640299}]}, "version": 733}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.6413312}]}, "version": 734}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962650.6426723}]}, "version": 735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962650.6435533}]}, "version": 736}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962650.6444721}]}, "version": 737}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7592187523841858, "step": null, "ts": 1644962651.0802543}]}, "version": 738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8750],\n        [100000.3906],\n        [100000.0547],\n        [ 99999.8125],\n        [100000.5625],\n        [100000.1484],\n        [ 99999.8516],\n        [100000.1953],\n        [100000.4297],\n        [ 99999.5391],\n        [100000.0391],\n        [100000.9375],\n        [ 99997.5312],\n        [ 99999.7656],\n        [ 99999.6641],\n        [ 99999.8438],\n        [ 99999.8672],\n        [100000.2969],\n        [ 99999.9453],\n        [ 99999.6016],\n        [100001.6172],\n        [100000.0078],\n        [100000.0938],\n        [ 99999.7500],\n        [ 99999.5156],\n        [100000.0312],\n        [100000.3047],\n        [100000.7734],\n        [100000.2578],\n        [ 99999.8594],\n        [ 99999.7188],\n        [100000.6797],\n        [100001.8906],\n        [100000.2656],\n        [100000.0391],\n        [ 99999.9453],\n        [ 99999.6484],\n        [100087.8203],\n        [ 99999.8906],\n        [ 99999.1875],\n        [100000.3281],\n        [ 99998.6562]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962651.0895288}]}, "version": 739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.090593}]}, "version": 740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962651.093837}]}, "version": 741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.0948281}]}, "version": 742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962651.0959399}]}, "version": 743}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.0967708}]}, "version": 744}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962651.0978255}]}, "version": 745}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.0986795}]}, "version": 746}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -13331.9794921875, "step": null, "ts": 1644962651.099689}]}, "version": 747}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40869468450546265, "step": null, "ts": 1644962651.2024596}]}, "version": 748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0078],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0078],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0703]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962651.211964}]}, "version": 749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.2216737}]}, "version": 750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962651.2277887}]}, "version": 751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.236821}]}, "version": 752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962651.2384315}]}, "version": 753}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.2395358}]}, "version": 754}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962651.2407346}]}, "version": 755}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.24187}]}, "version": 756}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962651.2431247}]}, "version": 757}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6433933973312378, "step": null, "ts": 1644962651.6741683}]}, "version": 758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100003.4453],\n        [100000.2891],\n        [100000.2500],\n        [100000.0000],\n        [100000.8672],\n        [ 99999.8125],\n        [100006.1094],\n        [ 99999.8516],\n        [100000.1172],\n        [100000.4062],\n        [100000.2031],\n        [ 99999.9062],\n        [ 99999.5312],\n        [100000.0234],\n        [ 99999.6016],\n        [ 99973.8125],\n        [ 99999.5703],\n        [100000.6172],\n        [100000.2344],\n        [100001.1484],\n        [ 99985.5000],\n        [100000.4844],\n        [ 99999.6953],\n        [100000.6250],\n        [100000.1094],\n        [ 99999.2656],\n        [100000.5859],\n        [ 99999.9766],\n        [100000.1719],\n        [ 99999.6172],\n        [100000.9375],\n        [ 99999.9766],\n        [100000.2734],\n        [100000.6953],\n        [100000.1094],\n        [100000.0391],\n        [100000.2031],\n        [ 99999.6797],\n        [100015.6016],\n        [ 99990.9062],\n        [100000.5000],\n        [100000.3281]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962651.6850474}]}, "version": 759}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.692346}]}, "version": 760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962651.695612}]}, "version": 761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.6967793}]}, "version": 762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962651.698334}]}, "version": 763}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.6994166}]}, "version": 764}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962651.7008526}]}, "version": 765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.7018728}]}, "version": 766}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17891.08203125, "step": null, "ts": 1644962651.7032802}]}, "version": 767}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2720065712928772, "step": null, "ts": 1644962651.7880535}]}, "version": 768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0156],\n        [100000.0547],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962651.7994819}]}, "version": 769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.8057363}]}, "version": 770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962651.8091846}]}, "version": 771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.814361}]}, "version": 772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962651.8184476}]}, "version": 773}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.8194976}]}, "version": 774}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962651.8208082}]}, "version": 775}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962651.821734}]}, "version": 776}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962651.8230886}]}, "version": 777}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6693807244300842, "step": null, "ts": 1644962652.2981029}]}, "version": 778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.2109],\n        [ 99999.6797],\n        [100000.3516],\n        [100000.0078],\n        [100000.0703],\n        [ 99999.7344],\n        [100000.0703],\n        [ 99999.9922],\n        [100000.8594],\n        [100000.0469],\n        [100000.2109],\n        [ 99999.9453],\n        [ 99999.8984],\n        [100000.3672],\n        [ 99999.8203],\n        [100000.5938],\n        [100000.5391],\n        [ 99999.9922],\n        [ 99999.2734],\n        [100000.1172],\n        [ 99999.1719],\n        [100000.1172],\n        [ 99999.1953],\n        [100000.1250],\n        [ 99999.7109],\n        [ 99999.8750],\n        [ 99999.7188],\n        [100002.5234],\n        [ 99999.4062],\n        [100000.1016],\n        [100000.0312],\n        [ 99999.9688],\n        [100000.1562],\n        [ 99968.6484],\n        [ 99999.6406],\n        [ 99999.2188],\n        [ 99999.9844],\n        [ 99999.8750],\n        [ 99999.6172],\n        [100000.1484],\n        [ 99998.5078],\n        [ 99999.9922]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962652.3080826}]}, "version": 779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.309262}]}, "version": 780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962652.312675}]}, "version": 781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.3137443}]}, "version": 782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962652.3148909}]}, "version": 783}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.315765}]}, "version": 784}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962652.3169634}]}, "version": 785}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.3178418}]}, "version": 786}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -18098.3125, "step": null, "ts": 1644962652.319161}]}, "version": 787}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5564520955085754, "step": null, "ts": 1644962652.407133}]}, "version": 788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0156],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0703],\n        [100000.0312],\n        [100000.0391],\n        [100000.1172],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0703],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962652.4157717}]}, "version": 789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.4248185}]}, "version": 790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962652.4334927}]}, "version": 791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.4346867}]}, "version": 792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962652.436109}]}, "version": 793}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.437212}]}, "version": 794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962652.4386246}]}, "version": 795}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.4397297}]}, "version": 796}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962652.4407716}]}, "version": 797}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0379258394241333, "step": null, "ts": 1644962652.9104245}]}, "version": 798}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0938],\n        [100000.1562],\n        [ 99999.9688],\n        [ 99997.7500],\n        [100000.1328],\n        [100000.2656],\n        [ 99999.2500],\n        [ 99996.5469],\n        [100000.0156],\n        [100000.3828],\n        [ 99999.9062],\n        [ 99999.5469],\n        [100000.0859],\n        [100000.3594],\n        [100000.0781],\n        [100000.1172],\n        [ 99998.1719],\n        [100000.0391],\n        [100000.0703],\n        [ 99999.2266],\n        [100018.5312],\n        [100000.0312],\n        [100000.0859],\n        [ 99998.7578],\n        [ 99999.0312],\n        [100000.2891],\n        [100000.1094],\n        [100000.1328],\n        [100000.3828],\n        [ 99999.8906],\n        [ 99999.9531],\n        [100000.1562],\n        [ 99992.9531],\n        [100000.3828],\n        [100000.3203],\n        [100000.1797],\n        [100000.1172],\n        [ 99999.8203],\n        [ 99999.9766],\n        [100000.0156],\n        [ 99997.2188],\n        [ 99999.8594]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962652.914229}]}, "version": 799}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.9155576}]}, "version": 800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962652.9191651}]}, "version": 801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.9203184}]}, "version": 802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962652.92171}]}, "version": 803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.922759}]}, "version": 804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962652.923921}]}, "version": 805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962652.9248633}]}, "version": 806}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -4789.376953125, "step": null, "ts": 1644962652.926405}]}, "version": 807}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2268366664648056, "step": null, "ts": 1644962653.0238333}]}, "version": 808}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0078],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0703],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0938],\n        [100000.0703],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962653.0324626}]}, "version": 809}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.0388372}]}, "version": 810}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962653.0449553}]}, "version": 811}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.0484037}]}, "version": 812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962653.0497365}]}, "version": 813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.0506742}]}, "version": 814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962653.0518396}]}, "version": 815}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.0526147}]}, "version": 816}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962653.05363}]}, "version": 817}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9422849416732788, "step": null, "ts": 1644962653.7735937}]}, "version": 818}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9766],\n        [100000.1875],\n        [100000.6250],\n        [ 99999.8594],\n        [100000.7578],\n        [100002.3359],\n        [100000.5781],\n        [100001.4922],\n        [100000.1719],\n        [ 99999.8281],\n        [100000.1250],\n        [100001.0391],\n        [ 99999.8672],\n        [100000.9922],\n        [100000.0078],\n        [100000.2500],\n        [ 99999.8906],\n        [100000.0703],\n        [100000.1719],\n        [ 99999.5703],\n        [100000.0469],\n        [100000.2266],\n        [ 99999.8828],\n        [ 99999.4531],\n        [ 99999.5859],\n        [ 99999.8359],\n        [100000.1328],\n        [100000.1016],\n        [ 99999.8672],\n        [100003.3359],\n        [ 99999.7734],\n        [ 99999.8906],\n        [100000.0547],\n        [100001.0625],\n        [100000.2734],\n        [ 99998.9922],\n        [ 99999.8984],\n        [100000.0156],\n        [ 99999.9375],\n        [ 99999.8906],\n        [100000.6172],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962653.789353}]}, "version": 819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.7966888}]}, "version": 820}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962653.800307}]}, "version": 821}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.8013573}]}, "version": 822}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962653.8026726}]}, "version": 823}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.803675}]}, "version": 824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962653.804872}]}, "version": 825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.8055017}]}, "version": 826}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9003.109375, "step": null, "ts": 1644962653.8066046}]}, "version": 827}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.33237168192863464, "step": null, "ts": 1644962653.9014356}]}, "version": 828}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0625],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962653.9132495}]}, "version": 829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.9168673}]}, "version": 830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962653.9227772}]}, "version": 831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.9260128}]}, "version": 832}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962653.9274373}]}, "version": 833}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.9282405}]}, "version": 834}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962653.9293704}]}, "version": 835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962653.9302027}]}, "version": 836}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962653.9313579}]}, "version": 837}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9249365925788879, "step": null, "ts": 1644962654.358637}]}, "version": 838}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.1953],\n        [100000.0938],\n        [ 99999.8594],\n        [ 99999.6172],\n        [100000.1172],\n        [ 99999.9141],\n        [ 99998.4141],\n        [100000.0156],\n        [100000.3516],\n        [100000.0781],\n        [ 99999.7969],\n        [100000.1250],\n        [ 99999.7500],\n        [100000.5547],\n        [100000.0938],\n        [100000.1406],\n        [ 99999.5000],\n        [100001.8594],\n        [100000.0234],\n        [ 99999.8203],\n        [ 99997.6484],\n        [100000.1484],\n        [100000.2422],\n        [ 99999.8203],\n        [100000.0625],\n        [ 99999.2344],\n        [ 99999.6953],\n        [ 99999.8594],\n        [100000.1094],\n        [ 99999.5547],\n        [100000.0000],\n        [100000.0391],\n        [ 99999.9766],\n        [100000.5859],\n        [ 99999.9219],\n        [ 99998.5312],\n        [100000.0391],\n        [100004.2422],\n        [100000.2109],\n        [ 99999.7969],\n        [100000.0391],\n        [100000.0000]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962654.3725243}]}, "version": 839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.3812594}]}, "version": 840}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962654.3847737}]}, "version": 841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.3859115}]}, "version": 842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962654.38739}]}, "version": 843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.3884282}]}, "version": 844}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962654.3898263}]}, "version": 845}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.3908257}]}, "version": 846}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -7068.93603515625, "step": null, "ts": 1644962654.3920848}]}, "version": 847}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.260873407125473, "step": null, "ts": 1644962654.4891484}]}, "version": 848}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0781],\n        [100000.0078]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962654.498214}]}, "version": 849}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.5083444}]}, "version": 850}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962654.5143611}]}, "version": 851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.523108}]}, "version": 852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962654.5245392}]}, "version": 853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.5255332}]}, "version": 854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962654.526788}]}, "version": 855}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.5276742}]}, "version": 856}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962654.5287101}]}, "version": 857}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962654.9509706}]}, "version": 858}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.043674468994141, "step": null, "ts": 1644962654.9509706}]}, "version": 859}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644962654.9509706}]}, "version": 860}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962654.9509706}]}, "version": 861}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5658231377601624, "step": null, "ts": 1644962654.983385}]}, "version": 862}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9141],\n        [ 99999.9375],\n        [100000.0078],\n        [ 99999.8047],\n        [100001.9922],\n        [ 99999.8125],\n        [100000.6172],\n        [ 99999.9922],\n        [ 99999.2578],\n        [ 99999.9219],\n        [ 99999.9922],\n        [ 99999.8047],\n        [ 99999.6250],\n        [100000.1641],\n        [ 99999.6641],\n        [100000.0156],\n        [ 99999.5469],\n        [ 99999.9531],\n        [ 99999.9375],\n        [100000.2422],\n        [100000.2266],\n        [ 99988.7891],\n        [100000.0156],\n        [ 99999.7188],\n        [ 99999.6875],\n        [ 99999.9141],\n        [ 99999.9062],\n        [ 99999.9844],\n        [ 99999.6875],\n        [100000.1953],\n        [ 99997.7891],\n        [100000.3047],\n        [ 99999.7891],\n        [100000.0625],\n        [ 99999.4844],\n        [100000.0078],\n        [100000.1250],\n        [100000.0547],\n        [100000.2734],\n        [ 99999.9297],\n        [ 99999.1562],\n        [100000.4141]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962654.9894495}]}, "version": 863}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.9942782}]}, "version": 864}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962654.9977734}]}, "version": 865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962654.9988728}]}, "version": 866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962655.0003922}]}, "version": 867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.0013647}]}, "version": 868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962655.0025282}]}, "version": 869}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.0032978}]}, "version": 870}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9141.26171875, "step": null, "ts": 1644962655.004353}]}, "version": 871}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962655.0584865}]}, "version": 872}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.35949835181236267, "step": null, "ts": 1644962655.0971215}]}, "version": 873}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0156],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0703],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0156],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962655.1092718}]}, "version": 874}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.1239426}]}, "version": 875}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962655.1301806}]}, "version": 876}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.1334813}]}, "version": 877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962655.1346214}]}, "version": 878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.1354585}]}, "version": 879}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962655.136525}]}, "version": 880}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.137157}]}, "version": 881}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962655.138109}]}, "version": 882}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5117915868759155, "step": null, "ts": 1644962655.5920205}]}, "version": 883}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.9922],\n        [100000.4531],\n        [ 99999.8984],\n        [ 99999.9531],\n        [ 99999.6641],\n        [ 99998.6250],\n        [100000.2266],\n        [100000.0391],\n        [ 99998.3047],\n        [100018.1094],\n        [100001.0859],\n        [100000.0938],\n        [ 99999.2266],\n        [100000.0781],\n        [ 99999.6094],\n        [ 99999.9062],\n        [ 99999.8516],\n        [100000.0312],\n        [ 99999.7422],\n        [100006.0859],\n        [100000.0547],\n        [ 99998.9375],\n        [100000.2109],\n        [ 99998.4688],\n        [100000.0312],\n        [100001.0859],\n        [ 99999.9609],\n        [ 99997.6953],\n        [100000.2422],\n        [ 99985.6406],\n        [100000.1406],\n        [100001.0156],\n        [ 99999.5938],\n        [100000.1016],\n        [100000.1328],\n        [100000.1016],\n        [100000.0312],\n        [100000.0234],\n        [ 99999.9766],\n        [100000.1094],\n        [ 99999.9375],\n        [ 99999.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962655.6062164}]}, "version": 884}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.607113}]}, "version": 885}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962655.6103895}]}, "version": 886}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.6142223}]}, "version": 887}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962655.6155574}]}, "version": 888}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.616805}]}, "version": 889}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962655.6186757}]}, "version": 890}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.6197126}]}, "version": 891}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -4835.4287109375, "step": null, "ts": 1644962655.6207087}]}, "version": 892}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4834567904472351, "step": null, "ts": 1644962655.7118762}]}, "version": 893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0625],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0781],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0078],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962655.7243736}]}, "version": 894}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.728816}]}, "version": 895}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962655.7341282}]}, "version": 896}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.7432716}]}, "version": 897}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962655.7471285}]}, "version": 898}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.7478464}]}, "version": 899}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962655.7489986}]}, "version": 900}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962655.749581}]}, "version": 901}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962655.7504933}]}, "version": 902}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.759152352809906, "step": null, "ts": 1644962656.2163274}]}, "version": 903}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100003.1641],\n        [ 99999.9844],\n        [100000.1328],\n        [ 99998.3594],\n        [ 99999.9844],\n        [100000.2891],\n        [ 99995.9375],\n        [ 99999.8984],\n        [ 99999.9688],\n        [100000.6953],\n        [100000.3906],\n        [ 99999.4297],\n        [ 99999.8906],\n        [100000.1562],\n        [ 99999.8750],\n        [100000.0391],\n        [100000.5703],\n        [100000.7109],\n        [100000.1797],\n        [ 99999.9453],\n        [100000.7422],\n        [100000.3672],\n        [100000.1719],\n        [ 99999.3672],\n        [100000.5234],\n        [ 99999.9062],\n        [ 99999.1172],\n        [100000.1406],\n        [ 99999.9766],\n        [100000.0078],\n        [ 99999.9922],\n        [ 99999.7266],\n        [100000.3594],\n        [ 99999.9531],\n        [ 99999.8672],\n        [100002.7266],\n        [ 99999.8359],\n        [ 99999.2109],\n        [100000.1641],\n        [ 99999.8281],\n        [100000.1172],\n        [ 99999.8203]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962656.2292376}]}, "version": 904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.2301457}]}, "version": 905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962656.233506}]}, "version": 906}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.2342975}]}, "version": 907}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962656.235694}]}, "version": 908}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.2363443}]}, "version": 909}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962656.2374215}]}, "version": 910}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.23829}]}, "version": 911}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -12480.01171875, "step": null, "ts": 1644962656.2393994}]}, "version": 912}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3443604111671448, "step": null, "ts": 1644962656.3410358}]}, "version": 913}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0781],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0625],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962656.3498197}]}, "version": 914}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.3557794}]}, "version": 915}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962656.358875}]}, "version": 916}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.3648293}]}, "version": 917}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962656.3688488}]}, "version": 918}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.3696902}]}, "version": 919}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962656.370746}]}, "version": 920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.3712742}]}, "version": 921}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962656.3720767}]}, "version": 922}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.618 (0.618)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss nan (nan)", "step": null, "ts": 1644962656.614317}]}, "version": 923}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.6153748}]}, "version": 924}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7835744619369507, "step": null, "ts": 1644962656.8191888}]}, "version": 925}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99998.9141],\n        [100000.0781],\n        [ 99999.7578],\n        [100000.1406],\n        [100003.6875],\n        [ 99999.8438],\n        [ 99999.8359],\n        [100003.1328],\n        [ 99999.9766],\n        [100000.2266],\n        [100000.2656],\n        [100000.1328],\n        [100001.0312],\n        [ 99998.5781],\n        [ 99999.0312],\n        [ 99999.9141],\n        [ 99999.8594],\n        [ 99996.6562],\n        [100000.2500],\n        [ 99999.9609],\n        [ 99999.7266],\n        [100000.1094],\n        [100000.2969],\n        [ 99999.8672],\n        [100001.3828],\n        [100000.6016],\n        [100000.1172],\n        [ 99999.7422],\n        [100000.1641],\n        [100000.0625],\n        [100000.2734],\n        [ 99999.9844],\n        [ 99999.9922],\n        [ 99999.9531],\n        [100000.2109],\n        [ 99999.1641],\n        [ 99999.9766],\n        [ 99999.8906],\n        [ 99999.8750],\n        [ 99999.1016],\n        [ 99999.6719],\n        [100000.2656]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962656.8282857}]}, "version": 926}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.8293138}]}, "version": 927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962656.8328967}]}, "version": 928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.8348057}]}, "version": 929}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962656.8363173}]}, "version": 930}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.8374147}]}, "version": 931}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962656.8386211}]}, "version": 932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.8396711}]}, "version": 933}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -6240.005859375, "step": null, "ts": 1644962656.840962}]}, "version": 934}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3973585069179535, "step": null, "ts": 1644962656.9360862}]}, "version": 935}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0781],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962656.9460151}]}, "version": 936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.9538147}]}, "version": 937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962656.962812}]}, "version": 938}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.9663508}]}, "version": 939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962656.9675522}]}, "version": 940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.9685988}]}, "version": 941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962656.9702795}]}, "version": 942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962656.9713285}]}, "version": 943}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962656.9723582}]}, "version": 944}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6310012340545654, "step": null, "ts": 1644962657.413962}]}, "version": 945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.1484],\n        [100000.0156],\n        [100000.1172],\n        [ 99999.7188],\n        [100000.0625],\n        [100000.0859],\n        [100000.1016],\n        [ 99999.3203],\n        [ 99999.8672],\n        [ 99999.7422],\n        [ 99999.6641],\n        [ 99999.7266],\n        [100000.0312],\n        [ 99999.9609],\n        [ 99999.1562],\n        [ 99999.8047],\n        [100000.0859],\n        [100000.1094],\n        [ 99998.0547],\n        [ 99998.7969],\n        [ 99999.2812],\n        [100001.5469],\n        [ 99999.6797],\n        [100000.0625],\n        [ 99999.9766],\n        [100000.6250],\n        [100000.5391],\n        [100000.9141],\n        [100000.0000],\n        [100001.7109],\n        [100000.1172],\n        [100000.1094],\n        [100000.0078],\n        [100000.8906],\n        [ 99999.8359],\n        [ 99999.9844],\n        [ 99999.9297],\n        [100002.7031],\n        [ 99999.9688],\n        [ 99998.5547],\n        [100000.1562],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962657.4308045}]}, "version": 946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.438126}]}, "version": 947}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962657.4415963}]}, "version": 948}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.4426572}]}, "version": 949}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962657.4439964}]}, "version": 950}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.4448833}]}, "version": 951}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962657.4462087}]}, "version": 952}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.4471767}]}, "version": 953}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -16302.302734375, "step": null, "ts": 1644962657.4483917}]}, "version": 954}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1044827401638031, "step": null, "ts": 1644962657.5392797}]}, "version": 955}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0781],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0078],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0938],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0625],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962657.5479214}]}, "version": 956}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.5568182}]}, "version": 957}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962657.562963}]}, "version": 958}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.5665221}]}, "version": 959}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962657.5676186}]}, "version": 960}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.568617}]}, "version": 961}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962657.569735}]}, "version": 962}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962657.5707092}]}, "version": 963}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962657.5716925}]}, "version": 964}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8994687795639038, "step": null, "ts": 1644962658.0295546}]}, "version": 965}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.7188],\n        [ 99999.7188],\n        [100001.1328],\n        [100000.2031],\n        [100000.2969],\n        [ 99999.9141],\n        [100000.1172],\n        [ 99999.8828],\n        [100000.5938],\n        [ 99998.7891],\n        [ 99998.8125],\n        [ 99997.3750],\n        [100000.2891],\n        [ 99999.0781],\n        [100000.0625],\n        [ 99999.8672],\n        [ 99999.7344],\n        [100000.1484],\n        [100000.1172],\n        [ 99989.5156],\n        [ 99999.6406],\n        [ 99999.9688],\n        [ 99999.6250],\n        [100000.3281],\n        [ 99998.6562],\n        [100000.0625],\n        [ 99999.9688],\n        [100000.0156],\n        [ 99999.9766],\n        [100000.1797],\n        [ 99999.7109],\n        [100000.1328],\n        [100000.1797],\n        [ 99999.7656],\n        [ 99999.7656],\n        [ 99998.6719],\n        [ 99999.7344],\n        [ 99999.9375],\n        [100000.1172],\n        [ 99999.6641],\n        [ 99999.7969],\n        [100001.3672]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962658.0475712}]}, "version": 966}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.0540066}]}, "version": 967}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962658.0580835}]}, "version": 968}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.059245}]}, "version": 969}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962658.0603776}]}, "version": 970}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.0609467}]}, "version": 971}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962658.0619507}]}, "version": 972}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.0631094}]}, "version": 973}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -3592.0322265625, "step": null, "ts": 1644962658.0642912}]}, "version": 974}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2307388186454773, "step": null, "ts": 1644962658.158948}]}, "version": 975}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0703],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962658.1716974}]}, "version": 976}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.1777422}]}, "version": 977}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962658.1811812}]}, "version": 978}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.1875842}]}, "version": 979}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962658.1906805}]}, "version": 980}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.192322}]}, "version": 981}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962658.1934302}]}, "version": 982}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.1944163}]}, "version": 983}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962658.1953983}]}, "version": 984}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8624277114868164, "step": null, "ts": 1644962658.657408}]}, "version": 985}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8516],\n        [100000.1953],\n        [100000.2188],\n        [100000.0312],\n        [100000.9141],\n        [ 99999.9297],\n        [100000.2344],\n        [100000.0234],\n        [100000.0312],\n        [ 99999.8594],\n        [ 99999.9531],\n        [100000.0938],\n        [100000.0234],\n        [100000.5547],\n        [100000.1719],\n        [100000.4297],\n        [ 99999.8125],\n        [ 99999.8672],\n        [100000.0000],\n        [ 99999.5625],\n        [ 99999.5391],\n        [100000.6250],\n        [ 99999.1875],\n        [ 99999.3359],\n        [ 99999.9062],\n        [100000.0703],\n        [ 99999.9375],\n        [100000.2344],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [ 99999.1797],\n        [ 99999.8125],\n        [ 99999.8984],\n        [100000.1406],\n        [100000.0391],\n        [100000.0391],\n        [ 99999.9688],\n        [100000.3203],\n        [100000.3750],\n        [ 99999.7734],\n        [ 99998.4688]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962658.6667707}]}, "version": 986}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.6680067}]}, "version": 987}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962658.6714768}]}, "version": 988}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.6787615}]}, "version": 989}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962658.6803281}]}, "version": 990}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.6814208}]}, "version": 991}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962658.6828115}]}, "version": 992}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.683777}]}, "version": 993}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -12779.34765625, "step": null, "ts": 1644962658.6851056}]}, "version": 994}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15145838260650635, "step": null, "ts": 1644962658.7795277}]}, "version": 995}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0938],\n        [100000.0703],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0625],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0625],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962658.7865746}]}, "version": 996}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.7908385}]}, "version": 997}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962658.8020506}]}, "version": 998}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.8056414}]}, "version": 999}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962658.809599}]}, "version": 1000}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.8104537}]}, "version": 1001}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962658.8116488}]}, "version": 1002}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962658.812497}]}, "version": 1003}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962658.8134842}]}, "version": 1004}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7558958530426025, "step": null, "ts": 1644962659.2631552}]}, "version": 1005}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.7812],\n        [ 99999.9688],\n        [ 99999.6484],\n        [100000.0078],\n        [100000.1719],\n        [ 99999.4219],\n        [ 99998.7656],\n        [100000.6875],\n        [100003.1484],\n        [100000.0000],\n        [ 99999.9062],\n        [100000.0000],\n        [100000.0859],\n        [100001.0781],\n        [ 99999.9609],\n        [ 99999.4766],\n        [100000.4609],\n        [ 99999.7891],\n        [100000.2734],\n        [ 99998.3047],\n        [100000.0000],\n        [100000.0547],\n        [ 99999.9375],\n        [100000.0938],\n        [100000.0234],\n        [100000.4453],\n        [100042.1172],\n        [100000.3906],\n        [100000.1562],\n        [100000.4766],\n        [ 99999.8516],\n        [100000.1172],\n        [ 99999.8359],\n        [ 99999.5078],\n        [ 99999.7969],\n        [ 99999.8672],\n        [100000.0234],\n        [100013.5234],\n        [100001.2500],\n        [100000.0000],\n        [ 99999.9453],\n        [ 99999.9688]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962659.2727895}]}, "version": 1006}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.2736151}]}, "version": 1007}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962659.277097}]}, "version": 1008}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.2833724}]}, "version": 1009}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962659.2844312}]}, "version": 1010}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.285177}]}, "version": 1011}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962659.2864802}]}, "version": 1012}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.2872994}]}, "version": 1013}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2555.87109375, "step": null, "ts": 1644962659.2885215}]}, "version": 1014}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3752738833427429, "step": null, "ts": 1644962659.3807955}]}, "version": 1015}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962659.391374}]}, "version": 1016}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.3974595}]}, "version": 1017}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962659.4008443}]}, "version": 1018}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.4048007}]}, "version": 1019}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962659.413314}]}, "version": 1020}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.4141629}]}, "version": 1021}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962659.4156106}]}, "version": 1022}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.416524}]}, "version": 1023}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962659.4174945}]}, "version": 1024}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.704511821269989, "step": null, "ts": 1644962659.8600235}]}, "version": 1025}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99998.9141],\n        [100000.0234],\n        [100000.1016],\n        [ 99999.6250],\n        [100001.1641],\n        [ 99999.1641],\n        [100000.0156],\n        [100000.0312],\n        [100000.6953],\n        [ 99996.9766],\n        [ 99999.1562],\n        [100000.1328],\n        [ 99999.8750],\n        [ 99999.7578],\n        [ 99999.2500],\n        [100001.4062],\n        [100000.1250],\n        [100000.2500],\n        [100000.0156],\n        [ 99999.5859],\n        [100000.0000],\n        [100000.2578],\n        [100000.2656],\n        [ 99731.9766],\n        [100000.0625],\n        [100000.0078],\n        [ 99999.8672],\n        [ 99980.8281],\n        [ 99999.8906],\n        [100000.1562],\n        [ 99999.7422],\n        [ 99984.5469],\n        [ 99999.8672],\n        [ 99999.7969],\n        [100000.0859],\n        [100000.0938],\n        [100000.0781],\n        [100000.1719],\n        [100000.6641],\n        [100000.4453],\n        [ 99999.7422],\n        [ 99999.4062]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962659.876262}]}, "version": 1026}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.8772364}]}, "version": 1027}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962659.8807}]}, "version": 1028}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.8816676}]}, "version": 1029}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000.0156, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962659.8829424}]}, "version": 1030}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.8838415}]}, "version": 1031}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(99999.9844, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962659.885215}]}, "version": 1032}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.886145}]}, "version": 1033}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17476.56640625, "step": null, "ts": 1644962659.88742}]}, "version": 1034}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20550653338432312, "step": null, "ts": 1644962659.9756663}]}, "version": 1035}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0391],\n        [100000.0625],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0781],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962659.987312}]}, "version": 1036}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962659.9928374}]}, "version": 1037}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962659.996847}]}, "version": 1038}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.0004525}]}, "version": 1039}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962660.0093668}]}, "version": 1040}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.0103273}]}, "version": 1041}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962660.0114317}]}, "version": 1042}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.012461}]}, "version": 1043}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962660.013537}]}, "version": 1044}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962660.461254}]}, "version": 1045}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8325490355491638, "step": null, "ts": 1644962660.495229}]}, "version": 1046}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99994.5625],\n        [ 99999.7344],\n        [100000.0859],\n        [ 99999.9531],\n        [ 99999.9062],\n        [ 99999.8984],\n        [100000.0234],\n        [100000.1250],\n        [100001.1094],\n        [100000.0469],\n        [100000.9688],\n        [ 99998.9922],\n        [ 99999.4688],\n        [ 99999.9844],\n        [ 99999.9922],\n        [100000.8047],\n        [100000.1875],\n        [ 99999.9062],\n        [ 99999.6562],\n        [100002.1562],\n        [100000.2734],\n        [100000.1016],\n        [100000.2031],\n        [100000.2578],\n        [100001.4219],\n        [100000.1484],\n        [100000.0000],\n        [100000.0000],\n        [ 99999.0156],\n        [100000.1250],\n        [ 99999.4844],\n        [100000.0547],\n        [100000.2266],\n        [100000.3203],\n        [102719.4609],\n        [100000.1328],\n        [100000.0703],\n        [100000.0625],\n        [ 99999.4844],\n        [100000.1172],\n        [100000.1406],\n        [ 99999.3047]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962660.5021281}]}, "version": 1047}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.5090892}]}, "version": 1048}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962660.5122864}]}, "version": 1049}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.513263}]}, "version": 1050}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000.0938, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962660.5146313}]}, "version": 1051}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.5155013}]}, "version": 1052}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(99999.8984, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962660.5167336}]}, "version": 1053}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.5175946}]}, "version": 1054}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -7552.68896484375, "step": null, "ts": 1644962660.5186105}]}, "version": 1055}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2045450061559677, "step": null, "ts": 1644962660.6209826}]}, "version": 1056}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0859],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0859],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0156]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962660.6326973}]}, "version": 1057}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.6398218}]}, "version": 1058}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962660.6458097}]}, "version": 1059}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.6492019}]}, "version": 1060}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962660.653095}]}, "version": 1061}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.6540096}]}, "version": 1062}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962660.6550791}]}, "version": 1063}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962660.6557767}]}, "version": 1064}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962660.6568787}]}, "version": 1065}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8785760402679443, "step": null, "ts": 1644962661.1040003}]}, "version": 1066}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.2812],\n        [100000.2188],\n        [ 99999.8828],\n        [100000.2266],\n        [100000.1484],\n        [ 99998.9766],\n        [100000.2188],\n        [ 99999.8984],\n        [ 99999.9688],\n        [100000.0938],\n        [ 99999.0859],\n        [100000.3281],\n        [ 99999.8906],\n        [ 99992.5078],\n        [ 99999.5156],\n        [100001.5938],\n        [ 99998.2734],\n        [100000.1641],\n        [ 99999.8672],\n        [ 99999.0625],\n        [ 99999.8438],\n        [100000.0859],\n        [100000.4922],\n        [ 99999.7891],\n        [100000.3125],\n        [100000.1875],\n        [100000.6094],\n        [100000.0781],\n        [ 99999.2891],\n        [ 99999.8828],\n        [ 99999.7031],\n        [ 99999.8438],\n        [100000.2500],\n        [ 99998.1172],\n        [100005.3516],\n        [100000.0078],\n        [100000.0078],\n        [100000.0938],\n        [ 99999.9141],\n        [ 99999.7344],\n        [100000.3516]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962661.1126146}]}, "version": 1067}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.120623}]}, "version": 1068}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962661.1237729}]}, "version": 1069}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.1248348}]}, "version": 1070}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962661.1262712}]}, "version": 1071}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.1273248}]}, "version": 1072}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962661.1286538}]}, "version": 1073}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.1296399}]}, "version": 1074}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -1680.886962890625, "step": null, "ts": 1644962661.1306262}]}, "version": 1075}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2648722231388092, "step": null, "ts": 1644962661.214587}]}, "version": 1076}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962661.2278337}]}, "version": 1077}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.237032}]}, "version": 1078}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962661.2429702}]}, "version": 1079}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.245372}]}, "version": 1080}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962661.2466965}]}, "version": 1081}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.2472136}]}, "version": 1082}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962661.2483153}]}, "version": 1083}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.2491632}]}, "version": 1084}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962661.25036}]}, "version": 1085}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1513020992279053, "step": null, "ts": 1644962661.7355893}]}, "version": 1086}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0781],\n        [ 99999.9688],\n        [ 99999.6953],\n        [ 99998.9453],\n        [ 99999.7578],\n        [ 99999.8438],\n        [100000.1953],\n        [ 99999.9453],\n        [ 99999.9375],\n        [100029.4688],\n        [ 99999.9531],\n        [100000.5625],\n        [ 99999.5391],\n        [ 99999.9219],\n        [ 99984.4922],\n        [100000.6641],\n        [ 99999.9453],\n        [ 99999.9062],\n        [ 99999.8047],\n        [ 99998.9531],\n        [ 99999.7109],\n        [100000.0625],\n        [ 99999.9219],\n        [100001.2188],\n        [100001.6406],\n        [100000.0312],\n        [ 99999.8594],\n        [100000.3594],\n        [ 99999.8047],\n        [100000.6719],\n        [100005.6406],\n        [100000.0391],\n        [100000.1484],\n        [ 99999.7500],\n        [100000.1797],\n        [ 99998.9453],\n        [100000.1719],\n        [ 99999.1172],\n        [100000.6094],\n        [100000.0234],\n        [100000.2891]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962661.7508135}]}, "version": 1087}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.751935}]}, "version": 1088}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962661.7553937}]}, "version": 1089}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.7582538}]}, "version": 1090}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962661.7594151}]}, "version": 1091}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.7602594}]}, "version": 1092}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962661.7615154}]}, "version": 1093}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.7625473}]}, "version": 1094}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -4536.09375, "step": null, "ts": 1644962661.7635477}]}, "version": 1095}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2750304937362671, "step": null, "ts": 1644962661.8530607}]}, "version": 1096}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0703],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0703],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0078],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962661.8672493}]}, "version": 1097}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.871434}]}, "version": 1098}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962661.8773906}]}, "version": 1099}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.8812973}]}, "version": 1100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962661.8876743}]}, "version": 1101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.8886986}]}, "version": 1102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962661.8898458}]}, "version": 1103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962661.8907013}]}, "version": 1104}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962661.8916767}]}, "version": 1105}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.799963116645813, "step": null, "ts": 1644962662.328486}]}, "version": 1106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99998.8438],\n        [100001.4062],\n        [ 99999.5938],\n        [ 99999.8672],\n        [ 99999.7734],\n        [ 99999.3672],\n        [100000.8281],\n        [100002.0156],\n        [ 99999.3594],\n        [ 99999.7344],\n        [100000.0781],\n        [100000.1797],\n        [ 99999.9844],\n        [ 99999.7500],\n        [ 99999.8984],\n        [100000.0547],\n        [100030.9844],\n        [ 99999.6719],\n        [100002.0391],\n        [100000.0859],\n        [ 99999.5547],\n        [100000.0781],\n        [100000.4219],\n        [100000.6797],\n        [100000.1719],\n        [ 99999.9688],\n        [ 99999.9688],\n        [ 99999.8125],\n        [100000.1016],\n        [ 99999.3047],\n        [ 99999.9766],\n        [100001.6953],\n        [100000.1953],\n        [ 99998.0078],\n        [ 99999.8516],\n        [ 99999.9141],\n        [ 99999.7109],\n        [100000.0547],\n        [ 99999.5000],\n        [100000.2891],\n        [ 99999.8594],\n        [100000.3672]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962662.3351362}]}, "version": 1107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.3423822}]}, "version": 1108}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962662.3455288}]}, "version": 1109}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.3465285}]}, "version": 1110}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962662.3477912}]}, "version": 1111}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.3483293}]}, "version": 1112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962662.3492467}]}, "version": 1113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.3506625}]}, "version": 1114}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -5733.4384765625, "step": null, "ts": 1644962662.3515866}]}, "version": 1115}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.277946799993515, "step": null, "ts": 1644962662.4504392}]}, "version": 1116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0625],\n        [100000.0156],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962662.4592793}]}, "version": 1117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.468927}]}, "version": 1118}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962662.4750452}]}, "version": 1119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.4787831}]}, "version": 1120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962662.4801662}]}, "version": 1121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.48116}]}, "version": 1122}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962662.4825587}]}, "version": 1123}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.483568}]}, "version": 1124}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962662.4846354}]}, "version": 1125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.593 (0.593)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss nan (nan)", "step": null, "ts": 1644962662.7299435}]}, "version": 1126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.731155}]}, "version": 1127}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.804538369178772, "step": null, "ts": 1644962662.934273}]}, "version": 1128}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8203],\n        [100000.2578],\n        [100000.1094],\n        [ 99999.1719],\n        [ 99999.5469],\n        [ 99999.7812],\n        [ 99999.7188],\n        [100000.0156],\n        [ 99998.3906],\n        [ 99999.8750],\n        [ 99999.5000],\n        [ 99999.6250],\n        [100000.9844],\n        [ 99999.8281],\n        [100000.3047],\n        [100000.2266],\n        [100000.0312],\n        [100000.0469],\n        [ 99999.8516],\n        [100000.6172],\n        [100000.0312],\n        [100000.3906],\n        [ 99999.1094],\n        [ 99999.9453],\n        [100000.3438],\n        [100003.2344],\n        [100000.1797],\n        [100000.5156],\n        [ 99999.5391],\n        [ 99999.9531],\n        [100000.0156],\n        [ 99999.9062],\n        [ 99999.2422],\n        [ 99998.1172],\n        [ 99989.2812],\n        [100000.0938],\n        [ 99999.7500],\n        [100002.8047],\n        [ 99999.8594],\n        [100004.8047],\n        [100000.2266],\n        [100000.3984]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962662.9454303}]}, "version": 1129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.9492373}]}, "version": 1130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962662.9575944}]}, "version": 1131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.965799}]}, "version": 1132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962662.9668918}]}, "version": 1133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.9677067}]}, "version": 1134}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962662.9687493}]}, "version": 1135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962662.9694896}]}, "version": 1136}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2509.81787109375, "step": null, "ts": 1644962662.970297}]}, "version": 1137}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40097323060035706, "step": null, "ts": 1644962663.0605602}]}, "version": 1138}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962663.0683155}]}, "version": 1139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.07919}]}, "version": 1140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962663.0851996}]}, "version": 1141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.0888932}]}, "version": 1142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962663.0928576}]}, "version": 1143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.0934289}]}, "version": 1144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962663.0943186}]}, "version": 1145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.0948818}]}, "version": 1146}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962663.0957918}]}, "version": 1147}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8842365145683289, "step": null, "ts": 1644962663.5416627}]}, "version": 1148}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [ 99999.2500],\n        [ 99999.6328],\n        [100000.5078],\n        [100000.0234],\n        [ 99999.8516],\n        [ 99999.9375],\n        [ 99999.1562],\n        [ 99999.9688],\n        [100000.2422],\n        [100000.2578],\n        [100000.0547],\n        [ 99999.9609],\n        [ 99999.7812],\n        [100003.2422],\n        [100000.1719],\n        [100000.1328],\n        [ 99999.9062],\n        [ 99999.7812],\n        [ 99998.5703],\n        [ 99999.9531],\n        [ 99994.8828],\n        [100000.0859],\n        [100000.5781],\n        [100000.0938],\n        [100000.4219],\n        [ 99999.9297],\n        [100000.6016],\n        [100000.0547],\n        [ 99999.8516],\n        [ 99999.7500],\n        [ 99999.9297],\n        [ 99999.8828],\n        [100000.3594],\n        [ 99997.4688],\n        [100000.0469],\n        [100000.0391],\n        [100000.5703],\n        [ 99999.9453],\n        [ 99999.5312],\n        [100000.1016],\n        [ 99999.3516]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962663.5514915}]}, "version": 1149}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.561626}]}, "version": 1150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962663.5648425}]}, "version": 1151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.565968}]}, "version": 1152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962663.5674496}]}, "version": 1153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.5684524}]}, "version": 1154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962663.5696604}]}, "version": 1155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.5706115}]}, "version": 1156}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -13216.837890625, "step": null, "ts": 1644962663.571678}]}, "version": 1157}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3231256306171417, "step": null, "ts": 1644962663.6669896}]}, "version": 1158}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0781],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962663.6792035}]}, "version": 1159}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.685361}]}, "version": 1160}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962663.688748}]}, "version": 1161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.6949}]}, "version": 1162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962663.6988199}]}, "version": 1163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.699812}]}, "version": 1164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962663.7011743}]}, "version": 1165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962663.7021577}]}, "version": 1166}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962663.7034855}]}, "version": 1167}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5883556008338928, "step": null, "ts": 1644962664.1586187}]}, "version": 1168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100001.2109],\n        [ 99999.4375],\n        [100000.1484],\n        [100000.0547],\n        [ 99999.9766],\n        [100000.2422],\n        [100000.3359],\n        [ 99999.6797],\n        [ 99999.9375],\n        [100000.5625],\n        [ 99999.8828],\n        [100001.5781],\n        [ 99998.8906],\n        [ 99999.9922],\n        [100001.5781],\n        [ 99999.7812],\n        [ 99999.4062],\n        [ 99999.9375],\n        [100000.3516],\n        [100000.1328],\n        [100000.0469],\n        [ 99999.9453],\n        [100000.8672],\n        [ 99999.8828],\n        [100002.6484],\n        [100045.4062],\n        [100001.0859],\n        [ 99998.9531],\n        [ 99958.6016],\n        [ 99999.8828],\n        [100000.6016],\n        [100000.0078],\n        [100000.4219],\n        [100000.4141],\n        [100000.0625],\n        [100005.1484],\n        [ 99999.1875],\n        [ 99999.8047],\n        [ 99998.7344],\n        [ 99999.6406],\n        [100000.6016],\n        [100000.1484]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962664.1622257}]}, "version": 1169}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.1634219}]}, "version": 1170}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962664.166872}]}, "version": 1171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.1679454}]}, "version": 1172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962664.1693082}]}, "version": 1173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.170263}]}, "version": 1174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962664.1715128}]}, "version": 1175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.172472}]}, "version": 1176}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -13239.8671875, "step": null, "ts": 1644962664.1735294}]}, "version": 1177}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.39467886090278625, "step": null, "ts": 1644962664.272606}]}, "version": 1178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962664.2814443}]}, "version": 1179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.2882876}]}, "version": 1180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962664.2946486}]}, "version": 1181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.295805}]}, "version": 1182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962664.2972672}]}, "version": 1183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.2983353}]}, "version": 1184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962664.2994862}]}, "version": 1185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962664.3004043}]}, "version": 1186}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962664.3013527}]}, "version": 1187}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962664.956057}]}, "version": 1188}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.007099151611328, "step": null, "ts": 1644962664.956057}]}, "version": 1189}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962664.956057}]}, "version": 1190}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.63193279504776, "step": null, "ts": 1644962665.020274}]}, "version": 1191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.5078],\n        [ 99999.9219],\n        [ 99999.9062],\n        [100000.2734],\n        [ 99999.7969],\n        [100001.2031],\n        [100000.2188],\n        [ 99999.9531],\n        [ 99999.7109],\n        [100004.0547],\n        [ 99999.2188],\n        [ 99981.7891],\n        [ 99999.9219],\n        [ 99999.6719],\n        [ 99999.9609],\n        [ 99998.7812],\n        [ 99999.8906],\n        [ 99999.7188],\n        [ 99999.9375],\n        [100000.2891],\n        [ 99999.9453],\n        [ 99999.7109],\n        [100000.0234],\n        [ 99999.9766],\n        [100001.3672],\n        [ 99999.6484],\n        [ 99999.9766],\n        [100000.0547],\n        [ 99998.0312],\n        [100000.0312],\n        [ 99999.5469],\n        [100000.1094],\n        [100000.4062],\n        [100000.2344],\n        [ 99999.9766],\n        [ 99998.7188],\n        [ 99999.9453],\n        [100000.8906],\n        [100000.8359],\n        [ 99997.1875],\n        [100000.2578],\n        [100000.0625]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962665.0257077}]}, "version": 1192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.0301242}]}, "version": 1193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962665.0336242}]}, "version": 1194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.0409758}]}, "version": 1195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962665.0424187}]}, "version": 1196}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.0433066}]}, "version": 1197}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962665.0446727}]}, "version": 1198}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.0456233}]}, "version": 1199}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -7575.50341796875, "step": null, "ts": 1644962665.046726}]}, "version": 1200}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2800820767879486, "step": null, "ts": 1644962665.1309068}]}, "version": 1201}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0781],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0938],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962665.14628}]}, "version": 1202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.1536613}]}, "version": 1203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962665.1596806}]}, "version": 1204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.167837}]}, "version": 1205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962665.1719623}]}, "version": 1206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.17283}]}, "version": 1207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962665.1742015}]}, "version": 1208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.174902}]}, "version": 1209}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962665.1762652}]}, "version": 1210}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7197709679603577, "step": null, "ts": 1644962665.6219857}]}, "version": 1211}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.7031],\n        [100000.1172],\n        [100000.1094],\n        [100001.0078],\n        [100000.1953],\n        [ 99983.3125],\n        [100000.6250],\n        [100000.3047],\n        [100000.6484],\n        [ 99999.9062],\n        [100000.3125],\n        [ 99999.8984],\n        [ 99999.9453],\n        [100000.0859],\n        [100003.8203],\n        [ 99992.2500],\n        [100000.2969],\n        [100000.0469],\n        [100001.8828],\n        [ 99999.8594],\n        [ 99999.1406],\n        [ 99999.9375],\n        [ 99999.3750],\n        [100000.0000],\n        [ 99999.9531],\n        [ 99999.6250],\n        [100000.0547],\n        [ 99999.8750],\n        [100000.1094],\n        [100000.0859],\n        [ 99999.9609],\n        [100000.0469],\n        [ 99997.9766],\n        [ 99999.9219],\n        [100000.1719],\n        [100000.1406],\n        [100000.1016],\n        [ 99999.8906],\n        [100000.4766],\n        [ 99999.5312],\n        [ 99999.6953],\n        [100000.3281]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962665.6329708}]}, "version": 1212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.6380706}]}, "version": 1213}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962665.6415753}]}, "version": 1214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.6425533}]}, "version": 1215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962665.6436517}]}, "version": 1216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.6443725}]}, "version": 1217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962665.6454465}]}, "version": 1218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.6461484}]}, "version": 1219}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9647.8291015625, "step": null, "ts": 1644962665.6471715}]}, "version": 1220}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2542321979999542, "step": null, "ts": 1644962665.742488}]}, "version": 1221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0547],\n        [100000.0156],\n        [100000.0547],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0703],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962665.758242}]}, "version": 1222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.7646935}]}, "version": 1223}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962665.768145}]}, "version": 1224}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.776814}]}, "version": 1225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962665.7810981}]}, "version": 1226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.7818966}]}, "version": 1227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962665.7833498}]}, "version": 1228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962665.7841954}]}, "version": 1229}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962665.7851572}]}, "version": 1230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962665.8184946}]}, "version": 1231}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343175649642944, "step": null, "ts": 1644962666.2429607}]}, "version": 1232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.4219],\n        [ 99999.8906],\n        [100002.6172],\n        [ 99999.7344],\n        [100000.0234],\n        [ 99999.7266],\n        [100000.2266],\n        [ 99999.6953],\n        [ 99999.3750],\n        [100000.1094],\n        [100000.3984],\n        [ 99999.3984],\n        [100000.0703],\n        [100000.0469],\n        [100000.1953],\n        [100000.7109],\n        [100000.2891],\n        [100000.5938],\n        [ 99999.7656],\n        [100000.2500],\n        [ 99999.6562],\n        [100000.3438],\n        [ 99999.9453],\n        [ 99999.9922],\n        [100002.0547],\n        [100000.0703],\n        [100000.0469],\n        [100009.5938],\n        [100000.0391],\n        [100000.0703],\n        [ 99999.5156],\n        [ 99998.8750],\n        [100008.2109],\n        [100000.1797],\n        [ 99999.6172],\n        [100000.0703],\n        [100000.0781],\n        [100000.3828],\n        [ 99999.7578],\n        [ 99999.8672],\n        [100000.0469],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962666.2528157}]}, "version": 1233}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.2538435}]}, "version": 1234}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962666.2572548}]}, "version": 1235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.2623234}]}, "version": 1236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962666.263458}]}, "version": 1237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.264253}]}, "version": 1238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962666.265412}]}, "version": 1239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.2662528}]}, "version": 1240}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -8657.72265625, "step": null, "ts": 1644962666.2673004}]}, "version": 1241}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17047390341758728, "step": null, "ts": 1644962666.3591952}]}, "version": 1242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962666.3667417}]}, "version": 1243}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.3776758}]}, "version": 1244}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962666.3863506}]}, "version": 1245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.3898067}]}, "version": 1246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962666.3912232}]}, "version": 1247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.392139}]}, "version": 1248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962666.3935578}]}, "version": 1249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.394589}]}, "version": 1250}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962666.3955846}]}, "version": 1251}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8749032020568848, "step": null, "ts": 1644962666.8467703}]}, "version": 1252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0078],\n        [100000.5781],\n        [ 99998.8125],\n        [100000.4375],\n        [100000.1016],\n        [ 99999.9297],\n        [ 99999.9375],\n        [100000.1250],\n        [100000.0625],\n        [100000.1562],\n        [100000.0469],\n        [100002.2188],\n        [100000.7656],\n        [ 99998.6953],\n        [ 99999.8281],\n        [ 99998.9609],\n        [100000.1484],\n        [ 99999.9844],\n        [ 99999.8047],\n        [ 99998.4688],\n        [100000.1797],\n        [ 99999.5469],\n        [ 99999.9531],\n        [100001.0625],\n        [100000.0625],\n        [ 99860.2266],\n        [ 99999.9453],\n        [100000.0859],\n        [ 99999.7812],\n        [100000.2734],\n        [ 99999.9453],\n        [ 99999.9844],\n        [100003.9531],\n        [100000.0312],\n        [ 99999.6641],\n        [100000.5469],\n        [100000.1094],\n        [ 99999.6719],\n        [100000.0234],\n        [ 99967.0859],\n        [100000.1094],\n        [ 99999.5938]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962666.8590534}]}, "version": 1253}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.86424}]}, "version": 1254}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962666.8674338}]}, "version": 1255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.8680782}]}, "version": 1256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962666.8696306}]}, "version": 1257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.870227}]}, "version": 1258}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962666.8716414}]}, "version": 1259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.8722622}]}, "version": 1260}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -10338.587890625, "step": null, "ts": 1644962666.873209}]}, "version": 1261}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2737000286579132, "step": null, "ts": 1644962666.960736}]}, "version": 1262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0781],\n        [100000.0469],\n        [100000.0156],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962666.9721305}]}, "version": 1263}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.9818325}]}, "version": 1264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962666.9874759}]}, "version": 1265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.9908137}]}, "version": 1266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962666.9946225}]}, "version": 1267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.9951844}]}, "version": 1268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962666.996109}]}, "version": 1269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962666.996618}]}, "version": 1270}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962666.9974525}]}, "version": 1271}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.4247818887233734, "step": null, "ts": 1644962667.4548442}]}, "version": 1272}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.2188],\n        [100000.0859],\n        [100000.3750],\n        [ 99999.9688],\n        [100000.0234],\n        [ 99999.4297],\n        [100000.3516],\n        [100000.0156],\n        [ 99999.9453],\n        [ 99999.8984],\n        [100000.3281],\n        [ 99999.8203],\n        [ 99999.5156],\n        [100000.1719],\n        [100000.3516],\n        [ 99999.9531],\n        [100003.4844],\n        [100000.3203],\n        [100000.0078],\n        [ 99998.7969],\n        [100000.0000],\n        [100000.0391],\n        [ 99999.9922],\n        [100000.0234],\n        [100000.7188],\n        [ 99999.8984],\n        [100000.2266],\n        [100000.6484],\n        [ 99999.9844],\n        [100000.0391],\n        [ 99997.7266],\n        [100000.1016],\n        [ 99999.7578],\n        [100000.1641],\n        [100000.0469],\n        [ 99999.2422],\n        [ 99999.7344],\n        [100000.4297],\n        [100000.2734],\n        [100000.4531],\n        [100000.1953],\n        [100000.1250]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962667.471597}]}, "version": 1273}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.480229}]}, "version": 1274}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962667.4833748}]}, "version": 1275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.4842834}]}, "version": 1276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962667.4854462}]}, "version": 1277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.4863555}]}, "version": 1278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962667.4875112}]}, "version": 1279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.4884176}]}, "version": 1280}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -3453.87744140625, "step": null, "ts": 1644962667.4895463}]}, "version": 1281}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40446528792381287, "step": null, "ts": 1644962667.5812335}]}, "version": 1282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0938],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0781],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962667.5899765}]}, "version": 1283}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.5946639}]}, "version": 1284}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962667.6006887}]}, "version": 1285}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.6081245}]}, "version": 1286}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962667.6092126}]}, "version": 1287}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.6098516}]}, "version": 1288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962667.611035}]}, "version": 1289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962667.6115613}]}, "version": 1290}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962667.6123116}]}, "version": 1291}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8861421346664429, "step": null, "ts": 1644962668.0843234}]}, "version": 1292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0938],\n        [ 99996.8672],\n        [ 99999.8516],\n        [100000.5625],\n        [100000.0000],\n        [100000.0078],\n        [ 99999.9531],\n        [ 99999.9766],\n        [ 99999.2812],\n        [100000.1016],\n        [100000.1250],\n        [100000.3281],\n        [100000.3203],\n        [100000.6719],\n        [ 99997.9219],\n        [100000.1797],\n        [ 99999.8516],\n        [ 99999.6484],\n        [100000.4219],\n        [ 99999.7188],\n        [100000.1797],\n        [ 99999.9688],\n        [ 99999.5078],\n        [100000.0312],\n        [100000.1094],\n        [ 99999.7734],\n        [100000.2344],\n        [100000.1406],\n        [ 99999.5781],\n        [100000.0000],\n        [100000.3438],\n        [100000.0469],\n        [ 99998.7891],\n        [ 99999.3906],\n        [100001.2344],\n        [100000.0859],\n        [100000.0234],\n        [100000.1094],\n        [100000.5469],\n        [100000.0312],\n        [ 99999.9453],\n        [ 99999.8203]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962668.0998886}]}, "version": 1293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.101741}]}, "version": 1294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962668.1049035}]}, "version": 1295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.105807}]}, "version": 1296}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962668.106846}]}, "version": 1297}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.1074202}]}, "version": 1298}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962668.1085086}]}, "version": 1299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.110155}]}, "version": 1300}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9970.193359375, "step": null, "ts": 1644962668.1111517}]}, "version": 1301}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24977461993694305, "step": null, "ts": 1644962668.198455}]}, "version": 1302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0859],\n        [100000.0547],\n        [100000.0234],\n        [100000.0156],\n        [100000.0469],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962668.2161033}]}, "version": 1303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.219503}]}, "version": 1304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962668.2253714}]}, "version": 1305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.2317147}]}, "version": 1306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962668.2331133}]}, "version": 1307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.2339861}]}, "version": 1308}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962668.2353225}]}, "version": 1309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.2361739}]}, "version": 1310}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962668.237257}]}, "version": 1311}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.810845136642456, "step": null, "ts": 1644962668.6980362}]}, "version": 1312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.7500],\n        [ 99999.6016],\n        [ 99998.8906],\n        [ 99999.9219],\n        [100002.6328],\n        [100000.1719],\n        [ 99999.8828],\n        [100000.9453],\n        [ 99999.8594],\n        [100000.0156],\n        [100000.4766],\n        [100000.0547],\n        [ 99999.7109],\n        [ 99997.6016],\n        [100000.0312],\n        [100000.0703],\n        [ 99999.2031],\n        [ 99999.9219],\n        [100000.0312],\n        [ 99999.6875],\n        [100000.6328],\n        [100000.0000],\n        [ 99999.7969],\n        [ 99999.7109],\n        [ 99999.9844],\n        [100000.1953],\n        [ 99999.3750],\n        [ 99999.8516],\n        [100001.0391],\n        [100001.4688],\n        [ 99999.9453],\n        [100000.1094],\n        [100000.0000],\n        [ 99998.5781],\n        [ 99999.9766],\n        [ 99999.9609],\n        [ 99999.9922],\n        [ 99996.2500],\n        [ 99999.5547],\n        [100000.2031],\n        [ 99999.6484],\n        [100000.1875]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962668.7119713}]}, "version": 1313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.7200406}]}, "version": 1314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962668.723504}]}, "version": 1315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.72439}]}, "version": 1316}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962668.7257288}]}, "version": 1317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.7267113}]}, "version": 1318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962668.727781}]}, "version": 1319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.7286987}]}, "version": 1320}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -15104.958984375, "step": null, "ts": 1644962668.72968}]}, "version": 1321}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.34137779474258423, "step": null, "ts": 1644962668.8139982}]}, "version": 1322}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962668.8216987}]}, "version": 1323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.8318315}]}, "version": 1324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962668.840657}]}, "version": 1325}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.8442693}]}, "version": 1326}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962668.8456435}]}, "version": 1327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.8489876}]}, "version": 1328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962668.8500113}]}, "version": 1329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962668.850549}]}, "version": 1330}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962668.851446}]}, "version": 1331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.610 (0.610)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962669.0938854}]}, "version": 1332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.0947692}]}, "version": 1333}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117102146148682, "step": null, "ts": 1644962669.3190649}]}, "version": 1334}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8906],\n        [ 99999.7812],\n        [ 99999.2656],\n        [100000.4375],\n        [ 99993.9453],\n        [ 99999.9297],\n        [ 99999.2734],\n        [100001.7031],\n        [100003.5781],\n        [ 99999.5859],\n        [100000.1328],\n        [100006.1250],\n        [100001.7656],\n        [ 99999.8984],\n        [ 99999.9844],\n        [100000.6562],\n        [100000.0078],\n        [100000.4531],\n        [100000.0156],\n        [ 99999.7734],\n        [ 99999.4922],\n        [ 99999.8203],\n        [ 99999.9453],\n        [ 99999.2266],\n        [ 99999.6016],\n        [100000.0234],\n        [ 99999.9531],\n        [100000.2031],\n        [100000.2969],\n        [100000.1250],\n        [ 99999.9844],\n        [100000.0312],\n        [ 99999.4766],\n        [100000.0078],\n        [100000.1484],\n        [ 99999.6250],\n        [ 99999.7578],\n        [100000.0391],\n        [100001.2344],\n        [100000.0469],\n        [100000.1641],\n        [ 99999.9609]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962669.3259814}]}, "version": 1335}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.3293242}]}, "version": 1336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962669.332532}]}, "version": 1337}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.3336153}]}, "version": 1338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962669.3347144}]}, "version": 1339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.335622}]}, "version": 1340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962669.3366115}]}, "version": 1341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.3373506}]}, "version": 1342}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17729.90625, "step": null, "ts": 1644962669.3384311}]}, "version": 1343}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.14450664818286896, "step": null, "ts": 1644962669.437478}]}, "version": 1344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.1250],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962669.4520507}]}, "version": 1345}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.460813}]}, "version": 1346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962669.4683552}]}, "version": 1347}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.4708462}]}, "version": 1348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962669.4747102}]}, "version": 1349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.4756713}]}, "version": 1350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962669.4767997}]}, "version": 1351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.4777255}]}, "version": 1352}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962669.4787087}]}, "version": 1353}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8868114948272705, "step": null, "ts": 1644962669.9362803}]}, "version": 1354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.5391],\n        [ 99999.9922],\n        [ 99999.4141],\n        [100001.1016],\n        [ 99999.7812],\n        [ 99998.9453],\n        [100000.7891],\n        [ 99999.9375],\n        [ 99999.6875],\n        [ 99999.9062],\n        [100000.3281],\n        [ 99999.8672],\n        [ 99999.4375],\n        [ 99999.8750],\n        [100000.1797],\n        [100000.3281],\n        [100000.4375],\n        [100000.0234],\n        [100000.5312],\n        [ 99999.9062],\n        [100000.0078],\n        [100000.0625],\n        [100000.0703],\n        [ 99991.0859],\n        [100000.3125],\n        [100000.0859],\n        [100000.0312],\n        [ 99999.6875],\n        [ 99999.8984],\n        [ 99999.6875],\n        [100000.0938],\n        [100000.2969],\n        [ 99999.7422],\n        [100000.1875],\n        [100005.0859],\n        [100000.0391],\n        [ 99990.9531],\n        [100000.1719],\n        [100000.0234],\n        [ 99998.9141],\n        [ 99999.7969],\n        [100000.0703]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962669.9454353}]}, "version": 1355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.9522476}]}, "version": 1356}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962669.9554274}]}, "version": 1357}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.9611669}]}, "version": 1358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962669.9625592}]}, "version": 1359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.9635952}]}, "version": 1360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962669.9647958}]}, "version": 1361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962669.9657447}]}, "version": 1362}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -828.9305419921875, "step": null, "ts": 1644962669.9667637}]}, "version": 1363}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.28532618284225464, "step": null, "ts": 1644962670.0505364}]}, "version": 1364}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0938],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0859],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962670.065503}]}, "version": 1365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.0691943}]}, "version": 1366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962670.075059}]}, "version": 1367}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.0844917}]}, "version": 1368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962670.0856996}]}, "version": 1369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.0862074}]}, "version": 1370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962670.0872962}]}, "version": 1371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.0880516}]}, "version": 1372}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962670.0892565}]}, "version": 1373}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.721432089805603, "step": null, "ts": 1644962670.5622947}]}, "version": 1374}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.2266],\n        [ 99999.3203],\n        [100000.1172],\n        [ 99999.2266],\n        [100002.0078],\n        [100000.3906],\n        [100001.1172],\n        [ 99999.5625],\n        [100000.1406],\n        [100000.0078],\n        [ 99992.3672],\n        [ 99997.5547],\n        [100000.3203],\n        [100000.1328],\n        [100000.2266],\n        [ 99998.8359],\n        [100000.0312],\n        [100000.3203],\n        [100000.0391],\n        [ 99999.8594],\n        [ 99999.7031],\n        [100022.7188],\n        [ 99999.8516],\n        [100000.2969],\n        [ 99999.9062],\n        [100000.1797],\n        [100000.1797],\n        [ 99999.9922],\n        [100000.2031],\n        [ 99999.7109],\n        [100000.0156],\n        [100000.0234],\n        [100003.0625],\n        [ 99999.8984],\n        [ 99999.9375],\n        [ 99999.3516],\n        [100000.1953],\n        [ 99999.5703],\n        [ 99999.8984],\n        [100000.8359],\n        [100000.3047],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962670.5724683}]}, "version": 1375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.5736182}]}, "version": 1376}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962670.5770795}]}, "version": 1377}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.5781157}]}, "version": 1378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962670.579645}]}, "version": 1379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.5806427}]}, "version": 1380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962670.5817108}]}, "version": 1381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.5827234}]}, "version": 1382}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -11789.23828125, "step": null, "ts": 1644962670.583812}]}, "version": 1383}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3079419732093811, "step": null, "ts": 1644962670.6714754}]}, "version": 1384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0625],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962670.6875875}]}, "version": 1385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.6996632}]}, "version": 1386}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962670.7085404}]}, "version": 1387}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.712134}]}, "version": 1388}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962670.713544}]}, "version": 1389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.7145271}]}, "version": 1390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962670.71564}]}, "version": 1391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962670.716611}]}, "version": 1392}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962670.717537}]}, "version": 1393}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6897533535957336, "step": null, "ts": 1644962671.1596658}]}, "version": 1394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962671.1753986}]}, "version": 1395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0625],\n        [100000.1719],\n        [100000.0391],\n        [ 99998.8203],\n        [ 99999.5625],\n        [100000.1797],\n        [100000.0625],\n        [100000.0391],\n        [100000.6406],\n        [100003.5859],\n        [100001.0312],\n        [100000.1484],\n        [100000.0703],\n        [ 99999.9688],\n        [ 99999.9766],\n        [100000.2266],\n        [100000.0156],\n        [100000.2969],\n        [100000.0234],\n        [ 99993.8984],\n        [ 99999.1016],\n        [ 99999.8125],\n        [ 99999.8906],\n        [ 99999.8281],\n        [ 99999.9141],\n        [ 99999.9688],\n        [100000.0312],\n        [ 99999.8516],\n        [ 99999.8359],\n        [100000.1562],\n        [100000.0469],\n        [ 99999.9922],\n        [100000.5391],\n        [ 99999.5156],\n        [100000.0234],\n        [100000.1875],\n        [100000.0938],\n        [100000.0938],\n        [100000.6719],\n        [ 99999.2812],\n        [100000.0938]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962671.1777627}]}, "version": 1396}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.1788568}]}, "version": 1397}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962671.182308}]}, "version": 1398}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.183334}]}, "version": 1399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962671.184657}]}, "version": 1400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.1856227}]}, "version": 1401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962671.1867425}]}, "version": 1402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.1876981}]}, "version": 1403}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -368.4136047363281, "step": null, "ts": 1644962671.188678}]}, "version": 1404}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17014706134796143, "step": null, "ts": 1644962671.2770617}]}, "version": 1405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0703],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962671.2898135}]}, "version": 1406}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.2966988}]}, "version": 1407}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962671.3001385}]}, "version": 1408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.307699}]}, "version": 1409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962671.3117764}]}, "version": 1410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.3125095}]}, "version": 1411}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962671.313636}]}, "version": 1412}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.3146064}]}, "version": 1413}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962671.3155048}]}, "version": 1414}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6962966918945312, "step": null, "ts": 1644962671.7714908}]}, "version": 1415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.3125],\n        [100001.5469],\n        [100000.2812],\n        [100000.5391],\n        [100000.0703],\n        [ 99999.9219],\n        [ 99999.6797],\n        [100000.2891],\n        [ 99999.4609],\n        [100000.0703],\n        [100000.0703],\n        [ 99999.9297],\n        [ 99994.1172],\n        [ 99999.9531],\n        [ 99999.9844],\n        [100000.0703],\n        [100005.0312],\n        [100000.2031],\n        [ 99999.9844],\n        [100000.7109],\n        [100001.0000],\n        [100002.0547],\n        [100000.2500],\n        [ 99999.3359],\n        [ 99990.0469],\n        [ 99999.8672],\n        [ 99999.7734],\n        [100000.8281],\n        [100000.1484],\n        [100000.0234],\n        [ 99999.8672],\n        [100000.1484],\n        [100001.5938],\n        [ 99999.9688],\n        [ 99999.7500],\n        [100000.0547],\n        [ 99999.6797],\n        [ 99999.9375],\n        [100000.0469],\n        [100000.0781],\n        [ 99999.0000],\n        [100000.4609]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962671.7774236}]}, "version": 1416}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.789086}]}, "version": 1417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962671.7925053}]}, "version": 1418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.7930982}]}, "version": 1419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962671.794461}]}, "version": 1420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.7951636}]}, "version": 1421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962671.7965667}]}, "version": 1422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.7972426}]}, "version": 1423}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2072.32666015625, "step": null, "ts": 1644962671.7980666}]}, "version": 1424}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24531416594982147, "step": null, "ts": 1644962671.8904643}]}, "version": 1425}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0703],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962671.8998706}]}, "version": 1426}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.9072952}]}, "version": 1427}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962671.910759}]}, "version": 1428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.9116986}]}, "version": 1429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962671.9127977}]}, "version": 1430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.9137082}]}, "version": 1431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962671.9148114}]}, "version": 1432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962671.9156795}]}, "version": 1433}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962671.9166343}]}, "version": 1434}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.727627694606781, "step": null, "ts": 1644962672.339255}]}, "version": 1435}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 99999.8281],\n        [ 99999.9844],\n        [100001.4141],\n        [100000.3047],\n        [ 99999.9609],\n        [100000.2188],\n        [ 99996.3672],\n        [ 99999.9531],\n        [100000.0312],\n        [ 99999.2812],\n        [100000.0781],\n        [100001.8906],\n        [ 99999.6484],\n        [ 99998.8203],\n        [ 99999.9219],\n        [100000.2812],\n        [100000.0312],\n        [100000.2969],\n        [100000.2656],\n        [100000.0547],\n        [100000.0000],\n        [ 99999.1562],\n        [ 99999.8047],\n        [ 99999.9297],\n        [ 99999.7656],\n        [ 99999.0156],\n        [100000.2812],\n        [100000.2969],\n        [100000.5156],\n        [100000.0625],\n        [100000.1328],\n        [ 99998.7422],\n        [ 99999.9688],\n        [100000.0234],\n        [ 99988.1875],\n        [ 99994.1406],\n        [100000.0859],\n        [100000.0312],\n        [100001.0391],\n        [100025.9219],\n        [ 99999.9219],\n        [ 99999.8906]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962672.3494494}]}, "version": 1436}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.35546}]}, "version": 1437}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962672.3585742}]}, "version": 1438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.3595645}]}, "version": 1439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962672.3608315}]}, "version": 1440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.3617358}]}, "version": 1441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962672.3628414}]}, "version": 1442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.3636577}]}, "version": 1443}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17845.03515625, "step": null, "ts": 1644962672.3646553}]}, "version": 1444}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21221190690994263, "step": null, "ts": 1644962672.4487326}]}, "version": 1445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962672.4586606}]}, "version": 1446}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.459699}]}, "version": 1447}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962672.4628105}]}, "version": 1448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.466231}]}, "version": 1449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962672.4676206}]}, "version": 1450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.468555}]}, "version": 1451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962672.4695861}]}, "version": 1452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962672.4706235}]}, "version": 1453}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962672.4716399}]}, "version": 1454}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962674.9600987}]}, "version": 1455}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.146614074707031, "step": null, "ts": 1644962674.9600987}]}, "version": 1456}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962674.9600987}]}, "version": 1457}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962674.9600987}]}, "version": 1458}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962676.600963}]}, "version": 1459}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962684.964803}]}, "version": 1460}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.151424407958984, "step": null, "ts": 1644962684.964803}]}, "version": 1461}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962684.964803}]}, "version": 1462}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962684.964803}]}, "version": 1463}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.655 (0.655)\tD 0.537 (0.537)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1043 (0.1043)", "step": null, "ts": 1644962686.9024422}]}, "version": 1464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962686.9164212}]}, "version": 1465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.471 (0.476)\tD 0.347 (0.355)\tT@1 65.079 (80.952)\tT@5 98.413 (95.094)\tL 0.9167 (0.7286)", "step": null, "ts": 1644962691.4813879}]}, "version": 1466}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962691.4927397}]}, "version": 1467}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962696.8327038}]}, "version": 1468}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962694.9689426}]}, "version": 1469}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.065765380859375, "step": null, "ts": 1644962694.9689426}]}, "version": 1470}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962694.9689426}]}, "version": 1471}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962705.9366415}]}, "version": 1472}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962706.7610273}]}, "version": 1473}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644962706.7637308}]}, "version": 1474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962706.7648737}]}, "version": 1475}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962706.8370647}]}, "version": 1476}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.136379241943359, "step": null, "ts": 1644962706.8370647}]}, "version": 1477}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962706.8370647}]}, "version": 1478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.668 (0.668)\tLoss 0.1043 (0.1043)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644962707.4355013}]}, "version": 1479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962707.4502687}]}, "version": 1480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.471 (0.475)\tLoss 0.9167 (0.7286)\tPrec@1 65.079 (80.952)\tPrec@5 98.413 (95.094)", "step": null, "ts": 1644962711.9975307}]}, "version": 1481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962712.004829}]}, "version": 1482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644962712.6723177}]}, "version": 1483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962712.6735587}]}, "version": 1484}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.133, Prec@1 89.308", "step": null, "ts": 1644962712.8083687}]}, "version": 1485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962712.8094394}]}, "version": 1486}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.109, Prec@1 90.063", "step": null, "ts": 1644962712.8923817}]}, "version": 1487}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962712.8935063}]}, "version": 1488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.093, Prec@1 89.308", "step": null, "ts": 1644962712.9550095}]}, "version": 1489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962712.9562194}]}, "version": 1490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.085, Prec@1 88.931", "step": null, "ts": 1644962713.0173182}]}, "version": 1491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.0182598}]}, "version": 1492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.081, Prec@1 88.931", "step": null, "ts": 1644962713.0790699}]}, "version": 1493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.08026}]}, "version": 1494}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 87.799", "step": null, "ts": 1644962713.1984892}]}, "version": 1495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.1995676}]}, "version": 1496}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.030, Prec@1 89.057", "step": null, "ts": 1644962713.2584097}]}, "version": 1497}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.2595456}]}, "version": 1498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.040, Prec@1 89.182", "step": null, "ts": 1644962713.3183508}]}, "version": 1499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.3193803}]}, "version": 1500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.045, Prec@1 89.182", "step": null, "ts": 1644962713.3784218}]}, "version": 1501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.379494}]}, "version": 1502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.048, Prec@1 88.931", "step": null, "ts": 1644962713.4376101}]}, "version": 1503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962713.4388325}]}, "version": 1504}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 80.00000184257075, "step": null, "ts": 1644962714.2064788}]}, "version": 1505}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0801838636398315, "step": null, "ts": 1644962715.4798367}]}, "version": 1506}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0703],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.1016],\n        [100000.0469],\n        [100000.0156],\n        [100000.0703],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962715.497349}]}, "version": 1507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.498328}]}, "version": 1508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962715.5017402}]}, "version": 1509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.5063813}]}, "version": 1510}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962715.5075374}]}, "version": 1511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.5085282}]}, "version": 1512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962715.509725}]}, "version": 1513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.510433}]}, "version": 1514}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2417.71435546875, "step": null, "ts": 1644962715.5114453}]}, "version": 1515}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22868488729000092, "step": null, "ts": 1644962715.602916}]}, "version": 1516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0547],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962715.6159403}]}, "version": 1517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.6217275}]}, "version": 1518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962715.6278079}]}, "version": 1519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.6378186}]}, "version": 1520}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962715.6392982}]}, "version": 1521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.6401966}]}, "version": 1522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962715.6416235}]}, "version": 1523}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.6424344}]}, "version": 1524}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962715.643353}]}, "version": 1525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.024995", "step": null, "ts": 1644962715.8899403}]}, "version": 1526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962715.8910325}]}, "version": 1527}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.196808099746704, "step": null, "ts": 1644962716.0652668}]}, "version": 1528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0781],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0859],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.1094],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962716.0820434}]}, "version": 1529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.0891714}]}, "version": 1530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962716.092319}]}, "version": 1531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.093175}]}, "version": 1532}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962716.0944161}]}, "version": 1533}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.095244}]}, "version": 1534}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962716.0964339}]}, "version": 1535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.0973618}]}, "version": 1536}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9302.443359375, "step": null, "ts": 1644962716.0985236}]}, "version": 1537}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.30270904302597046, "step": null, "ts": 1644962716.18622}]}, "version": 1538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0781],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.1172],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962716.2002735}]}, "version": 1539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.2088814}]}, "version": 1540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962716.2125952}]}, "version": 1541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.2157936}]}, "version": 1542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962716.219716}]}, "version": 1543}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.2212636}]}, "version": 1544}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962716.2223208}]}, "version": 1545}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.2228901}]}, "version": 1546}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962716.2237399}]}, "version": 1547}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2110499143600464, "step": null, "ts": 1644962716.64705}]}, "version": 1548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0156],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0625],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0703],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962716.656109}]}, "version": 1549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.6641984}]}, "version": 1550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962716.6673892}]}, "version": 1551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.6682913}]}, "version": 1552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962716.669544}]}, "version": 1553}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.6705596}]}, "version": 1554}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962716.6717424}]}, "version": 1555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.6726606}]}, "version": 1556}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -10246.50390625, "step": null, "ts": 1644962716.6736903}]}, "version": 1557}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2789945602416992, "step": null, "ts": 1644962716.765522}]}, "version": 1558}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0938],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0078],\n        [100000.0312],\n        [100000.0234],\n        [100000.0938],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962716.7774963}]}, "version": 1559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.7811444}]}, "version": 1560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962716.787247}]}, "version": 1561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.7945967}]}, "version": 1562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962716.7959375}]}, "version": 1563}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.7969172}]}, "version": 1564}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962716.7982068}]}, "version": 1565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962716.7992961}]}, "version": 1566}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962716.8005164}]}, "version": 1567}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962716.8409429}]}, "version": 1568}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.981956481933594, "step": null, "ts": 1644962716.8409429}]}, "version": 1569}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 58.0, "step": null, "ts": 1644962716.8409429}]}, "version": 1570}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.9307861328125, "step": null, "ts": 1644962716.8409429}]}, "version": 1571}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1909037828445435, "step": null, "ts": 1644962717.231803}]}, "version": 1572}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0625],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0781],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0078],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0625],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962717.2425075}]}, "version": 1573}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.243551}]}, "version": 1574}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962717.247001}]}, "version": 1575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.2479382}]}, "version": 1576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962717.2494092}]}, "version": 1577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.2502735}]}, "version": 1578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962717.2515147}]}, "version": 1579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.2523422}]}, "version": 1580}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -3891.368896484375, "step": null, "ts": 1644962717.253392}]}, "version": 1581}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.32324567437171936, "step": null, "ts": 1644962717.3413858}]}, "version": 1582}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0547],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962717.350853}]}, "version": 1583}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.3598142}]}, "version": 1584}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962717.368564}]}, "version": 1585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.3722596}]}, "version": 1586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962717.3735876}]}, "version": 1587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.3745782}]}, "version": 1588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962717.375656}]}, "version": 1589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.3765473}]}, "version": 1590}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962717.377555}]}, "version": 1591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.570 (0.570)\tDT 0.000 (0.000)\tS@1 90.476 (90.476)\tLoss nan (nan)", "step": null, "ts": 1644962717.620062}]}, "version": 1592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.6211123}]}, "version": 1593}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1164875030517578, "step": null, "ts": 1644962717.8148546}]}, "version": 1594}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0156],\n        [100000.0547],\n        [100000.0156],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0078],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0625]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962717.8245678}]}, "version": 1595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.8323321}]}, "version": 1596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962717.835433}]}, "version": 1597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.836399}]}, "version": 1598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962717.8377466}]}, "version": 1599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.83866}]}, "version": 1600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962717.8397417}]}, "version": 1601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.8402832}]}, "version": 1602}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -11835.287109375, "step": null, "ts": 1644962717.8412242}]}, "version": 1603}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24748939275741577, "step": null, "ts": 1644962717.9352999}]}, "version": 1604}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0625],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0156],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962717.9503927}]}, "version": 1605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.9529371}]}, "version": 1606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962717.9569392}]}, "version": 1607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.9646583}]}, "version": 1608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962717.968565}]}, "version": 1609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.9694858}]}, "version": 1610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962717.9707286}]}, "version": 1611}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962717.9716482}]}, "version": 1612}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962717.972579}]}, "version": 1613}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1189969778060913, "step": null, "ts": 1644962718.4288583}]}, "version": 1614}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0938],\n        [100000.0781],\n        [100000.0391],\n        [100000.0859],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962718.4400396}]}, "version": 1615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.4410563}]}, "version": 1616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962718.444538}]}, "version": 1617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.4495957}]}, "version": 1618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962718.4509225}]}, "version": 1619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.4519117}]}, "version": 1620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962718.453374}]}, "version": 1621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.454261}]}, "version": 1622}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -3476.903564453125, "step": null, "ts": 1644962718.4554722}]}, "version": 1623}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3715954124927521, "step": null, "ts": 1644962718.5455759}]}, "version": 1624}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962718.5589855}]}, "version": 1625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.5633492}]}, "version": 1626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962718.575476}]}, "version": 1627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.5787072}]}, "version": 1628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962718.5799425}]}, "version": 1629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.5806046}]}, "version": 1630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962718.5816896}]}, "version": 1631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962718.5822525}]}, "version": 1632}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962718.5831327}]}, "version": 1633}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.157355785369873, "step": null, "ts": 1644962719.0482235}]}, "version": 1634}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0078],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0625],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.1641],\n        [100000.0312],\n        [100000.0781],\n        [100000.0469],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962719.0567691}]}, "version": 1635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.0619211}]}, "version": 1636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962719.0653424}]}, "version": 1637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.0694642}]}, "version": 1638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962719.0705416}]}, "version": 1639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.071298}]}, "version": 1640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962719.0724518}]}, "version": 1641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.0732355}]}, "version": 1642}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17752.9296875, "step": null, "ts": 1644962719.0742114}]}, "version": 1643}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10372046381235123, "step": null, "ts": 1644962719.174162}]}, "version": 1644}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0859],\n        [100000.0469],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962719.1852806}]}, "version": 1645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.1886406}]}, "version": 1646}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962719.194489}]}, "version": 1647}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.1986396}]}, "version": 1648}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962719.199861}]}, "version": 1649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.2004242}]}, "version": 1650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962719.2014625}]}, "version": 1651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.2020998}]}, "version": 1652}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962719.2031527}]}, "version": 1653}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962719.2250476}]}, "version": 1654}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0664057731628418, "step": null, "ts": 1644962719.6624787}]}, "version": 1655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0938],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0781],\n        [100000.0312],\n        [100000.1406],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0078],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962719.6686177}]}, "version": 1656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.673044}]}, "version": 1657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962719.6765053}]}, "version": 1658}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.6799517}]}, "version": 1659}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962719.681407}]}, "version": 1660}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.68232}]}, "version": 1661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962719.6833856}]}, "version": 1662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.6879349}]}, "version": 1663}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -10707.021484375, "step": null, "ts": 1644962719.689064}]}, "version": 1664}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18922635912895203, "step": null, "ts": 1644962719.7729626}]}, "version": 1665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0625],\n        [100000.0859],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0703],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962719.7840514}]}, "version": 1666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.7910323}]}, "version": 1667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962719.7968473}]}, "version": 1668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.8003304}]}, "version": 1669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962719.8014224}]}, "version": 1670}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.802331}]}, "version": 1671}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962719.8035245}]}, "version": 1672}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962719.8041909}]}, "version": 1673}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962719.8049815}]}, "version": 1674}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0183806419372559, "step": null, "ts": 1644962720.2637575}]}, "version": 1675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0625],\n        [100000.0156],\n        [100000.0547],\n        [100000.0625],\n        [100000.1328],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962720.2721095}]}, "version": 1676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.2792113}]}, "version": 1677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962720.2827358}]}, "version": 1678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.283835}]}, "version": 1679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962720.2852829}]}, "version": 1680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.286318}]}, "version": 1681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962720.2875943}]}, "version": 1682}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.288566}]}, "version": 1683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2486.7919921875, "step": null, "ts": 1644962720.289774}]}, "version": 1684}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21664215624332428, "step": null, "ts": 1644962720.385889}]}, "version": 1685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962720.39194}]}, "version": 1686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.398646}]}, "version": 1687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962720.4044106}]}, "version": 1688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.412749}]}, "version": 1689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962720.41412}]}, "version": 1690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.415059}]}, "version": 1691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962720.4164886}]}, "version": 1692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.4174078}]}, "version": 1693}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962720.418518}]}, "version": 1694}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9597495198249817, "step": null, "ts": 1644962720.8802967}]}, "version": 1695}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0703],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962720.8958492}]}, "version": 1696}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.9012222}]}, "version": 1697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962720.904704}]}, "version": 1698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.9112034}]}, "version": 1699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962720.9126155}]}, "version": 1700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.913619}]}, "version": 1701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962720.9147413}]}, "version": 1702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962720.9157968}]}, "version": 1703}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -11558.9765625, "step": null, "ts": 1644962720.9171}]}, "version": 1704}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.13785845041275024, "step": null, "ts": 1644962721.0020099}]}, "version": 1705}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0078],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962721.0104504}]}, "version": 1706}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.0198195}]}, "version": 1707}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962721.027345}]}, "version": 1708}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.0294316}]}, "version": 1709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962721.0333207}]}, "version": 1710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.0343294}]}, "version": 1711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962721.035663}]}, "version": 1712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.0363798}]}, "version": 1713}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962721.0373251}]}, "version": 1714}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1185952425003052, "step": null, "ts": 1644962721.5052428}]}, "version": 1715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0938],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0625],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962721.519488}]}, "version": 1716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.52685}]}, "version": 1717}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962721.5303533}]}, "version": 1718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.534696}]}, "version": 1719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962721.5360622}]}, "version": 1720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.5370224}]}, "version": 1721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962721.5384576}]}, "version": 1722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.5393782}]}, "version": 1723}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -9762.9619140625, "step": null, "ts": 1644962721.5404823}]}, "version": 1724}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22079570591449738, "step": null, "ts": 1644962721.6361852}]}, "version": 1725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0547],\n        [100000.0078],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0078],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0547]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962721.6461604}]}, "version": 1726}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.6524298}]}, "version": 1727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962721.6602376}]}, "version": 1728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.6638162}]}, "version": 1729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962721.6656673}]}, "version": 1730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.670005}]}, "version": 1731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962721.6713254}]}, "version": 1732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962721.671901}]}, "version": 1733}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962721.672788}]}, "version": 1734}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0773555040359497, "step": null, "ts": 1644962722.114764}]}, "version": 1735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.1719],\n        [100000.0234],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962722.1244357}]}, "version": 1736}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.1254215}]}, "version": 1737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962722.1286619}]}, "version": 1738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.1296384}]}, "version": 1739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962722.1307368}]}, "version": 1740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.1313782}]}, "version": 1741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962722.1326244}]}, "version": 1742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.133519}]}, "version": 1743}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -10614.91796875, "step": null, "ts": 1644962722.1345544}]}, "version": 1744}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3675522804260254, "step": null, "ts": 1644962722.2306852}]}, "version": 1745}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0547],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0312],\n        [100000.0547],\n        [100000.0391],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962722.2452729}]}, "version": 1746}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.2497206}]}, "version": 1747}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962722.2528102}]}, "version": 1748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.2579432}]}, "version": 1749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962722.2602518}]}, "version": 1750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.261144}]}, "version": 1751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962722.2625225}]}, "version": 1752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.263175}]}, "version": 1753}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962722.2641811}]}, "version": 1754}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.033692717552185, "step": null, "ts": 1644962722.7035868}]}, "version": 1755}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0156],\n        [100000.0547],\n        [100000.0234],\n        [100000.0234],\n        [100000.0625],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0234],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0547],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0156],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962722.7159567}]}, "version": 1756}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.7169447}]}, "version": 1757}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962722.7204645}]}, "version": 1758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.7215137}]}, "version": 1759}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962722.7226906}]}, "version": 1760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.723722}]}, "version": 1761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962722.724888}]}, "version": 1762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.725763}]}, "version": 1763}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -8381.41015625, "step": null, "ts": 1644962722.7268229}]}, "version": 1764}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18653355538845062, "step": null, "ts": 1644962722.8174608}]}, "version": 1765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0234],\n        [100000.0312],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0469],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0469],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962722.8414752}]}, "version": 1766}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.8450658}]}, "version": 1767}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962722.8484526}]}, "version": 1768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.8566556}]}, "version": 1769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962722.857845}]}, "version": 1770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.8587215}]}, "version": 1771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962722.8598657}]}, "version": 1772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962722.8606925}]}, "version": 1773}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962722.8616846}]}, "version": 1774}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1522963047027588, "step": null, "ts": 1644962723.326152}]}, "version": 1775}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.1016],\n        [100000.0156],\n        [100000.0391],\n        [100000.1016],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0547],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0469],\n        [100000.0469],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0391],\n        [100000.0156],\n        [100000.0234],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962723.345884}]}, "version": 1776}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.3529816}]}, "version": 1777}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962723.3563864}]}, "version": 1778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.357104}]}, "version": 1779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962723.3583121}]}, "version": 1780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.3591447}]}, "version": 1781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962723.360229}]}, "version": 1782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.3608084}]}, "version": 1783}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -2717.050537109375, "step": null, "ts": 1644962723.3616173}]}, "version": 1784}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1948683112859726, "step": null, "ts": 1644962723.4602654}]}, "version": 1785}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0234],\n        [100000.0156],\n        [100000.0469],\n        [100000.0234],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0469],\n        [100000.0312],\n        [100000.0234],\n        [100000.0781],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962723.4683096}]}, "version": 1786}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.4720337}]}, "version": 1787}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962723.4800572}]}, "version": 1788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.4888167}]}, "version": 1789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962723.492814}]}, "version": 1790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.4935417}]}, "version": 1791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962723.4946933}]}, "version": 1792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.495292}]}, "version": 1793}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962723.4962356}]}, "version": 1794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.631 (0.631)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss nan (nan)", "step": null, "ts": 1644962723.7393475}]}, "version": 1795}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.7406552}]}, "version": 1796}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2505017518997192, "step": null, "ts": 1644962723.9353468}]}, "version": 1797}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0391],\n        [100000.0391],\n        [100000.0469],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0312],\n        [100000.0234],\n        [100000.0156],\n        [100000.0312],\n        [100000.0469],\n        [100000.0156],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0312],\n        [100000.0391]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962723.9462206}]}, "version": 1798}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.9530318}]}, "version": 1799}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962723.956511}]}, "version": 1800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.9575803}]}, "version": 1801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962723.9587266}]}, "version": 1802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.9598222}]}, "version": 1803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962723.96127}]}, "version": 1804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962723.962265}]}, "version": 1805}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": -17062.15625, "step": null, "ts": 1644962723.963257}]}, "version": 1806}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.33999207615852356, "step": null, "ts": 1644962724.0605905}]}, "version": 1807}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000.0234],\n        [100000.0312],\n        [100000.0469],\n        [100000.0391],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0312],\n        [100000.0312],\n        [100000.0703],\n        [100000.0312],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0391],\n        [100000.0312],\n        [100000.0234],\n        [100000.0469],\n        [100000.0156],\n        [100000.0391],\n        [100000.0312],\n        [100000.0547],\n        [100000.0312],\n        [100000.0312],\n        [100000.0391],\n        [100000.0625],\n        [100000.0312],\n        [100000.0312],\n        [100000.0156],\n        [100000.0469],\n        [100000.0234],\n        [100000.0312],\n        [100000.0391],\n        [100000.0234],\n        [100000.0312]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962724.0682676}]}, "version": 1808}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962724.075341}]}, "version": 1809}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        ...,\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.],\n        [100000., 100000., 100000.,  ..., 100000., 100000., 100000.]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962724.081287}]}, "version": 1810}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962724.086668}]}, "version": 1811}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962724.088036}]}, "version": 1812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962724.0890212}]}, "version": 1813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(100000., device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962724.0904243}]}, "version": 1814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962724.0913486}]}, "version": 1815}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962724.0923958}]}, "version": 1816}
