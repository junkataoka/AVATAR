{"obj": {"type": "AssignString", "path": ["sys", "name"], "value": "Untitled"}, "version": 1}
{"obj": {"type": "AssignString", "path": ["sys", "description"], "value": ""}, "version": 2}
{"obj": {"type": "AssignString", "path": ["sys", "hostname"], "value": "compute130"}, "version": 3}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": false}, "version": 4}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stdout"]}, "version": 5}
{"obj": {"type": "ClearStringLog", "path": ["monitoring", "stderr"]}, "version": 6}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "cpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 7}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "cpu"]}, "version": 8}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "memory"], "min": 0.0, "max": 125.80869674682617, "unit": "GB"}, "version": 9}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "memory"]}, "version": 10}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 11}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu"]}, "version": 12}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu_memory"], "min": 0.0, "max": 11.9124755859375, "unit": "GB"}, "version": 13}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu_memory"]}, "version": 14}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962765.2884002}]}, "version": 15}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.380664825439453, "step": null, "ts": 1644962765.2884002}]}, "version": 16}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 0.9229736328125, "step": null, "ts": 1644962765.2884002}]}, "version": 17}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "", "step": null, "ts": 1644962765.2985744}]}, "version": 18}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "https://app.neptune.ai/junkataoka/SRDC/e/SRDC-248\n", "step": null, "ts": 1644962765.2998292}]}, "version": 19}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Remember to stop your run once you\u2019ve finished logging your metadata (https://docs.neptune.ai/api-reference/run#stop). It will be stopped automatically only when the notebook kernel/interactive console is terminated.\n", "step": null, "ts": 1644962765.3009136}]}, "version": 20}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "begin training", "step": null, "ts": 1644962765.4168427}]}, "version": 21}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962765.4184265}]}, "version": 22}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.4, "step": null, "ts": 1644962775.2986474}]}, "version": 23}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.798145294189453, "step": null, "ts": 1644962775.2986474}]}, "version": 24}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962775.2986474}]}, "version": 25}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 4.0382080078125, "step": null, "ts": 1644962775.2986474}]}, "version": 26}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.872 (0.872)\tD 0.751 (0.751)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1956 (0.1956)", "step": null, "ts": 1644962781.3561776}]}, "version": 27}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962781.3638644}]}, "version": 28}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962785.3036582}]}, "version": 29}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.733188629150391, "step": null, "ts": 1644962785.3036582}]}, "version": 30}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 4.0, "step": null, "ts": 1644962785.3036582}]}, "version": 31}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9600830078125, "step": null, "ts": 1644962785.3036582}]}, "version": 32}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.474 (0.498)\tD 0.356 (0.380)\tT@1 76.190 (81.530)\tT@5 100.000 (94.517)\tL 0.8891 (0.7919)", "step": null, "ts": 1644962785.9476154}]}, "version": 33}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962785.9606555}]}, "version": 34}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962791.946107}]}, "version": 35}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.4, "step": null, "ts": 1644962795.3080778}]}, "version": 36}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.671684265136719, "step": null, "ts": 1644962795.3080778}]}, "version": 37}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644962795.3080778}]}, "version": 38}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962801.0835648}]}, "version": 39}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962801.9899268}]}, "version": 40}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644962801.9925852}]}, "version": 41}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962801.9933553}]}, "version": 42}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.668 (0.668)\tLoss 0.1956 (0.1956)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644962802.6645875}]}, "version": 43}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962802.6782544}]}, "version": 44}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962805.3118122}]}, "version": 45}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.769481658935547, "step": null, "ts": 1644962805.3118122}]}, "version": 46}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 3.9327392578125, "step": null, "ts": 1644962805.3118122}]}, "version": 47}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.480 (0.474)\tLoss 0.8891 (0.7919)\tPrec@1 76.190 (81.530)\tPrec@5 100.000 (94.517)", "step": null, "ts": 1644962807.205409}]}, "version": 48}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962807.211202}]}, "version": 49}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 81.132, Prec@5 94.843", "step": null, "ts": 1644962807.8689022}]}, "version": 50}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962807.8698344}]}, "version": 51}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.012, Prec@1 74.465", "step": null, "ts": 1644962807.8830929}]}, "version": 52}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962807.8841436}]}, "version": 53}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.061, Prec@1 81.258", "step": null, "ts": 1644962807.9926472}]}, "version": 54}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962807.9937613}]}, "version": 55}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.062, Prec@1 82.013", "step": null, "ts": 1644962808.056893}]}, "version": 56}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.0579987}]}, "version": 57}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.062, Prec@1 82.138", "step": null, "ts": 1644962808.1204345}]}, "version": 58}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.1214144}]}, "version": 59}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.063, Prec@1 82.642", "step": null, "ts": 1644962808.183676}]}, "version": 60}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.184734}]}, "version": 61}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 77.610", "step": null, "ts": 1644962808.3098907}]}, "version": 62}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.3108892}]}, "version": 63}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.031, Prec@1 83.648", "step": null, "ts": 1644962808.371157}]}, "version": 64}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.3724654}]}, "version": 65}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.041, Prec@1 85.283", "step": null, "ts": 1644962808.4330676}]}, "version": 66}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.4339895}]}, "version": 67}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.046, Prec@1 86.038", "step": null, "ts": 1644962808.494001}]}, "version": 68}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.4954588}]}, "version": 69}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.050, Prec@1 86.289", "step": null, "ts": 1644962808.5566154}]}, "version": 70}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962808.5574381}]}, "version": 71}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644962808.9678185}]}, "version": 72}
{"obj": {"type": "LogFloats", "path": ["metrics", "best_acc"], "values": [{"value": 81.13207617705723, "step": null, "ts": 1644962809.0036287}]}, "version": 73}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8525060415267944, "step": null, "ts": 1644962811.09662}]}, "version": 74}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962811.1067216}]}, "version": 75}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Warning: string series 'monitoring/stdout' value was longer than 1000 characters and was truncated. This warning is printed only once per series.\n", "step": null, "ts": 1644962811.1079779}]}, "version": 76}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-4.2631e-01],\n        [-2.7165e-02],\n        [ 8.0373e-04],\n        [ 1.8350e-01],\n        [-6.2864e-02],\n        [ 2.9917e-01],\n        [ 8.8058e-03],\n        [ 1.4242e-01],\n        [-5.6302e-02],\n        [-5.9111e-02],\n        [ 3.5956e-01],\n        [ 1.6269e+00],\n        [ 1.1717e+00],\n        [ 1.1237e+00],\n        [ 6.9754e-01],\n        [ 1.9855e+00],\n        [ 7.5621e-02],\n        [-1.0541e-01],\n        [ 2.4161e-01],\n        [-3.8986e-01],\n        [ 2.0752e-01],\n        [ 4.2145e-01],\n        [-2.2706e-01],\n        [ 2.8464e-01],\n        [-1.1450e-03],\n        [-8.6535e-03],\n        [-5.3740e-02],\n        [-1.9969e-01],\n        [ 4.3139e+00],\n        [ 2.3233e-01],\n        [-4.3655e-02],\n        [ 2.2516e-02],\n        [ 1.3999e-01],\n        [ 8.7957e-02],\n        [ 5.7786e-02],\n        [ 1.4499e-01],\n        [-5.5560e-02],\n        [-3.7084e-01],\n        [ 2.1787e-02],\n        [ 4.2326e-02],\n        [-2.0079e+00],\n        [-2.6457e+00]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962811.1065536}]}, "version": 77}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.110135}]}, "version": 78}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1033,  0.3654,  0.1163,  ..., -0.0103, -0.5729,  0.4741],\n        [-0.2962, -0.1067,  0.4274,  ...,  0.5489,  0.3833,  0.1004],\n        [-0.0329,  0.0970,  0.2275,  ...,  0.1708,  0.1130,  0.0468],\n        ...,\n        [-0.0143,  0.0096,  0.1091,  ...,  0.0680,  0.1196,  0.1877],\n        [ 0.5490, -0.1318, -0.7787,  ..., -0.9138, -0.3177,  2.4573],\n        [-0.2287, -0.4375, -0.2812,  ..., -0.2563,  0.2928,  0.2160]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962811.11512}]}, "version": 79}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.1159277}]}, "version": 80}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(30.2350, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962811.1178973}]}, "version": 81}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.1186721}]}, "version": 82}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-24.3986, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962811.1205187}]}, "version": 83}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.1213703}]}, "version": 84}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962811.123218}]}, "version": 85}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.32100024819374084, "step": null, "ts": 1644962811.2222054}]}, "version": 86}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0192],\n        [0.0293],\n        [0.0238],\n        [0.0358],\n        [0.0297],\n        [0.0280],\n        [0.0307],\n        [0.0329],\n        [0.0425],\n        [0.0295],\n        [0.0332],\n        [0.0435],\n        [0.0322],\n        [0.0313],\n        [0.0421],\n        [0.0279],\n        [0.0141],\n        [0.0424],\n        [0.0221],\n        [0.0326],\n        [0.0329],\n        [0.0261],\n        [0.0225],\n        [0.0259],\n        [0.0167],\n        [0.0374],\n        [0.0325],\n        [0.0266],\n        [0.0315],\n        [0.0214],\n        [0.0315],\n        [0.0448],\n        [0.0306],\n        [0.0288],\n        [0.0210],\n        [0.0585],\n        [0.0411],\n        [0.0260],\n        [0.0550],\n        [0.0215],\n        [0.0366],\n        [0.0323]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962811.2338374}]}, "version": 87}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.2399423}]}, "version": 88}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0374, 0.0272, 0.0320,  ..., 0.0182, 0.0209, 0.0354],\n        [0.0205, 0.0184, 0.0237,  ..., 0.0234, 0.0275, 0.0252],\n        [0.0329, 0.0284, 0.0224,  ..., 0.0207, 0.0288, 0.0261],\n        ...,\n        [0.0376, 0.0245, 0.0291,  ..., 0.0195, 0.0163, 0.0260],\n        [0.0382, 0.0330, 0.0162,  ..., 0.0233, 0.0304, 0.0237],\n        [0.0289, 0.0380, 0.0267,  ..., 0.0183, 0.0209, 0.0461]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962811.247418}]}, "version": 89}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.2479858}]}, "version": 90}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1516, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962811.2490067}]}, "version": 91}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.2495143}]}, "version": 92}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0046, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962811.2505004}]}, "version": 93}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962811.2514706}]}, "version": 94}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4514026641845703, "step": null, "ts": 1644962811.2524548}]}, "version": 95}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 2.020 (2.020)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962812.3742456}]}, "version": 96}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.3756602}]}, "version": 97}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.000000", "step": null, "ts": 1644962812.377482}]}, "version": 98}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.378517}]}, "version": 99}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6724255084991455, "step": null, "ts": 1644962812.590554}]}, "version": 100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.6648],\n        [ 0.1331],\n        [ 0.0678],\n        [-0.2904],\n        [ 0.0806],\n        [ 0.0107],\n        [ 0.3707],\n        [-0.1173],\n        [-0.0895],\n        [-1.1791],\n        [-0.5323],\n        [-0.0053],\n        [ 0.1394],\n        [ 0.2113],\n        [ 0.0300],\n        [-0.0222],\n        [ 0.2438],\n        [-0.0432],\n        [ 0.3021],\n        [-0.0957],\n        [-0.2933],\n        [-0.1727],\n        [ 0.3297],\n        [ 0.0224],\n        [-0.4467],\n        [-0.1966],\n        [ 0.0144],\n        [ 0.1301],\n        [ 0.3464],\n        [-0.4679],\n        [-0.4980],\n        [-0.0670],\n        [-0.0562],\n        [ 0.1953],\n        [ 0.6331],\n        [ 0.1868],\n        [-0.4909],\n        [ 0.0287],\n        [-0.5073],\n        [-0.0158],\n        [-0.0249],\n        [-1.7532]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962812.5985372}]}, "version": 101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.6050103}]}, "version": 102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-3.1977e+00, -1.9569e+01,  1.7599e+01,  ..., -1.6432e-01,\n          6.4301e-01,  1.3720e+01],\n        [ 3.3745e-01,  3.3750e-02,  4.0131e-01,  ..., -2.5574e-01,\n          1.9424e-01,  3.3921e-02],\n        [-6.1091e-02,  9.8385e-02,  8.7442e-02,  ...,  6.9995e-02,\n         -9.8870e-02,  2.5651e-01],\n        ...,\n        [ 1.7558e-01, -1.5528e-01,  1.3189e-01,  ...,  4.2266e-01,\n          1.4397e-01, -2.0312e-01],\n        [ 4.3257e-02, -4.9103e-02,  2.2681e-01,  ...,  2.4046e-01,\n          1.1261e-01,  1.3645e-02],\n        [ 1.5175e-01, -1.4913e-01,  7.3486e-01,  ..., -7.8762e-02,\n          5.5005e-01,  6.8047e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962812.6081996}]}, "version": 103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.6092322}]}, "version": 104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(29.7232, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962812.6109724}]}, "version": 105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.6119127}]}, "version": 106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-38.1625, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962812.613559}]}, "version": 107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.6145272}]}, "version": 108}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962812.6158388}]}, "version": 109}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24318927526474, "step": null, "ts": 1644962812.7203333}]}, "version": 110}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0248],\n        [0.0350],\n        [0.0289],\n        [0.0146],\n        [0.0357],\n        [0.0190],\n        [0.0292],\n        [0.0347],\n        [0.0138],\n        [0.0239],\n        [0.0376],\n        [0.0457],\n        [0.0527],\n        [0.0339],\n        [0.0240],\n        [0.0289],\n        [0.0363],\n        [0.0468],\n        [0.0527],\n        [0.0433],\n        [0.0259],\n        [0.0225],\n        [0.0454],\n        [0.0281],\n        [0.0429],\n        [0.0495],\n        [0.0848],\n        [0.0488],\n        [0.0294],\n        [0.0397],\n        [0.0161],\n        [0.0198],\n        [0.0251],\n        [0.0342],\n        [0.0506],\n        [0.0130],\n        [0.0315],\n        [0.0154],\n        [0.0344],\n        [0.0132],\n        [0.0273],\n        [0.0366]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962812.7342246}]}, "version": 111}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.735346}]}, "version": 112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0286, 0.0278, 0.0195,  ..., 0.0181, 0.0092, 0.0295],\n        [0.0343, 0.0338, 0.0177,  ..., 0.0174, 0.0296, 0.0299],\n        [0.0359, 0.0291, 0.0229,  ..., 0.0268, 0.0283, 0.0368],\n        ...,\n        [0.0249, 0.0353, 0.0216,  ..., 0.0197, 0.0335, 0.0254],\n        [0.0272, 0.0202, 0.0243,  ..., 0.0281, 0.0340, 0.0347],\n        [0.0375, 0.0198, 0.0232,  ..., 0.0177, 0.0202, 0.0475]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962812.7383652}]}, "version": 113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.7417462}]}, "version": 114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1979, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962812.7490242}]}, "version": 115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.7500567}]}, "version": 116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0021, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962812.7519295}]}, "version": 117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962812.75298}]}, "version": 118}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5330963134765625, "step": null, "ts": 1644962812.7544796}]}, "version": 119}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8772714138031006, "step": null, "ts": 1644962813.1997228}]}, "version": 120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.0809e-01],\n        [-1.8798e-01],\n        [ 4.5763e-01],\n        [ 1.0013e+00],\n        [-9.3960e-02],\n        [ 3.0532e-02],\n        [ 4.7028e-01],\n        [-2.5248e-01],\n        [ 1.1791e+01],\n        [-8.3998e-01],\n        [-6.0249e-01],\n        [-4.8670e+00],\n        [ 2.2042e-01],\n        [-1.5782e-01],\n        [-1.0794e-01],\n        [ 4.0519e-01],\n        [ 1.7820e-01],\n        [-1.2200e-01],\n        [ 5.6188e-02],\n        [ 3.5576e-02],\n        [-5.1380e-01],\n        [-3.4574e-02],\n        [-8.0805e-02],\n        [-6.8348e+00],\n        [-7.2006e-01],\n        [ 2.5955e-01],\n        [ 2.6125e-01],\n        [-2.1222e-02],\n        [ 3.3318e-01],\n        [-6.9166e-03],\n        [ 2.4252e-01],\n        [ 8.2022e-01],\n        [ 1.0269e-01],\n        [ 4.1112e-02],\n        [ 1.6682e-01],\n        [-2.7874e-01],\n        [-6.5574e-02],\n        [ 3.1755e-02],\n        [-5.4985e-02],\n        [ 1.4793e-01],\n        [ 2.3188e-01],\n        [ 4.5118e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962813.2100558}]}, "version": 121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.211055}]}, "version": 122}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1024,  0.1236, -0.1859,  ..., -0.1454, -0.1561,  0.1640],\n        [-0.0938,  0.1492,  0.2159,  ...,  0.1909,  0.0817, -0.1158],\n        [ 0.5290,  0.1107,  0.8641,  ...,  0.8268, -0.5638,  0.8862],\n        ...,\n        [ 0.2871, -0.0753,  0.2227,  ...,  0.4739,  0.0859, -0.0427],\n        [-0.2486,  0.3905,  0.3506,  ...,  0.1231,  0.0600, -0.0488],\n        [ 0.7650,  0.1064,  0.0946,  ...,  1.0048,  0.6240, -0.1901]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.2135036}]}, "version": 123}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.2145748}]}, "version": 124}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1438.0874, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962813.215797}]}, "version": 125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.216633}]}, "version": 126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-1843.6323, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962813.2178094}]}, "version": 127}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.2187266}]}, "version": 128}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962813.2197828}]}, "version": 129}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21641245484352112, "step": null, "ts": 1644962813.317363}]}, "version": 130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0491],\n        [0.0337],\n        [0.0301],\n        [0.0320],\n        [0.0304],\n        [0.0419],\n        [0.0295],\n        [0.0544],\n        [0.0223],\n        [0.0349],\n        [0.0420],\n        [0.0111],\n        [0.0189],\n        [0.0269],\n        [0.0414],\n        [0.0316],\n        [0.0234],\n        [0.0391],\n        [0.0258],\n        [0.0289],\n        [0.0376],\n        [0.0235],\n        [0.0321],\n        [0.0246],\n        [0.0330],\n        [0.0328],\n        [0.0319],\n        [0.0222],\n        [0.0269],\n        [0.0301],\n        [0.0354],\n        [0.0327],\n        [0.0312],\n        [0.0254],\n        [0.0448],\n        [0.0318],\n        [0.0232],\n        [0.0338],\n        [0.0302],\n        [0.0388],\n        [0.0441],\n        [0.0291]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.33292}]}, "version": 131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.3511348}]}, "version": 132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0315, 0.0293, 0.0292,  ..., 0.0274, 0.0328, 0.0533],\n        [0.0391, 0.0280, 0.0202,  ..., 0.0401, 0.0364, 0.0383],\n        [0.0286, 0.0384, 0.0279,  ..., 0.0228, 0.0210, 0.0395],\n        ...,\n        [0.0415, 0.0275, 0.0194,  ..., 0.0233, 0.0191, 0.0586],\n        [0.0286, 0.0312, 0.0200,  ..., 0.0297, 0.0377, 0.0318],\n        [0.0246, 0.0273, 0.0310,  ..., 0.0220, 0.0264, 0.0452]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.3599226}]}, "version": 133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.363077}]}, "version": 134}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1292, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962813.3645232}]}, "version": 135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.365552}]}, "version": 136}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0030, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962813.3669193}]}, "version": 137}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.367904}]}, "version": 138}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5278241634368896, "step": null, "ts": 1644962813.369184}]}, "version": 139}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9187378883361816, "step": null, "ts": 1644962813.7869716}]}, "version": 140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0181],\n        [ 0.0296],\n        [ 0.2985],\n        [ 0.0017],\n        [ 0.3439],\n        [-0.2143],\n        [-0.0117],\n        [ 0.0508],\n        [ 0.1544],\n        [ 0.0295],\n        [ 0.1453],\n        [-0.5818],\n        [ 0.1219],\n        [ 0.0434],\n        [ 0.0611],\n        [-0.1216],\n        [ 0.1625],\n        [ 0.0716],\n        [ 0.1492],\n        [-0.2661],\n        [-0.0105],\n        [-0.1716],\n        [-0.1425],\n        [-0.0348],\n        [ 0.0475],\n        [ 0.1802],\n        [ 0.2760],\n        [ 1.1276],\n        [ 0.1438],\n        [-0.2497],\n        [ 0.0461],\n        [-0.4313],\n        [-0.1037],\n        [ 0.0595],\n        [-0.0919],\n        [ 0.0297],\n        [-0.8238],\n        [-0.2352],\n        [-0.0217],\n        [-0.2927],\n        [-0.3098],\n        [-0.2723]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.7968028}]}, "version": 141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.8030055}]}, "version": 142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.2655,  0.6130,  0.4878,  ...,  0.9270,  0.3427, -0.3262],\n        [ 0.2174, -0.0909, -0.0701,  ...,  0.0650, -0.1363, -0.2435],\n        [-0.0213, -0.5521,  0.3184,  ..., -0.2020,  1.4510, -0.1035],\n        ...,\n        [ 1.7726,  1.2128,  0.8343,  ...,  0.2622, -0.4308, -0.1824],\n        [-0.1725,  0.2676,  0.1457,  ...,  0.0446,  0.1278, -0.1310],\n        [ 0.0885, -0.0718, -0.4396,  ..., -0.2469,  0.0515, -0.2451]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.8055336}]}, "version": 143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.806631}]}, "version": 144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.8452, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962813.8077648}]}, "version": 145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.8086512}]}, "version": 146}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-9.5147, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962813.8097355}]}, "version": 147}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.810619}]}, "version": 148}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962813.8115408}]}, "version": 149}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20896472036838531, "step": null, "ts": 1644962813.9060357}]}, "version": 150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0380],\n        [0.0314],\n        [0.0259],\n        [0.0425],\n        [0.0302],\n        [0.0321],\n        [0.0268],\n        [0.0322],\n        [0.0167],\n        [0.0193],\n        [0.0223],\n        [0.0269],\n        [0.0477],\n        [0.0235],\n        [0.0354],\n        [0.0184],\n        [0.0113],\n        [0.0375],\n        [0.0260],\n        [0.0413],\n        [0.0271],\n        [0.0431],\n        [0.0211],\n        [0.0536],\n        [0.0432],\n        [0.0155],\n        [0.0252],\n        [0.0671],\n        [0.0335],\n        [0.0298],\n        [0.0284],\n        [0.0462],\n        [0.0297],\n        [0.0349],\n        [0.0334],\n        [0.0344],\n        [0.0243],\n        [0.0305],\n        [0.0314],\n        [0.0342],\n        [0.0362],\n        [0.0303]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.9121058}]}, "version": 151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.9161916}]}, "version": 152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0305, 0.0285, 0.0108,  ..., 0.0181, 0.0140, 0.0293],\n        [0.0351, 0.0134, 0.0223,  ..., 0.0311, 0.0186, 0.0226],\n        [0.0297, 0.0485, 0.0055,  ..., 0.0333, 0.0159, 0.0307],\n        ...,\n        [0.0287, 0.0325, 0.0238,  ..., 0.0371, 0.0270, 0.0403],\n        [0.0434, 0.0386, 0.0289,  ..., 0.0248, 0.0279, 0.0401],\n        [0.0272, 0.0287, 0.0245,  ..., 0.0225, 0.0290, 0.0344]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962813.9210956}]}, "version": 153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.9230237}]}, "version": 154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962813.9298189}]}, "version": 155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1592, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962813.9307828}]}, "version": 156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.9341888}]}, "version": 157}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0040, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962813.9355597}]}, "version": 158}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962813.9364538}]}, "version": 159}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6666040420532227, "step": null, "ts": 1644962813.9374459}]}, "version": 160}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7246026992797852, "step": null, "ts": 1644962814.357864}]}, "version": 161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-8.4503e-02],\n        [-7.9576e-02],\n        [ 9.5324e-01],\n        [-8.4175e-03],\n        [ 3.0750e+00],\n        [-8.8873e-01],\n        [ 2.4359e-01],\n        [ 1.0744e-01],\n        [-6.9285e-01],\n        [ 6.5738e-03],\n        [-1.2146e+00],\n        [ 8.9149e-01],\n        [-4.7540e-02],\n        [ 3.5044e+01],\n        [ 1.0079e+00],\n        [-2.2886e-01],\n        [-2.2274e-01],\n        [-2.0649e-01],\n        [ 4.0434e-03],\n        [-2.1833e-01],\n        [ 1.2119e-01],\n        [ 3.0801e-01],\n        [-1.1390e+00],\n        [-1.2148e-01],\n        [ 8.0389e-02],\n        [-4.1541e-02],\n        [ 1.8155e-02],\n        [-2.6292e-01],\n        [-2.1332e-01],\n        [-1.3498e-02],\n        [ 4.6222e+00],\n        [-1.1266e-01],\n        [-1.8968e-01],\n        [ 4.4287e-01],\n        [ 2.5689e-01],\n        [ 1.5302e-01],\n        [-9.7300e-02],\n        [-1.3343e-01],\n        [ 2.7174e-02],\n        [ 1.3538e-02],\n        [ 9.9526e-01],\n        [ 1.7416e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962814.3705626}]}, "version": 162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.3821545}]}, "version": 163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.3939e-02, -1.2183e-01, -9.7855e-02,  ..., -3.4635e-01,\n         -1.5422e-01,  2.0740e-01],\n        [ 1.1028e-01,  1.7114e-02,  7.4369e-02,  ..., -4.5686e-04,\n          1.3218e-02,  7.2337e-02],\n        [-8.7380e+00,  4.4139e+00,  9.4306e+00,  ...,  7.1500e+00,\n         -6.1946e+00, -1.9672e+00],\n        ...,\n        [ 1.1425e-01,  2.4373e-02,  1.6166e-01,  ...,  1.0227e-02,\n          8.2143e-02,  7.1971e-02],\n        [-1.8311e+02, -4.3467e+01, -2.4095e+02,  ...,  1.2464e+02,\n          6.3782e+01, -1.3413e+02],\n        [ 6.8095e-02, -1.1644e-01, -1.9781e-02,  ...,  1.2995e-01,\n          2.7739e-01, -1.0152e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962814.3847225}]}, "version": 164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.385713}]}, "version": 165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(659.6815, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962814.3868742}]}, "version": 166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.3875003}]}, "version": 167}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-454.7123, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962814.3886557}]}, "version": 168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.3895476}]}, "version": 169}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962814.390553}]}, "version": 170}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.31185558438301086, "step": null, "ts": 1644962814.4788165}]}, "version": 171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0260],\n        [0.0283],\n        [0.0201],\n        [0.0274],\n        [0.0354],\n        [0.0300],\n        [0.0268],\n        [0.0237],\n        [0.0574],\n        [0.0307],\n        [0.0415],\n        [0.0092],\n        [0.0161],\n        [0.0415],\n        [0.0251],\n        [0.0357],\n        [0.0261],\n        [0.0363],\n        [0.0284],\n        [0.0330],\n        [0.0339],\n        [0.0353],\n        [0.0234],\n        [0.0235],\n        [0.0295],\n        [0.0173],\n        [0.0371],\n        [0.0348],\n        [0.0369],\n        [0.0420],\n        [0.0309],\n        [0.0276],\n        [0.0213],\n        [0.1026],\n        [0.0334],\n        [0.0234],\n        [0.0520],\n        [0.0526],\n        [0.0369],\n        [0.0409],\n        [0.0513],\n        [0.0291]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962814.491067}]}, "version": 172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.4943078}]}, "version": 173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0341, 0.0318, 0.0242,  ..., 0.0264, 0.0281, 0.0279],\n        [0.0355, 0.0363, 0.0244,  ..., 0.0284, 0.0322, 0.0237],\n        [0.0379, 0.0220, 0.0345,  ..., 0.0209, 0.0327, 0.0413],\n        ...,\n        [0.0343, 0.0361, 0.0244,  ..., 0.0279, 0.0388, 0.0292],\n        [0.0359, 0.0308, 0.0240,  ..., 0.0354, 0.0319, 0.0223],\n        [0.0267, 0.0270, 0.0123,  ..., 0.0307, 0.0265, 0.0383]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962814.502146}]}, "version": 174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.502741}]}, "version": 175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1820, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962814.5038705}]}, "version": 176}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.504381}]}, "version": 177}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0013, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962814.5053492}]}, "version": 178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.5100675}]}, "version": 179}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5547544956207275, "step": null, "ts": 1644962814.5125144}]}, "version": 180}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0130712985992432, "step": null, "ts": 1644962814.942955}]}, "version": 181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0455],\n        [ 0.4458],\n        [ 2.2203],\n        [ 0.0504],\n        [-0.3060],\n        [ 0.9265],\n        [ 0.1288],\n        [-0.0420],\n        [ 1.5492],\n        [-0.0791],\n        [ 0.2685],\n        [ 0.1166],\n        [ 0.0047],\n        [-0.5701],\n        [ 2.6180],\n        [-0.0260],\n        [-0.0654],\n        [ 0.2077],\n        [ 0.0888],\n        [ 0.1770],\n        [ 0.0088],\n        [ 0.3202],\n        [ 0.2766],\n        [ 0.0026],\n        [ 0.0303],\n        [ 1.9883],\n        [ 0.0458],\n        [-0.0571],\n        [ 0.7693],\n        [ 0.1982],\n        [ 0.3054],\n        [ 0.1001],\n        [-0.3352],\n        [ 0.0304],\n        [ 0.3082],\n        [ 0.3369],\n        [-0.0914],\n        [-0.5605],\n        [ 0.0941],\n        [ 0.1503],\n        [ 0.4149],\n        [ 0.4817]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962814.9602911}]}, "version": 182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.9612296}]}, "version": 183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1397,  0.0288,  0.0342,  ...,  0.1843,  0.1727, -0.0873],\n        [-0.7954, -0.2894,  1.0513,  ...,  0.9811, -0.2705, -0.3652],\n        [ 1.2527,  1.4971, -1.6233,  ..., -7.3747, -0.8132,  1.3105],\n        ...,\n        [ 0.0429, -0.0092,  0.0966,  ...,  0.3093,  0.0860, -0.1156],\n        [ 0.6478, -0.6310,  0.3851,  ...,  0.2345,  0.2256,  0.1556],\n        [ 1.1033, -0.6264, -1.4161,  ..., -0.6465, -0.4634,  0.2043]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962814.9638145}]}, "version": 184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.9647315}]}, "version": 185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(21.0730, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962814.9658782}]}, "version": 186}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.96677}]}, "version": 187}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-15.9798, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962814.968175}]}, "version": 188}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962814.969073}]}, "version": 189}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962814.970443}]}, "version": 190}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3622385859489441, "step": null, "ts": 1644962815.0533662}]}, "version": 191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0337],\n        [0.0287],\n        [0.0376],\n        [0.0552],\n        [0.0443],\n        [0.0276],\n        [0.0401],\n        [0.0340],\n        [0.0359],\n        [0.0267],\n        [0.0317],\n        [0.0136],\n        [0.0373],\n        [0.0175],\n        [0.0477],\n        [0.0286],\n        [0.0580],\n        [0.0198],\n        [0.0364],\n        [0.0389],\n        [0.0360],\n        [0.0280],\n        [0.0222],\n        [0.0335],\n        [0.0257],\n        [0.0371],\n        [0.0199],\n        [0.0213],\n        [0.0166],\n        [0.0452],\n        [0.0353],\n        [0.0356],\n        [0.0409],\n        [0.0186],\n        [0.0345],\n        [0.0338],\n        [0.0302],\n        [0.0255],\n        [0.0387],\n        [0.0339],\n        [0.0203],\n        [0.0217]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962815.0630264}]}, "version": 192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.0665233}]}, "version": 193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0223, 0.0261, 0.0254,  ..., 0.0281, 0.0216, 0.0269],\n        [0.0335, 0.0528, 0.0347,  ..., 0.0196, 0.0158, 0.0321],\n        [0.0169, 0.0372, 0.0203,  ..., 0.0351, 0.0171, 0.0357],\n        ...,\n        [0.0246, 0.0298, 0.0350,  ..., 0.0255, 0.0373, 0.0263],\n        [0.0167, 0.0431, 0.0151,  ..., 0.0349, 0.0607, 0.0150],\n        [0.0287, 0.0480, 0.0185,  ..., 0.0316, 0.0210, 0.0313]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962815.0732322}]}, "version": 194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.080817}]}, "version": 195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1181, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962815.0822515}]}, "version": 196}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.0832543}]}, "version": 197}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0041, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962815.0848386}]}, "version": 198}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.0857432}]}, "version": 199}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.654238224029541, "step": null, "ts": 1644962815.0867457}]}, "version": 200}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.3, "step": null, "ts": 1644962815.3152816}]}, "version": 201}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.988346099853516, "step": null, "ts": 1644962815.3152816}]}, "version": 202}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 91.0, "step": null, "ts": 1644962815.3152816}]}, "version": 203}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962815.3152816}]}, "version": 204}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0309388637542725, "step": null, "ts": 1644962815.5050006}]}, "version": 205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 6.0997e-02],\n        [-2.5305e-02],\n        [-1.3543e+00],\n        [-1.6937e-01],\n        [-3.1935e-01],\n        [ 2.2056e+00],\n        [ 3.6377e-02],\n        [-2.8959e-03],\n        [ 2.5311e-01],\n        [-3.0458e-01],\n        [ 6.8347e-02],\n        [-1.4234e-01],\n        [-1.0821e-01],\n        [ 5.8707e-04],\n        [-6.3447e-04],\n        [-1.5290e-01],\n        [ 8.1399e-02],\n        [-1.4400e+00],\n        [ 1.2967e+00],\n        [ 1.2767e+00],\n        [-1.6472e-01],\n        [ 7.0879e-02],\n        [ 4.7911e-01],\n        [-2.2379e-01],\n        [ 3.0241e-01],\n        [ 1.1168e-01],\n        [-4.1909e-02],\n        [-2.6789e-02],\n        [ 3.2545e+00],\n        [ 3.0939e-01],\n        [ 1.5246e-01],\n        [ 4.4888e-01],\n        [ 8.9856e-02],\n        [ 5.8033e-03],\n        [-2.7124e-01],\n        [ 8.1054e-02],\n        [ 7.3035e-02],\n        [ 4.4438e-01],\n        [-9.3390e-01],\n        [ 2.6982e-01],\n        [-1.3463e-01],\n        [ 3.5284e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962815.5199423}]}, "version": 206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.5208712}]}, "version": 207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.1721, -0.1274,  0.2812,  ...,  0.0205,  0.1471,  0.2728],\n        [-0.2620, -0.0069,  0.0344,  ...,  0.2952,  0.2550, -0.0788],\n        [ 0.5010, -0.0965,  0.1566,  ..., -0.0699, -0.1440,  0.4038],\n        ...,\n        [ 0.0179,  0.0288,  0.9113,  ...,  2.6306,  0.7005, -2.0068],\n        [-3.1860, -0.1532, -4.7867,  ..., -4.0623, -0.5173,  0.5957],\n        [ 0.2943, -0.0194,  0.2961,  ...,  0.4316,  0.1201, -0.0514]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962815.5233254}]}, "version": 208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.524269}]}, "version": 209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.0065, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962815.5255458}]}, "version": 210}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.526409}]}, "version": 211}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-6.7543, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962815.527668}]}, "version": 212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.5285432}]}, "version": 213}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962815.5294995}]}, "version": 214}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3614720106124878, "step": null, "ts": 1644962815.6332273}]}, "version": 215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0239],\n        [0.0370],\n        [0.0276],\n        [0.0606],\n        [0.0380],\n        [0.0272],\n        [0.0216],\n        [0.0323],\n        [0.0236],\n        [0.0245],\n        [0.0347],\n        [0.0356],\n        [0.0300],\n        [0.0204],\n        [0.0398],\n        [0.0296],\n        [0.0165],\n        [0.0251],\n        [0.0415],\n        [0.0386],\n        [0.0464],\n        [0.0210],\n        [0.0519],\n        [0.0318],\n        [0.0462],\n        [0.0240],\n        [0.0193],\n        [0.0405],\n        [0.0402],\n        [0.0235],\n        [0.0285],\n        [0.0385],\n        [0.0141],\n        [0.0325],\n        [0.0409],\n        [0.0310],\n        [0.0332],\n        [0.0319],\n        [0.0330],\n        [0.0435],\n        [0.0296],\n        [0.0388]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962815.639098}]}, "version": 216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.6478198}]}, "version": 217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0395, 0.0277, 0.0200,  ..., 0.0195, 0.0189, 0.0368],\n        [0.0102, 0.0326, 0.0187,  ..., 0.0267, 0.0189, 0.0220],\n        [0.0293, 0.0282, 0.0163,  ..., 0.0135, 0.0129, 0.0299],\n        ...,\n        [0.0288, 0.0220, 0.0102,  ..., 0.0179, 0.0332, 0.0286],\n        [0.0234, 0.0431, 0.0168,  ..., 0.0239, 0.0260, 0.0212],\n        [0.0294, 0.0268, 0.0188,  ..., 0.0249, 0.0255, 0.0251]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962815.6526475}]}, "version": 218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.6535804}]}, "version": 219}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1633, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962815.6546848}]}, "version": 220}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.6556673}]}, "version": 221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0053, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962815.656773}]}, "version": 222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962815.657352}]}, "version": 223}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6703414916992188, "step": null, "ts": 1644962815.6583095}]}, "version": 224}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5970225930213928, "step": null, "ts": 1644962816.1211987}]}, "version": 225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1072],\n        [-0.2227],\n        [-0.0268],\n        [ 0.0406],\n        [ 0.0737],\n        [ 0.0593],\n        [ 0.2383],\n        [ 0.0550],\n        [-0.5281],\n        [ 0.0066],\n        [ 0.4101],\n        [-4.8938],\n        [-0.0911],\n        [-4.7105],\n        [-0.0339],\n        [ 0.0425],\n        [-0.0310],\n        [ 0.0751],\n        [ 0.2161],\n        [ 0.7851],\n        [-3.4951],\n        [ 0.1675],\n        [ 0.0522],\n        [ 0.1259],\n        [-0.2367],\n        [ 0.1883],\n        [-0.2583],\n        [-1.5542],\n        [ 0.2851],\n        [-0.3536],\n        [-0.1459],\n        [-0.1124],\n        [ 0.0605],\n        [ 0.1152],\n        [ 0.4232],\n        [ 2.2173],\n        [ 0.8989],\n        [ 0.5154],\n        [ 1.5360],\n        [ 0.2906],\n        [-0.1386],\n        [-0.5458]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.1314275}]}, "version": 226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.136342}]}, "version": 227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1370,  0.0253,  0.1569,  ...,  0.3713,  0.0277, -0.1725],\n        [-0.0379, -0.0716,  0.2911,  ...,  0.1111, -0.1092, -0.0510],\n        [ 0.1181,  0.1216,  0.0969,  ...,  0.0673,  0.0369, -0.0619],\n        ...,\n        [ 0.0246,  0.2000,  0.2047,  ...,  0.3725,  0.0444, -0.0792],\n        [-0.0969,  0.0275, -0.0422,  ..., -0.1603, -0.3111,  0.2089],\n        [ 1.1553,  0.3377,  1.9062,  ...,  0.9914,  0.3109, -0.9936]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.1384883}]}, "version": 228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.1395607}]}, "version": 229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(51.0591, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962816.140815}]}, "version": 230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.141573}]}, "version": 231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-34.8342, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962816.1428483}]}, "version": 232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.1434164}]}, "version": 233}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962816.144181}]}, "version": 234}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4371557831764221, "step": null, "ts": 1644962816.2423642}]}, "version": 235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0357],\n        [0.0518],\n        [0.0356],\n        [0.0466],\n        [0.0432],\n        [0.0322],\n        [0.0231],\n        [0.0298],\n        [0.0266],\n        [0.0277],\n        [0.0299],\n        [0.0439],\n        [0.0235],\n        [0.0395],\n        [0.0270],\n        [0.0404],\n        [0.0172],\n        [0.0296],\n        [0.0272],\n        [0.0419],\n        [0.0292],\n        [0.0262],\n        [0.0311],\n        [0.0262],\n        [0.0236],\n        [0.0317],\n        [0.0137],\n        [0.0412],\n        [0.0239],\n        [0.0537],\n        [0.0313],\n        [0.0271],\n        [0.0594],\n        [0.0265],\n        [0.0163],\n        [0.0189],\n        [0.0272],\n        [0.0293],\n        [0.0240],\n        [0.0266],\n        [0.0541],\n        [0.0223]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.2530613}]}, "version": 236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.2563934}]}, "version": 237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0464, 0.0211, 0.0148,  ..., 0.0179, 0.0347, 0.0327],\n        [0.0330, 0.0304, 0.0168,  ..., 0.0245, 0.0296, 0.0469],\n        [0.0310, 0.0312, 0.0265,  ..., 0.0290, 0.0224, 0.0402],\n        ...,\n        [0.0355, 0.0337, 0.0164,  ..., 0.0315, 0.0366, 0.0321],\n        [0.0073, 0.0366, 0.0156,  ..., 0.0150, 0.0123, 0.0199],\n        [0.0215, 0.0249, 0.0136,  ..., 0.0333, 0.0409, 0.0388]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.2585173}]}, "version": 238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.2658186}]}, "version": 239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2663, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962816.2674434}]}, "version": 240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.2684317}]}, "version": 241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0025, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962816.269561}]}, "version": 242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.2704954}]}, "version": 243}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.531679630279541, "step": null, "ts": 1644962816.271687}]}, "version": 244}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.4467088580131531, "step": null, "ts": 1644962816.7254016}]}, "version": 245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.0782],\n        [ 0.0248],\n        [ 0.0269],\n        [ 0.4687],\n        [ 0.2039],\n        [ 0.3478],\n        [-0.5382],\n        [-0.0330],\n        [-0.0260],\n        [-2.2986],\n        [ 0.1607],\n        [-0.0978],\n        [ 0.2043],\n        [ 0.1653],\n        [-0.0058],\n        [-0.0674],\n        [ 0.2598],\n        [-0.0691],\n        [-0.4659],\n        [-0.0079],\n        [-0.0113],\n        [-0.0147],\n        [ 0.0500],\n        [ 0.1324],\n        [ 0.1945],\n        [ 0.0722],\n        [-0.1036],\n        [-0.1358],\n        [ 0.0511],\n        [ 0.0111],\n        [-0.0028],\n        [-0.7305],\n        [ 0.2317],\n        [ 0.1602],\n        [-0.1792],\n        [ 0.1957],\n        [-0.1058],\n        [ 0.4392],\n        [-0.0035],\n        [-0.0292],\n        [ 0.1194],\n        [ 0.3750]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.7320266}]}, "version": 246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.7330823}]}, "version": 247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.3600, -0.3877,  0.8280,  ...,  0.4219,  0.4274, -0.8515],\n        [ 0.0236,  0.1629, -0.4019,  ...,  0.0896, -0.0801,  0.0575],\n        [ 0.0018,  0.1523, -0.0898,  ...,  0.1665,  0.0221,  0.0135],\n        ...,\n        [ 0.3799, -0.2837,  1.2464,  ...,  0.2961,  0.1031,  0.3363],\n        [-0.0562,  0.1280,  0.0326,  ...,  0.2679,  0.2000, -0.0365],\n        [-0.1482,  0.2277, -0.6978,  ..., -0.3377, -0.2597, -0.0380]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.735599}]}, "version": 248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.7366297}]}, "version": 249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.6349, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962816.737761}]}, "version": 250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.7383971}]}, "version": 251}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-4.3811, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962816.7395484}]}, "version": 252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.740441}]}, "version": 253}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962816.7414575}]}, "version": 254}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.19878487288951874, "step": null, "ts": 1644962816.8311572}]}, "version": 255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0436],\n        [0.0232],\n        [0.0206],\n        [0.0296],\n        [0.0197],\n        [0.0510],\n        [0.0307],\n        [0.0321],\n        [0.0421],\n        [0.0481],\n        [0.0488],\n        [0.0146],\n        [0.0422],\n        [0.0291],\n        [0.0350],\n        [0.0329],\n        [0.0224],\n        [0.0485],\n        [0.0303],\n        [0.0292],\n        [0.0390],\n        [0.0200],\n        [0.0396],\n        [0.0243],\n        [0.0248],\n        [0.0280],\n        [0.0313],\n        [0.0271],\n        [0.0230],\n        [0.0320],\n        [0.0255],\n        [0.0273],\n        [0.0225],\n        [0.0241],\n        [0.0389],\n        [0.0303],\n        [0.0346],\n        [0.0292],\n        [0.0228],\n        [0.0402],\n        [0.0255],\n        [0.0593]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.8531322}]}, "version": 256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.856972}]}, "version": 257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0308, 0.0249, 0.0168,  ..., 0.0165, 0.0272, 0.0362],\n        [0.0294, 0.0292, 0.0241,  ..., 0.0299, 0.0320, 0.0348],\n        [0.0252, 0.0389, 0.0272,  ..., 0.0175, 0.0377, 0.0389],\n        ...,\n        [0.0255, 0.0347, 0.0214,  ..., 0.0221, 0.0167, 0.0212],\n        [0.0428, 0.0365, 0.0212,  ..., 0.0163, 0.0248, 0.0424],\n        [0.0311, 0.0516, 0.0223,  ..., 0.0256, 0.0266, 0.0270]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962816.8620768}]}, "version": 258}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.865568}]}, "version": 259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1380, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962816.8696635}]}, "version": 260}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.8706605}]}, "version": 261}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0023, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962816.871739}]}, "version": 262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962816.8726616}]}, "version": 263}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.585552930831909, "step": null, "ts": 1644962816.8736792}]}, "version": 264}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8735694885253906, "step": null, "ts": 1644962817.3230464}]}, "version": 265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-5.1953e-02],\n        [ 3.2770e-01],\n        [ 2.1213e+00],\n        [ 1.1479e-02],\n        [-1.2012e-01],\n        [ 1.5748e-01],\n        [-1.0747e-01],\n        [ 1.2653e-01],\n        [-3.7702e-01],\n        [ 2.0742e-01],\n        [-1.8862e-01],\n        [ 1.3094e-01],\n        [-2.2068e+00],\n        [-2.2466e-01],\n        [ 2.0002e-01],\n        [ 8.9191e-03],\n        [ 4.0044e-02],\n        [-3.1847e-03],\n        [ 8.4935e-02],\n        [ 1.5420e-02],\n        [ 4.4686e-01],\n        [ 4.1416e-01],\n        [ 2.3209e-01],\n        [-9.3437e-02],\n        [-1.5833e-02],\n        [ 1.7675e-01],\n        [-4.2533e-01],\n        [ 1.8470e-03],\n        [ 3.4735e+00],\n        [ 8.6661e-02],\n        [ 3.3872e-01],\n        [ 1.9183e-02],\n        [ 8.4074e-01],\n        [ 1.8943e-02],\n        [ 3.4416e-01],\n        [ 8.7482e-02],\n        [-4.1705e-01],\n        [ 1.7486e-01],\n        [-9.3240e-01],\n        [-4.7797e-02],\n        [ 1.2423e-01],\n        [-1.7192e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962817.3329446}]}, "version": 266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.3381484}]}, "version": 267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0076,  0.2254,  0.1431,  ...,  0.1155, -0.0915, -0.0879],\n        [ 0.6291, -0.3743,  0.5878,  ...,  0.8581, -0.1312,  0.1607],\n        [ 0.1850,  0.5565,  0.5252,  ...,  1.7888,  0.3445, -0.7085],\n        ...,\n        [ 0.3363,  0.2339, -0.3853,  ..., -0.0728, -0.4277,  0.1697],\n        [-0.0830,  0.2186,  0.5093,  ..., -0.0570,  0.0128, -0.0249],\n        [-0.1340, -0.0049,  0.1970,  ...,  0.0487, -0.1710, -0.0949]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962817.340565}]}, "version": 268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.3413012}]}, "version": 269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.5643, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962817.3425183}]}, "version": 270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.3433208}]}, "version": 271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-8.4599, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962817.3444767}]}, "version": 272}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.3452659}]}, "version": 273}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962817.346295}]}, "version": 274}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29908090829849243, "step": null, "ts": 1644962817.4327126}]}, "version": 275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0275],\n        [0.0191],\n        [0.0333],\n        [0.0307],\n        [0.0207],\n        [0.0554],\n        [0.0350],\n        [0.0512],\n        [0.0283],\n        [0.0325],\n        [0.0396],\n        [0.0324],\n        [0.0347],\n        [0.0509],\n        [0.0257],\n        [0.0302],\n        [0.0256],\n        [0.0310],\n        [0.0453],\n        [0.0196],\n        [0.0515],\n        [0.0307],\n        [0.0147],\n        [0.0278],\n        [0.0364],\n        [0.0481],\n        [0.0181],\n        [0.0316],\n        [0.0242],\n        [0.0400],\n        [0.0386],\n        [0.0312],\n        [0.0239],\n        [0.0291],\n        [0.0127],\n        [0.0219],\n        [0.0417],\n        [0.0461],\n        [0.0415],\n        [0.0322],\n        [0.0166],\n        [0.0308]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962817.4510415}]}, "version": 276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.454558}]}, "version": 277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0307, 0.0329, 0.0248,  ..., 0.0206, 0.0250, 0.0363],\n        [0.0394, 0.0392, 0.0523,  ..., 0.0181, 0.0184, 0.0375],\n        [0.0157, 0.0188, 0.0203,  ..., 0.0238, 0.0236, 0.0494],\n        ...,\n        [0.0288, 0.0182, 0.0230,  ..., 0.0226, 0.0285, 0.0418],\n        [0.0170, 0.0354, 0.0110,  ..., 0.0376, 0.0234, 0.0385],\n        [0.0443, 0.0311, 0.0228,  ..., 0.0340, 0.0329, 0.0287]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962817.4593751}]}, "version": 278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.4626775}]}, "version": 279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1658, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962817.463748}]}, "version": 280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.4645152}]}, "version": 281}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0025, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962817.465579}]}, "version": 282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.466495}]}, "version": 283}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5754635334014893, "step": null, "ts": 1644962817.4675198}]}, "version": 284}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8777305483818054, "step": null, "ts": 1644962817.9121966}]}, "version": 285}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.2927e-01],\n        [ 5.5285e+00],\n        [-5.8215e-02],\n        [ 6.7447e-02],\n        [-1.6964e-01],\n        [ 3.5704e-01],\n        [ 1.7696e-01],\n        [-2.2895e-01],\n        [-4.6477e+00],\n        [-3.0632e-02],\n        [ 1.9296e+00],\n        [-3.0477e-02],\n        [-7.8932e-02],\n        [ 7.0652e-01],\n        [ 4.4305e-01],\n        [ 2.8422e-01],\n        [ 1.3851e+00],\n        [ 1.3263e-01],\n        [ 5.7988e-01],\n        [ 3.4141e-02],\n        [-2.6204e-01],\n        [-6.9551e-01],\n        [ 2.0489e-01],\n        [ 4.0478e-01],\n        [-1.0536e+00],\n        [-5.6517e-01],\n        [ 1.5731e-01],\n        [ 5.2537e-03],\n        [-4.7109e-01],\n        [ 1.1138e+00],\n        [ 3.8596e-01],\n        [-1.4922e-01],\n        [-2.6470e-02],\n        [ 1.3780e+00],\n        [-7.8013e-01],\n        [ 1.1935e-01],\n        [ 3.1857e-01],\n        [ 3.8022e-02],\n        [-6.4238e-02],\n        [ 1.2890e-01],\n        [ 7.8898e-03],\n        [-1.5826e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962817.928037}]}, "version": 286}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.9360359}]}, "version": 287}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.7324, -1.0811, -1.1323,  ..., -2.2320, -0.4119,  0.3233],\n        [-1.3668, -0.3852, -0.1711,  ...,  0.8761,  0.6281, -1.5119],\n        [ 0.0700, -0.0902,  0.0158,  ...,  0.3459,  0.2642, -0.1190],\n        ...,\n        [-0.2114,  0.0819, -0.2404,  ...,  0.1985,  0.2842, -0.1723],\n        [ 0.1043,  0.0068,  0.4039,  ...,  0.2564,  0.2185, -0.0674],\n        [-0.0560,  0.1271,  0.2338,  ...,  0.0822, -0.0943,  0.1378]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962817.938453}]}, "version": 288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.9395056}]}, "version": 289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(20.9828, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962817.940722}]}, "version": 290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.941732}]}, "version": 291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-24.1482, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962817.9428494}]}, "version": 292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962817.9437292}]}, "version": 293}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962817.9447615}]}, "version": 294}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38284701108932495, "step": null, "ts": 1644962818.0314493}]}, "version": 295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0386],\n        [0.0163],\n        [0.0321],\n        [0.0324],\n        [0.0340],\n        [0.0324],\n        [0.0412],\n        [0.0236],\n        [0.0268],\n        [0.0393],\n        [0.0486],\n        [0.0470],\n        [0.0234],\n        [0.0379],\n        [0.0381],\n        [0.0263],\n        [0.0257],\n        [0.0314],\n        [0.0338],\n        [0.0406],\n        [0.0349],\n        [0.0274],\n        [0.0677],\n        [0.0274],\n        [0.0233],\n        [0.0196],\n        [0.0261],\n        [0.0130],\n        [0.0349],\n        [0.0340],\n        [0.0265],\n        [0.0244],\n        [0.0338],\n        [0.0336],\n        [0.0389],\n        [0.0120],\n        [0.0477],\n        [0.0446],\n        [0.0295],\n        [0.0480],\n        [0.0221],\n        [0.0152]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962818.0460203}]}, "version": 296}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.0524075}]}, "version": 297}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0344, 0.0336, 0.0223,  ..., 0.0240, 0.0374, 0.0295],\n        [0.0262, 0.0348, 0.0178,  ..., 0.0128, 0.0318, 0.0224],\n        [0.0368, 0.0318, 0.0232,  ..., 0.0275, 0.0289, 0.0317],\n        ...,\n        [0.0317, 0.0202, 0.0158,  ..., 0.0122, 0.0209, 0.0288],\n        [0.0315, 0.0246, 0.0315,  ..., 0.0214, 0.0248, 0.0332],\n        [0.0400, 0.0246, 0.0078,  ..., 0.0070, 0.0020, 0.0347]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962818.05733}]}, "version": 298}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.0581777}]}, "version": 299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1446, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962818.0595522}]}, "version": 300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.0601966}]}, "version": 301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0020, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962818.0610967}]}, "version": 302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.061812}]}, "version": 303}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.525639295578003, "step": null, "ts": 1644962818.0629852}]}, "version": 304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.596 (0.596)\tDT 0.000 (0.000)\tS@1 90.476 (90.476)\tLoss nan (nan)", "step": null, "ts": 1644962818.309454}]}, "version": 305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.3105454}]}, "version": 306}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1661700010299683, "step": null, "ts": 1644962818.5280957}]}, "version": 307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.1336e-02],\n        [ 2.3110e-01],\n        [ 4.9954e-01],\n        [ 1.6395e-01],\n        [ 1.8208e-01],\n        [ 4.8193e-02],\n        [ 9.3887e-02],\n        [-5.0540e-01],\n        [ 3.7968e-02],\n        [-4.8190e-01],\n        [-1.5555e-01],\n        [-1.7998e-01],\n        [-3.6568e-01],\n        [-2.6438e-02],\n        [ 1.6532e-01],\n        [-1.5093e-01],\n        [-1.4174e+00],\n        [ 1.5395e-01],\n        [ 5.5855e-01],\n        [ 4.3198e+00],\n        [ 8.8902e-01],\n        [-4.6710e-01],\n        [-3.3928e-01],\n        [-8.4872e-02],\n        [-1.2131e+00],\n        [-3.3983e-01],\n        [ 5.7482e-03],\n        [-3.4774e-02],\n        [-2.9961e+00],\n        [-5.0123e-01],\n        [ 2.5219e-01],\n        [-6.2747e-02],\n        [ 3.7009e-02],\n        [ 7.0188e-01],\n        [-1.1780e-02],\n        [-1.2906e-01],\n        [ 2.2796e-03],\n        [ 9.8532e-02],\n        [ 3.3456e-01],\n        [ 1.6244e-01],\n        [ 3.4811e-01],\n        [-6.1534e-03]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962818.5383253}]}, "version": 308}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.547259}]}, "version": 309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0164,  0.1309, -0.0526,  ...,  0.0983, -0.1321,  0.1196],\n        [ 0.3841, -0.3464, -0.7884,  ..., -0.4822,  0.1977,  0.2163],\n        [-0.6180, -1.3763,  0.2965,  ..., -0.8843,  0.3238,  0.2313],\n        ...,\n        [ 0.1532, -0.0210,  0.2279,  ...,  0.1845,  0.0150, -0.0275],\n        [-1.0354, -0.7772, -1.7475,  ..., -1.9207,  0.2823, -0.0719],\n        [-0.0687, -0.1956,  0.1081,  ...,  0.0535,  0.2167,  0.0466]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962818.5496671}]}, "version": 310}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.550557}]}, "version": 311}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(10.8822, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962818.5517738}]}, "version": 312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.5526333}]}, "version": 313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-13.9007, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962818.5537176}]}, "version": 314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.554289}]}, "version": 315}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962818.5552003}]}, "version": 316}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18519705533981323, "step": null, "ts": 1644962818.6536994}]}, "version": 317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0280],\n        [0.0369],\n        [0.0378],\n        [0.0286],\n        [0.0162],\n        [0.0280],\n        [0.0427],\n        [0.0354],\n        [0.0774],\n        [0.0404],\n        [0.0296],\n        [0.0387],\n        [0.0266],\n        [0.0269],\n        [0.0372],\n        [0.0293],\n        [0.0387],\n        [0.0161],\n        [0.0257],\n        [0.0298],\n        [0.0303],\n        [0.0178],\n        [0.0479],\n        [0.0446],\n        [0.0463],\n        [0.0545],\n        [0.0202],\n        [0.0356],\n        [0.0287],\n        [0.0230],\n        [0.0497],\n        [0.0431],\n        [0.0343],\n        [0.0348],\n        [0.0367],\n        [0.0164],\n        [0.0378],\n        [0.0157],\n        [0.0338],\n        [0.0260],\n        [0.0158],\n        [0.0226]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962818.6636436}]}, "version": 318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.6675482}]}, "version": 319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0262, 0.0256, 0.0260,  ..., 0.0153, 0.0163, 0.0295],\n        [0.0313, 0.0311, 0.0222,  ..., 0.0279, 0.0384, 0.0257],\n        [0.0325, 0.0270, 0.0340,  ..., 0.0356, 0.0330, 0.0313],\n        ...,\n        [0.0240, 0.0431, 0.0298,  ..., 0.0151, 0.0167, 0.0512],\n        [0.0637, 0.0176, 0.0183,  ..., 0.0162, 0.0202, 0.0281],\n        [0.0265, 0.0358, 0.0158,  ..., 0.0306, 0.0238, 0.0346]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962818.672198}]}, "version": 320}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.678329}]}, "version": 321}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2575, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962818.679727}]}, "version": 322}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.6807728}]}, "version": 323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0021, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962818.6819499}]}, "version": 324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962818.682833}]}, "version": 325}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5681161880493164, "step": null, "ts": 1644962818.6837988}]}, "version": 326}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7115516662597656, "step": null, "ts": 1644962819.1496842}]}, "version": 327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-5.3064e-01],\n        [-6.6086e-01],\n        [ 1.0370e+00],\n        [-1.6323e-02],\n        [-1.3556e-01],\n        [-1.5643e-03],\n        [ 1.2725e+00],\n        [ 1.3441e+00],\n        [ 7.8013e-01],\n        [ 1.7354e-01],\n        [ 8.7426e-01],\n        [ 5.5053e-01],\n        [-1.7117e-01],\n        [-3.0922e-02],\n        [ 5.0294e-01],\n        [ 1.9901e-03],\n        [-2.7999e-02],\n        [-1.5014e-02],\n        [-2.6851e-01],\n        [ 3.6501e-01],\n        [-9.1824e+01],\n        [ 1.2475e-02],\n        [-8.7128e-02],\n        [-8.0931e-02],\n        [ 2.4997e-01],\n        [ 1.5120e-02],\n        [-3.3372e-02],\n        [ 1.0086e-01],\n        [ 2.0384e-01],\n        [-6.6998e-02],\n        [ 1.9561e-01],\n        [ 7.4572e-01],\n        [-9.4182e-01],\n        [ 2.5484e-01],\n        [ 3.8305e-01],\n        [ 1.0010e-01],\n        [-1.0751e-01],\n        [ 1.5615e-01],\n        [ 8.4639e-01],\n        [-7.3812e-02],\n        [-4.1362e-02],\n        [-1.0145e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962819.1596205}]}, "version": 328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.1668446}]}, "version": 329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 3.2988e-02,  1.3907e+00,  7.5014e-02,  ..., -3.8417e-02,\n         -6.9596e-01,  6.0708e-01],\n        [-4.5161e-02, -1.2743e-01,  6.3266e-01,  ..., -3.0187e-01,\n          1.5472e-01,  1.4852e-01],\n        [-1.3177e+01,  7.2808e+01, -7.6478e-01,  ..., -2.5123e+01,\n          1.4250e+01,  1.0472e+01],\n        ...,\n        [ 4.2727e-02,  6.7140e-02,  6.0663e-02,  ...,  1.4845e-01,\n          2.0023e-02,  1.6482e-01],\n        [-2.3000e-02,  5.1550e-02,  1.5430e-01,  ...,  1.1898e-01,\n          1.1265e-01,  2.9566e-02],\n        [ 6.4734e-02,  3.5949e-02,  1.2997e-01,  ...,  8.8829e-02,\n          3.1525e-02,  2.7994e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.1694643}]}, "version": 330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.170489}]}, "version": 331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(153.9538, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962819.1718872}]}, "version": 332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.1728806}]}, "version": 333}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-157.3092, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962819.1742387}]}, "version": 334}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.1751487}]}, "version": 335}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962819.176443}]}, "version": 336}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.26593178510665894, "step": null, "ts": 1644962819.2601364}]}, "version": 337}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0101],\n        [0.0267],\n        [0.0268],\n        [0.0397],\n        [0.0249],\n        [0.0353],\n        [0.0220],\n        [0.0346],\n        [0.0298],\n        [0.0214],\n        [0.0180],\n        [0.0353],\n        [0.0368],\n        [0.0343],\n        [0.0226],\n        [0.0235],\n        [0.0270],\n        [0.0323],\n        [0.0443],\n        [0.0589],\n        [0.0262],\n        [0.0245],\n        [0.0263],\n        [0.0317],\n        [0.0169],\n        [0.0345],\n        [0.0318],\n        [0.0507],\n        [0.0415],\n        [0.0236],\n        [0.0363],\n        [0.0437],\n        [0.0298],\n        [0.0282],\n        [0.0544],\n        [0.0368],\n        [0.0287],\n        [0.0287],\n        [0.0260],\n        [0.0376],\n        [0.0320],\n        [0.0365]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.271231}]}, "version": 338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.2760084}]}, "version": 339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0643, 0.0153, 0.0169,  ..., 0.0194, 0.0140, 0.0503],\n        [0.0210, 0.0354, 0.0166,  ..., 0.0210, 0.0470, 0.0206],\n        [0.0548, 0.0175, 0.0300,  ..., 0.0240, 0.0229, 0.0324],\n        ...,\n        [0.0217, 0.0265, 0.0218,  ..., 0.0353, 0.0293, 0.0252],\n        [0.0573, 0.0259, 0.0231,  ..., 0.0163, 0.0171, 0.0443],\n        [0.0114, 0.0238, 0.0235,  ..., 0.0155, 0.0194, 0.0568]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.2812846}]}, "version": 340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.289832}]}, "version": 341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1421, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962819.291383}]}, "version": 342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.2923105}]}, "version": 343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0057, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962819.2936153}]}, "version": 344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.2945585}]}, "version": 345}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5869462490081787, "step": null, "ts": 1644962819.2955348}]}, "version": 346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962819.328417}]}, "version": 347}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6423642039299011, "step": null, "ts": 1644962819.7546592}]}, "version": 348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.4491e-01],\n        [ 1.7313e-01],\n        [-5.8864e-02],\n        [ 1.1953e-01],\n        [ 3.5659e-02],\n        [ 2.1936e-01],\n        [ 1.7998e+00],\n        [-2.4176e+00],\n        [-9.3948e-02],\n        [-1.9332e-01],\n        [-5.8085e-02],\n        [-3.0954e-01],\n        [-3.1425e+00],\n        [-4.8109e-03],\n        [-6.2951e-03],\n        [ 3.4469e-01],\n        [-5.8581e-02],\n        [-2.3988e-02],\n        [-2.8971e-01],\n        [ 2.4464e-01],\n        [-1.5620e-01],\n        [-3.0133e-01],\n        [-4.7963e-01],\n        [ 1.2521e-01],\n        [-1.5732e-01],\n        [ 1.3151e-01],\n        [-1.8196e-01],\n        [-7.0646e-02],\n        [-7.6006e+00],\n        [ 4.0247e-01],\n        [-7.8625e-02],\n        [-1.1848e+01],\n        [-5.7480e+00],\n        [ 1.6939e-01],\n        [ 1.4762e-01],\n        [-1.4119e+01],\n        [ 8.3964e-01],\n        [ 3.7623e-01],\n        [ 1.7683e-01],\n        [ 5.5917e-02],\n        [ 4.1944e-01],\n        [-2.7142e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962819.7672074}]}, "version": 349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.7682028}]}, "version": 350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.8398, -2.0301, -3.7587,  ..., -4.6552, -0.4039,  0.4339],\n        [-0.3810,  0.2781,  0.4498,  ...,  0.2229,  0.2398, -0.5955],\n        [ 0.5216, -0.1823, -0.4797,  ..., -0.9260, -0.3999,  0.6809],\n        ...,\n        [-0.0056,  0.1460,  0.1479,  ...,  0.4533,  0.4914,  0.0500],\n        [-0.3270, -0.5101,  0.3667,  ...,  0.2578,  0.6924, -0.4083],\n        [-0.4889,  0.0238,  0.1215,  ..., -0.1869, -0.0981, -0.0754]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.7707717}]}, "version": 351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.7717142}]}, "version": 352}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(53.5053, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962819.77296}]}, "version": 353}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.773831}]}, "version": 354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-28.8920, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962819.7750645}]}, "version": 355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.7759418}]}, "version": 356}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962819.7769334}]}, "version": 357}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2825164198875427, "step": null, "ts": 1644962819.8630292}]}, "version": 358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0330],\n        [0.0309],\n        [0.0264],\n        [0.0235],\n        [0.0277],\n        [0.0177],\n        [0.0433],\n        [0.0473],\n        [0.0252],\n        [0.0228],\n        [0.0259],\n        [0.0357],\n        [0.0289],\n        [0.0477],\n        [0.0321],\n        [0.0279],\n        [0.0357],\n        [0.0282],\n        [0.0250],\n        [0.0732],\n        [0.0106],\n        [0.0367],\n        [0.0460],\n        [0.0250],\n        [0.0310],\n        [0.0433],\n        [0.0415],\n        [0.0375],\n        [0.0382],\n        [0.0301],\n        [0.0333],\n        [0.0355],\n        [0.0221],\n        [0.0212],\n        [0.0365],\n        [0.0298],\n        [0.0178],\n        [0.0273],\n        [0.0441],\n        [0.0325],\n        [0.0291],\n        [0.0358]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.880231}]}, "version": 359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.8863695}]}, "version": 360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0418, 0.0492, 0.0191,  ..., 0.0233, 0.0346, 0.0346],\n        [0.0299, 0.0338, 0.0125,  ..., 0.0398, 0.0217, 0.0445],\n        [0.0342, 0.0298, 0.0135,  ..., 0.0209, 0.0217, 0.0211],\n        ...,\n        [0.0382, 0.0318, 0.0249,  ..., 0.0305, 0.0277, 0.0354],\n        [0.0415, 0.0315, 0.0305,  ..., 0.0182, 0.0316, 0.0388],\n        [0.0496, 0.0233, 0.0226,  ..., 0.0175, 0.0170, 0.0492]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962819.8888314}]}, "version": 361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.8921306}]}, "version": 362}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1604, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962819.8935952}]}, "version": 363}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.8946226}]}, "version": 364}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0042, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962819.8958738}]}, "version": 365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962819.896686}]}, "version": 366}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6707942485809326, "step": null, "ts": 1644962819.8975916}]}, "version": 367}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8185580968856812, "step": null, "ts": 1644962820.3663073}]}, "version": 368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1269],\n        [ 0.0744],\n        [ 0.0209],\n        [ 0.1471],\n        [-0.7335],\n        [-0.7045],\n        [ 0.2259],\n        [-0.1918],\n        [ 0.0289],\n        [ 0.2813],\n        [-0.5074],\n        [ 0.1728],\n        [ 0.1163],\n        [-0.0173],\n        [-0.1602],\n        [ 0.1128],\n        [-0.0465],\n        [-0.8705],\n        [-0.0054],\n        [ 0.3767],\n        [-0.1314],\n        [ 2.1779],\n        [-0.1918],\n        [ 0.0839],\n        [ 0.1516],\n        [ 0.1169],\n        [-0.1719],\n        [-0.0190],\n        [-0.0167],\n        [ 0.0824],\n        [-0.3170],\n        [-1.1277],\n        [-0.2080],\n        [ 0.1655],\n        [-0.1315],\n        [-0.0623],\n        [ 0.0361],\n        [ 0.0132],\n        [ 0.1855],\n        [ 0.5112],\n        [ 0.0879],\n        [-0.0805]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962820.3762355}]}, "version": 369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.3834414}]}, "version": 370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.2805,  0.3610, -0.7213,  ..., -0.1767,  0.4660,  0.5314],\n        [-0.1242,  0.0185, -0.0164,  ...,  0.2956,  0.1457, -0.0694],\n        [ 0.0195,  0.1607, -0.0588,  ...,  0.0354, -0.1658,  0.0759],\n        ...,\n        [ 0.0107,  0.3232,  0.7272,  ...,  0.8418,  0.4888, -0.2471],\n        [-0.2507, -0.2356,  0.2286,  ...,  0.2874,  0.2213, -0.3379],\n        [ 0.2089,  0.0594,  0.3395,  ...,  0.0944,  0.0325,  0.2228]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962820.385598}]}, "version": 371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.3866627}]}, "version": 372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(3.4417, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962820.3878453}]}, "version": 373}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.3888814}]}, "version": 374}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-4.2315, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962820.390293}]}, "version": 375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.3912594}]}, "version": 376}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962820.3924892}]}, "version": 377}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2794089615345001, "step": null, "ts": 1644962820.4757476}]}, "version": 378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0355],\n        [0.0311],\n        [0.0197],\n        [0.0294],\n        [0.0349],\n        [0.0342],\n        [0.0410],\n        [0.0412],\n        [0.0313],\n        [0.0292],\n        [0.0352],\n        [0.0185],\n        [0.0195],\n        [0.0264],\n        [0.0387],\n        [0.0291],\n        [0.0452],\n        [0.0148],\n        [0.0650],\n        [0.0438],\n        [0.0460],\n        [0.0250],\n        [0.0318],\n        [0.0146],\n        [0.0318],\n        [0.0184],\n        [0.0467],\n        [0.0305],\n        [0.0455],\n        [0.0413],\n        [0.0268],\n        [0.0322],\n        [0.0415],\n        [0.0228],\n        [0.0190],\n        [0.0335],\n        [0.0233],\n        [0.0344],\n        [0.0203],\n        [0.0232],\n        [0.0521],\n        [0.0465]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962820.4931338}]}, "version": 379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.5007627}]}, "version": 380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0307, 0.0361, 0.0201,  ..., 0.0312, 0.0356, 0.0249],\n        [0.0327, 0.0394, 0.0278,  ..., 0.0277, 0.0243, 0.0334],\n        [0.0213, 0.0145, 0.0218,  ..., 0.0082, 0.0155, 0.0528],\n        ...,\n        [0.0236, 0.0315, 0.0171,  ..., 0.0219, 0.0250, 0.0294],\n        [0.0370, 0.0429, 0.0211,  ..., 0.0260, 0.0285, 0.0358],\n        [0.0345, 0.0417, 0.0166,  ..., 0.0231, 0.0331, 0.0472]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962820.5081959}]}, "version": 381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.5092502}]}, "version": 382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1450, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962820.5107117}]}, "version": 383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.5117333}]}, "version": 384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0045, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962820.5130258}]}, "version": 385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.5140438}]}, "version": 386}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6324996948242188, "step": null, "ts": 1644962820.5153928}]}, "version": 387}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8446807265281677, "step": null, "ts": 1644962820.9692943}]}, "version": 388}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.3342e-02],\n        [-4.6710e-02],\n        [-7.4198e-01],\n        [ 2.9090e-03],\n        [ 6.2605e-02],\n        [-2.6550e+00],\n        [ 4.9537e-01],\n        [-7.2711e-02],\n        [ 8.0541e-03],\n        [-8.2075e-02],\n        [-2.1397e-01],\n        [ 1.0779e+01],\n        [ 1.6026e-01],\n        [ 1.1130e+00],\n        [-1.5580e-01],\n        [ 1.0232e-01],\n        [-1.3311e-01],\n        [-3.5663e-01],\n        [ 4.5931e-02],\n        [-1.0495e-01],\n        [-4.8245e-02],\n        [-4.4829e-02],\n        [-1.3130e-01],\n        [ 1.9563e-01],\n        [-6.8186e-05],\n        [ 2.5598e-02],\n        [ 3.2279e-01],\n        [-2.9518e-02],\n        [-4.3155e-02],\n        [ 2.0742e-02],\n        [ 3.2606e-02],\n        [ 1.0606e-01],\n        [-4.6912e-01],\n        [-3.2219e-01],\n        [ 2.2607e-01],\n        [-2.6475e-01],\n        [ 1.8241e-01],\n        [-4.2072e-01],\n        [ 2.5344e-01],\n        [ 1.2034e-01],\n        [ 1.8659e-01],\n        [ 6.2536e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962820.9777353}]}, "version": 389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.982299}]}, "version": 390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.2717, -0.1083, -0.0457,  ..., -0.0170, -0.0156,  0.0829],\n        [ 0.0676, -0.0046,  0.2931,  ...,  0.1197, -0.0363,  0.0228],\n        [ 0.1504,  0.0530,  0.3786,  ...,  0.0753,  0.1389,  0.0873],\n        ...,\n        [ 0.6813, -0.7315,  0.2063,  ..., -0.0401,  0.6358, -0.2780],\n        [ 0.2639,  0.1554, -0.4654,  ..., -0.1750,  0.2603,  0.1802],\n        [-0.5787,  0.0316,  0.5046,  ...,  0.3469,  0.6016, -0.2403]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962820.9845076}]}, "version": 391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.9852865}]}, "version": 392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(46.1112, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962820.9866612}]}, "version": 393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.9876246}]}, "version": 394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-34.8190, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962820.9888453}]}, "version": 395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962820.9896336}]}, "version": 396}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962820.9905407}]}, "version": 397}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.18837934732437134, "step": null, "ts": 1644962821.0767946}]}, "version": 398}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0570],\n        [0.0289],\n        [0.0285],\n        [0.0414],\n        [0.0281],\n        [0.0403],\n        [0.0436],\n        [0.0388],\n        [0.0273],\n        [0.0316],\n        [0.0356],\n        [0.0378],\n        [0.0189],\n        [0.0315],\n        [0.0438],\n        [0.0154],\n        [0.0298],\n        [0.0311],\n        [0.0160],\n        [0.0338],\n        [0.0235],\n        [0.0401],\n        [0.0467],\n        [0.0354],\n        [0.0195],\n        [0.0349],\n        [0.0466],\n        [0.0513],\n        [0.0668],\n        [0.0229],\n        [0.0205],\n        [0.0209],\n        [0.0161],\n        [0.0215],\n        [0.0220],\n        [0.0283],\n        [0.0374],\n        [0.0416],\n        [0.0256],\n        [0.0376],\n        [0.0489],\n        [0.0167]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962821.0930824}]}, "version": 399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.1014726}]}, "version": 400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0274, 0.0196, 0.0097,  ..., 0.0194, 0.0379, 0.0500],\n        [0.0174, 0.0263, 0.0169,  ..., 0.0220, 0.0444, 0.0262],\n        [0.0279, 0.0339, 0.0199,  ..., 0.0202, 0.0191, 0.0408],\n        ...,\n        [0.0296, 0.0387, 0.0193,  ..., 0.0434, 0.0276, 0.0241],\n        [0.0450, 0.0221, 0.0194,  ..., 0.0179, 0.0203, 0.0236],\n        [0.0210, 0.0239, 0.0146,  ..., 0.0173, 0.0127, 0.0392]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962821.1064205}]}, "version": 401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.1098397}]}, "version": 402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1217, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962821.111495}]}, "version": 403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.1125212}]}, "version": 404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0040, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962821.1136403}]}, "version": 405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.1146834}]}, "version": 406}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5560314655303955, "step": null, "ts": 1644962821.1157992}]}, "version": 407}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7663546204566956, "step": null, "ts": 1644962821.5574863}]}, "version": 408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-3.3085e-01],\n        [-4.1817e+00],\n        [ 7.8572e-01],\n        [ 3.7208e-01],\n        [-5.1136e-01],\n        [-1.7466e+00],\n        [-8.6369e-02],\n        [-2.3728e-02],\n        [ 5.0962e-02],\n        [ 1.1838e-01],\n        [-3.1262e-02],\n        [-4.1834e-02],\n        [-4.7759e-02],\n        [-3.6279e-02],\n        [ 2.6619e-02],\n        [ 1.1736e+00],\n        [-9.5698e-02],\n        [ 7.6918e-02],\n        [-1.0036e-01],\n        [-3.5401e-02],\n        [ 5.7582e-01],\n        [ 4.1637e-02],\n        [ 4.5928e-01],\n        [ 8.2224e-02],\n        [ 3.2108e-01],\n        [-5.6874e-01],\n        [ 7.7213e-01],\n        [ 5.4123e-01],\n        [ 1.7671e-01],\n        [ 7.9275e-02],\n        [-2.3505e-03],\n        [ 8.7767e-02],\n        [ 7.5346e-02],\n        [ 1.5715e-02],\n        [-1.0512e+00],\n        [ 1.4757e-02],\n        [ 1.2334e-02],\n        [-1.1267e-01],\n        [ 1.8243e-02],\n        [-9.9264e-01],\n        [-1.2684e+00],\n        [ 5.1230e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962821.57037}]}, "version": 409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.5714417}]}, "version": 410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1902, -0.1469,  0.2079,  ..., -0.1219,  0.0382,  0.1573],\n        [ 0.1851,  0.8107, -1.5556,  ..., -2.8737, -0.9263,  0.7035],\n        [ 4.6757, -4.3710,  5.1897,  ...,  2.4029,  2.4624, -0.3617],\n        ...,\n        [-2.1454,  7.4015,  5.6866,  ...,  5.2994,  4.0864, -1.3335],\n        [-0.8802,  0.2448,  0.9887,  ...,  1.3137, -0.7271, -0.2405],\n        [ 0.2060,  0.0622,  0.3314,  ...,  0.1943,  0.0543, -0.1058]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962821.5738332}]}, "version": 411}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.57941}]}, "version": 412}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.6293, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962821.580786}]}, "version": 413}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.5817873}]}, "version": 414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-11.1775, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962821.583265}]}, "version": 415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.5842733}]}, "version": 416}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962821.5856137}]}, "version": 417}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2777021527290344, "step": null, "ts": 1644962821.6686492}]}, "version": 418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0152],\n        [0.0343],\n        [0.0211],\n        [0.0154],\n        [0.0100],\n        [0.0195],\n        [0.0256],\n        [0.0251],\n        [0.0492],\n        [0.0247],\n        [0.0283],\n        [0.0352],\n        [0.0416],\n        [0.0323],\n        [0.0310],\n        [0.0373],\n        [0.0278],\n        [0.0256],\n        [0.0291],\n        [0.0441],\n        [0.0314],\n        [0.0275],\n        [0.0419],\n        [0.0297],\n        [0.0441],\n        [0.0262],\n        [0.0236],\n        [0.0459],\n        [0.0393],\n        [0.0434],\n        [0.0280],\n        [0.0240],\n        [0.0516],\n        [0.0313],\n        [0.0390],\n        [0.0834],\n        [0.0417],\n        [0.0267],\n        [0.0267],\n        [0.0206],\n        [0.0398],\n        [0.0264]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962821.6873295}]}, "version": 419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.6933746}]}, "version": 420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0560, 0.0279, 0.0273,  ..., 0.0110, 0.0156, 0.0612],\n        [0.0348, 0.0353, 0.0215,  ..., 0.0195, 0.0349, 0.0290],\n        [0.0285, 0.0285, 0.0218,  ..., 0.0242, 0.0455, 0.0267],\n        ...,\n        [0.0474, 0.0445, 0.0213,  ..., 0.0210, 0.0201, 0.0360],\n        [0.0073, 0.0548, 0.0128,  ..., 0.0222, 0.0328, 0.0168],\n        [0.0093, 0.0179, 0.0141,  ..., 0.0169, 0.0335, 0.0487]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962821.6984258}]}, "version": 421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.699354}]}, "version": 422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1198, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962821.7007277}]}, "version": 423}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.701682}]}, "version": 424}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0038, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962821.7028246}]}, "version": 425}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962821.7036722}]}, "version": 426}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.561655282974243, "step": null, "ts": 1644962821.7046468}]}, "version": 427}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5561956167221069, "step": null, "ts": 1644962822.1612976}]}, "version": 428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.0331e-01],\n        [ 4.6865e-02],\n        [ 1.3226e-01],\n        [ 2.0685e-01],\n        [ 1.1696e-01],\n        [-4.8980e-02],\n        [ 1.2857e-01],\n        [-8.4888e-02],\n        [-2.6534e-01],\n        [ 4.0932e-01],\n        [ 6.0035e-01],\n        [-5.8110e-01],\n        [ 1.1509e+00],\n        [ 1.3185e-01],\n        [-7.9479e+00],\n        [ 4.8613e-02],\n        [-1.4655e-01],\n        [ 8.8223e-02],\n        [ 1.5888e-01],\n        [ 1.1840e-01],\n        [-6.1908e-02],\n        [-2.5130e-02],\n        [-6.3905e-01],\n        [ 1.4689e-01],\n        [ 4.4435e-01],\n        [-7.7784e-01],\n        [-3.5990e-01],\n        [-8.0286e-01],\n        [ 4.3053e-02],\n        [ 1.6322e-02],\n        [-1.2124e-01],\n        [-7.0025e-02],\n        [-1.2209e-01],\n        [ 1.0067e+00],\n        [ 4.1633e-02],\n        [-2.0911e-02],\n        [ 1.2068e+00],\n        [-1.1646e-01],\n        [ 2.9862e-01],\n        [ 3.8094e-01],\n        [-5.1545e-02],\n        [ 1.9357e-03]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962822.1649692}]}, "version": 429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.1657598}]}, "version": 430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0197, -0.0588, -0.4068,  ..., -0.0679, -0.0851, -0.2042],\n        [-0.0202, -0.0021,  0.2123,  ...,  0.0894,  0.1208, -0.0376],\n        [ 0.0750, -0.2145, -0.1579,  ..., -0.5521, -0.6059,  0.3215],\n        ...,\n        [ 0.5598, -0.1471, -0.7755,  ...,  0.0656, -0.0347,  0.0583],\n        [ 0.2994,  0.0539,  0.4117,  ...,  0.1680,  0.2439,  0.1482],\n        [ 0.0064, -0.1481,  0.1561,  ...,  0.6145,  0.4987, -0.2092]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962822.167856}]}, "version": 431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.1684618}]}, "version": 432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(270.2879, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962822.1694067}]}, "version": 433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.170105}]}, "version": 434}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-370.8477, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962822.1713524}]}, "version": 435}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.1719253}]}, "version": 436}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962822.172844}]}, "version": 437}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.29699212312698364, "step": null, "ts": 1644962822.2710998}]}, "version": 438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0185],\n        [0.0214],\n        [0.0309],\n        [0.0209],\n        [0.0350],\n        [0.0351],\n        [0.0437],\n        [0.0506],\n        [0.0298],\n        [0.0273],\n        [0.0459],\n        [0.0358],\n        [0.0367],\n        [0.0279],\n        [0.0258],\n        [0.0448],\n        [0.0238],\n        [0.0369],\n        [0.0201],\n        [0.0397],\n        [0.0327],\n        [0.0210],\n        [0.0396],\n        [0.0390],\n        [0.0327],\n        [0.0172],\n        [0.0233],\n        [0.0360],\n        [0.0462],\n        [0.0443],\n        [0.0513],\n        [0.0141],\n        [0.0278],\n        [0.0288],\n        [0.0246],\n        [0.0060],\n        [0.0290],\n        [0.0517],\n        [0.0367],\n        [0.0397],\n        [0.0500],\n        [0.0385]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962822.2798414}]}, "version": 439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.2871065}]}, "version": 440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0428, 0.0212, 0.0255,  ..., 0.0180, 0.0288, 0.0343],\n        [0.0152, 0.0373, 0.0256,  ..., 0.0113, 0.0301, 0.0332],\n        [0.0316, 0.0310, 0.0201,  ..., 0.0257, 0.0237, 0.0246],\n        ...,\n        [0.0368, 0.0287, 0.0248,  ..., 0.0301, 0.0351, 0.0325],\n        [0.0332, 0.0316, 0.0206,  ..., 0.0267, 0.0279, 0.0486],\n        [0.0367, 0.0254, 0.0299,  ..., 0.0323, 0.0273, 0.0289]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962822.2898567}]}, "version": 441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.2908115}]}, "version": 442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.4677, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962822.291965}]}, "version": 443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.2927024}]}, "version": 444}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0012, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962822.2940028}]}, "version": 445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962822.2951493}]}, "version": 446}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.536144733428955, "step": null, "ts": 1644962822.297113}]}, "version": 447}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7657560110092163, "step": null, "ts": 1644962823.0405579}]}, "version": 448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.5826e-02],\n        [ 1.6995e-01],\n        [ 7.2463e-02],\n        [ 4.7282e-02],\n        [ 5.8658e-01],\n        [ 2.5205e-02],\n        [ 8.9673e-02],\n        [-9.8629e-02],\n        [ 4.7545e-02],\n        [ 6.9667e-03],\n        [ 4.7468e-01],\n        [ 6.9246e-02],\n        [ 1.2435e-01],\n        [-1.1997e-02],\n        [ 1.1955e-01],\n        [-1.8195e+00],\n        [ 3.4473e-02],\n        [ 2.1412e-02],\n        [ 1.6069e-03],\n        [ 9.3434e-02],\n        [ 7.2003e-02],\n        [-4.5404e-02],\n        [-3.9213e-02],\n        [ 1.7952e+00],\n        [-1.6268e+00],\n        [-2.8871e-01],\n        [-7.7782e-01],\n        [ 1.0624e+01],\n        [ 1.1374e+00],\n        [ 1.2428e-01],\n        [ 1.0665e-01],\n        [ 4.7555e-01],\n        [-1.3418e-01],\n        [ 8.0116e-01],\n        [ 8.1711e-02],\n        [ 5.8939e-01],\n        [ 1.8786e-01],\n        [-1.1229e-02],\n        [ 2.3933e-02],\n        [-4.3425e-01],\n        [-4.1626e-02],\n        [ 6.5161e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962823.050564}]}, "version": 449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.0577786}]}, "version": 450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.1374,  0.2869,  0.4041,  ...,  0.1377, -0.0542, -0.0083],\n        [-0.0127, -0.2731, -0.2968,  ..., -0.4895,  0.0261, -0.1055],\n        [-0.2556,  0.2105,  0.5038,  ...,  0.2215,  0.1928,  0.1683],\n        ...,\n        [-0.0727,  0.1636,  0.2742,  ..., -0.0204, -0.2320, -0.4730],\n        [ 0.1301, -0.1572, -0.5014,  ..., -0.1641,  0.1796,  0.0371],\n        [ 0.1312,  0.1817,  0.4221,  ...,  0.2221, -0.0121, -0.1041]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.060343}]}, "version": 451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.0613992}]}, "version": 452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(17.9186, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962823.0626128}]}, "version": 453}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.0634923}]}, "version": 454}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-17.5575, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962823.0646055}]}, "version": 455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.0653944}]}, "version": 456}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962823.066397}]}, "version": 457}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3938589096069336, "step": null, "ts": 1644962823.1636093}]}, "version": 458}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0212],\n        [0.0342],\n        [0.0197],\n        [0.0404],\n        [0.0405],\n        [0.0335],\n        [0.0219],\n        [0.0567],\n        [0.0216],\n        [0.0155],\n        [0.0366],\n        [0.0281],\n        [0.0147],\n        [0.0111],\n        [0.0423],\n        [0.0259],\n        [0.0334],\n        [0.0217],\n        [0.0323],\n        [0.0346],\n        [0.0292],\n        [0.0599],\n        [0.0319],\n        [0.0403],\n        [0.0307],\n        [0.0296],\n        [0.0317],\n        [0.0609],\n        [0.0335],\n        [0.0515],\n        [0.0357],\n        [0.0213],\n        [0.0309],\n        [0.0353],\n        [0.0188],\n        [0.0439],\n        [0.0453],\n        [0.0349],\n        [0.0254],\n        [0.0309],\n        [0.0300],\n        [0.0340]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.1780014}]}, "version": 459}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.181778}]}, "version": 460}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0305, 0.0259, 0.0427,  ..., 0.0221, 0.0214, 0.0315],\n        [0.0361, 0.0430, 0.0187,  ..., 0.0161, 0.0205, 0.0313],\n        [0.0267, 0.0361, 0.0523,  ..., 0.0086, 0.0113, 0.0393],\n        ...,\n        [0.0221, 0.0303, 0.0239,  ..., 0.0315, 0.0285, 0.0327],\n        [0.0288, 0.0346, 0.0177,  ..., 0.0300, 0.0260, 0.0340],\n        [0.0154, 0.0114, 0.0089,  ..., 0.0111, 0.0242, 0.0149]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.186707}]}, "version": 461}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.187697}]}, "version": 462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1657, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962823.1888225}]}, "version": 463}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.1949363}]}, "version": 464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0032, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962823.196054}]}, "version": 465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.1969056}]}, "version": 466}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5806047916412354, "step": null, "ts": 1644962823.197875}]}, "version": 467}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6978300213813782, "step": null, "ts": 1644962823.6193259}]}, "version": 468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0837],\n        [-0.0527],\n        [ 0.6149],\n        [-2.5021],\n        [ 0.0163],\n        [-0.3185],\n        [ 0.1123],\n        [-1.3315],\n        [ 0.8994],\n        [-0.2363],\n        [-0.1227],\n        [ 0.0436],\n        [ 0.1186],\n        [ 0.0638],\n        [-0.0370],\n        [ 0.0913],\n        [ 0.1947],\n        [ 0.0890],\n        [ 0.5248],\n        [ 0.0175],\n        [ 0.0434],\n        [-0.1555],\n        [ 0.0633],\n        [-0.0303],\n        [-0.0324],\n        [ 0.0399],\n        [ 0.1227],\n        [-0.1344],\n        [-0.0224],\n        [-0.0687],\n        [ 0.0093],\n        [-0.9586],\n        [-2.0285],\n        [ 0.0677],\n        [-0.0343],\n        [ 0.0896],\n        [ 0.4945],\n        [-0.1123],\n        [ 0.9860],\n        [ 0.4898],\n        [ 0.2748],\n        [ 0.0783]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.632453}]}, "version": 469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.633509}]}, "version": 470}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.2730e-02, -1.0625e-01,  6.9535e-02,  ...,  8.0725e-02,\n          1.0630e-01, -4.3168e-03],\n        [-4.1650e-02,  3.0411e-03, -4.9324e-02,  ...,  2.3683e-01,\n          2.1194e-01, -3.6739e-02],\n        [ 1.0016e+00,  9.3000e-01,  2.8179e+00,  ...,  5.2119e+00,\n          2.0912e+00, -2.5471e+00],\n        ...,\n        [-3.2491e-02,  9.8662e-02, -6.0753e-01,  ..., -2.4130e-01,\n          1.1138e-01,  1.6005e-01],\n        [-2.6607e-02,  3.7696e-01,  7.2161e-02,  ...,  2.3099e-01,\n          1.3860e-01, -4.0657e-01],\n        [-3.2511e-01,  4.9225e-01,  1.0262e+00,  ...,  7.8701e-01,\n          5.5684e-01, -4.2060e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.6357927}]}, "version": 471}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.6365817}]}, "version": 472}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(618.0583, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962823.6376832}]}, "version": 473}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.6385043}]}, "version": 474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-554.5829, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962823.6396213}]}, "version": 475}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.6403522}]}, "version": 476}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962823.6411595}]}, "version": 477}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.42228972911834717, "step": null, "ts": 1644962823.7479258}]}, "version": 478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0339],\n        [0.0365],\n        [0.0342],\n        [0.0302],\n        [0.0178],\n        [0.0284],\n        [0.0221],\n        [0.0468],\n        [0.0362],\n        [0.0290],\n        [0.0394],\n        [0.0526],\n        [0.0551],\n        [0.0366],\n        [0.0315],\n        [0.0191],\n        [0.0367],\n        [0.0379],\n        [0.0237],\n        [0.0241],\n        [0.0336],\n        [0.0190],\n        [0.0333],\n        [0.0297],\n        [0.0199],\n        [0.0421],\n        [0.0226],\n        [0.0347],\n        [0.0374],\n        [0.0347],\n        [0.0243],\n        [0.0290],\n        [0.0156],\n        [0.0223],\n        [0.0304],\n        [0.0229],\n        [0.0291],\n        [0.0229],\n        [0.0268],\n        [0.0437],\n        [0.0275],\n        [0.0257]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.760252}]}, "version": 479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.7636414}]}, "version": 480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0271, 0.0278, 0.0278,  ..., 0.0267, 0.0297, 0.0279],\n        [0.0138, 0.0123, 0.0193,  ..., 0.0175, 0.0245, 0.0494],\n        [0.0267, 0.0295, 0.0194,  ..., 0.0206, 0.0195, 0.0311],\n        ...,\n        [0.0336, 0.0311, 0.0227,  ..., 0.0195, 0.0243, 0.0316],\n        [0.0355, 0.0412, 0.0360,  ..., 0.0306, 0.0323, 0.0342],\n        [0.0327, 0.0271, 0.0104,  ..., 0.0070, 0.0200, 0.0306]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962823.7686987}]}, "version": 481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.7697153}]}, "version": 482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1466, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962823.7710557}]}, "version": 483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.771998}]}, "version": 484}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0026, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962823.7734556}]}, "version": 485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962823.77448}]}, "version": 486}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5692992210388184, "step": null, "ts": 1644962823.7754886}]}, "version": 487}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8129492402076721, "step": null, "ts": 1644962824.2042935}]}, "version": 488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-5.6733e-01],\n        [ 4.0113e-02],\n        [-8.1700e-02],\n        [ 7.9343e-02],\n        [-9.1816e-02],\n        [ 1.3143e-01],\n        [ 9.6460e-02],\n        [ 1.6298e+00],\n        [ 4.9373e-01],\n        [-7.7081e-01],\n        [-7.8765e-02],\n        [ 1.0039e-01],\n        [ 7.3689e-03],\n        [-1.5262e-01],\n        [ 8.2787e-02],\n        [-4.1173e-02],\n        [ 4.4067e-01],\n        [ 4.0836e-02],\n        [-3.7732e-02],\n        [ 3.2322e-01],\n        [ 7.5942e-01],\n        [ 6.9619e-01],\n        [ 1.5962e-01],\n        [ 3.0561e-01],\n        [-4.3782e-01],\n        [ 1.1797e-01],\n        [ 1.9299e-02],\n        [ 1.5674e-01],\n        [-3.5165e-02],\n        [-2.0063e-02],\n        [ 3.9541e-02],\n        [-3.2180e-01],\n        [ 6.2216e-01],\n        [-1.4239e-02],\n        [ 2.1161e-02],\n        [ 7.9659e-02],\n        [ 1.3111e+00],\n        [ 9.9850e-02],\n        [-8.0480e-02],\n        [ 1.0054e-01],\n        [-2.0927e-01],\n        [-9.0549e+00]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962824.2173357}]}, "version": 489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.2183857}]}, "version": 490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.1108,  0.0752,  0.2128,  ...,  0.1885, -0.1568, -0.1050],\n        [-0.1668, -0.0415,  0.0867,  ...,  0.3261,  0.0765, -0.1418],\n        [ 0.0074,  0.0492,  0.1697,  ...,  0.2452,  0.2251,  0.1229],\n        ...,\n        [ 0.0419,  0.0468,  0.2630,  ...,  0.1359,  0.1601, -0.0159],\n        [ 0.1209,  0.0231,  0.0448,  ...,  0.0820,  0.0762,  0.0613],\n        [ 0.6290, -1.1030, -0.5870,  ..., -2.3473, -1.0191,  2.6793]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.2207778}]}, "version": 491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.221706}]}, "version": 492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(16.1651, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962824.2229466}]}, "version": 493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.2238154}]}, "version": 494}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-23.8016, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962824.2252235}]}, "version": 495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.2261848}]}, "version": 496}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962824.227461}]}, "version": 497}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21753357350826263, "step": null, "ts": 1644962824.3142097}]}, "version": 498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0291],\n        [0.0246],\n        [0.0375],\n        [0.0263],\n        [0.0313],\n        [0.0290],\n        [0.0703],\n        [0.0474],\n        [0.0405],\n        [0.0313],\n        [0.0327],\n        [0.0291],\n        [0.0384],\n        [0.0278],\n        [0.0405],\n        [0.0522],\n        [0.0310],\n        [0.0306],\n        [0.0194],\n        [0.0360],\n        [0.0376],\n        [0.0343],\n        [0.0299],\n        [0.0368],\n        [0.0236],\n        [0.0296],\n        [0.0138],\n        [0.0210],\n        [0.0236],\n        [0.0272],\n        [0.0318],\n        [0.0248],\n        [0.0331],\n        [0.0175],\n        [0.0220],\n        [0.0095],\n        [0.0391],\n        [0.0508],\n        [0.0442],\n        [0.0356],\n        [0.0235],\n        [0.0325]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.3230345}]}, "version": 499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.339703}]}, "version": 500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0303, 0.0279, 0.0306,  ..., 0.0321, 0.0273, 0.0312],\n        [0.0457, 0.0227, 0.0307,  ..., 0.0316, 0.0373, 0.0314],\n        [0.0396, 0.0428, 0.0231,  ..., 0.0201, 0.0342, 0.0250],\n        ...,\n        [0.0169, 0.0416, 0.0181,  ..., 0.0163, 0.0262, 0.0424],\n        [0.0298, 0.0270, 0.0203,  ..., 0.0182, 0.0244, 0.0338],\n        [0.0342, 0.0406, 0.0103,  ..., 0.0281, 0.0145, 0.0289]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.3451252}]}, "version": 501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.3484435}]}, "version": 502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1991, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962824.3547924}]}, "version": 503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.355681}]}, "version": 504}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0031, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962824.3567774}]}, "version": 505}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.3575487}]}, "version": 506}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5314276218414307, "step": null, "ts": 1644962824.358535}]}, "version": 507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.576 (0.576)\tDT 0.000 (0.000)\tS@1 97.619 (97.619)\tLoss nan (nan)", "step": null, "ts": 1644962824.6011586}]}, "version": 508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.6021688}]}, "version": 509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962824.6706827}]}, "version": 510}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0312994718551636, "step": null, "ts": 1644962824.8299663}]}, "version": 511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.8995e-02],\n        [-1.7359e-01],\n        [ 1.4992e-02],\n        [-2.2336e-01],\n        [ 2.9201e-01],\n        [-5.7035e-02],\n        [ 6.1915e-01],\n        [ 3.8583e-01],\n        [ 2.2367e-01],\n        [-4.1809e-02],\n        [-6.0310e-02],\n        [-1.8342e-01],\n        [-2.7216e-01],\n        [ 2.8456e-03],\n        [ 8.6934e-02],\n        [ 1.3844e-01],\n        [ 2.2026e-02],\n        [-1.0911e-01],\n        [ 1.6783e-02],\n        [-1.6747e-03],\n        [-1.1763e-01],\n        [-1.3823e+00],\n        [ 2.1280e-01],\n        [ 1.8721e-01],\n        [ 9.5906e-01],\n        [-2.4937e+00],\n        [ 3.7234e-01],\n        [-6.5416e-03],\n        [-1.8702e-01],\n        [-3.9622e-03],\n        [ 1.0063e+00],\n        [-2.8204e-01],\n        [-1.2125e-01],\n        [-1.6117e+00],\n        [-2.2332e-02],\n        [ 6.2264e-01],\n        [-1.1841e-02],\n        [ 1.8231e-02],\n        [ 6.8701e-01],\n        [-2.7753e-01],\n        [-2.4181e-01],\n        [ 1.1551e+00]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962824.8400097}]}, "version": 512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.8468573}]}, "version": 513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.7475e-02,  2.1928e-01, -9.5735e-02,  ...,  2.5350e-02,\n         -1.4053e-01,  1.0213e-01],\n        [ 2.5631e-01, -4.3902e-01, -8.8799e-01,  ..., -4.1735e-01,\n          2.4224e-01,  3.8123e-02],\n        [ 2.2431e-04,  2.4743e-02,  3.0373e-01,  ...,  1.6664e-01,\n         -5.8817e-02, -2.4943e-02],\n        ...,\n        [-4.2516e-02, -2.4139e-02,  3.2356e-01,  ...,  1.8340e-01,\n         -2.7188e-02,  2.9943e-01],\n        [ 3.4906e-02, -9.2462e-02, -1.2692e-01,  ...,  1.8960e-01,\n          4.2914e-01, -3.3617e-01],\n        [ 8.2010e+00, -1.1257e+00,  1.3787e+00,  ..., -1.0093e+01,\n         -4.4049e+00,  2.1691e+00]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.849362}]}, "version": 514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.850467}]}, "version": 515}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(424.6403, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962824.851818}]}, "version": 516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.8527462}]}, "version": 517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-457.1834, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962824.854145}]}, "version": 518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.8551056}]}, "version": 519}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962824.8563962}]}, "version": 520}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5515051484107971, "step": null, "ts": 1644962824.9499657}]}, "version": 521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0468],\n        [0.0555],\n        [0.0276],\n        [0.0292],\n        [0.0469],\n        [0.0359],\n        [0.0190],\n        [0.0187],\n        [0.0233],\n        [0.0333],\n        [0.0287],\n        [0.0372],\n        [0.0361],\n        [0.0421],\n        [0.0430],\n        [0.0403],\n        [0.0336],\n        [0.0139],\n        [0.0198],\n        [0.0275],\n        [0.0451],\n        [0.0495],\n        [0.0285],\n        [0.0307],\n        [0.0510],\n        [0.0276],\n        [0.0236],\n        [0.0362],\n        [0.0258],\n        [0.0205],\n        [0.0441],\n        [0.0177],\n        [0.0203],\n        [0.0234],\n        [0.0132],\n        [0.0537],\n        [0.0405],\n        [0.0334],\n        [0.0395],\n        [0.0304],\n        [0.0221],\n        [0.0241]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.9617155}]}, "version": 522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.9677362}]}, "version": 523}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0263, 0.0202, 0.0187,  ..., 0.0138, 0.0278, 0.0324],\n        [0.0095, 0.0238, 0.0115,  ..., 0.0186, 0.0352, 0.0177],\n        [0.0236, 0.0255, 0.0185,  ..., 0.0287, 0.0331, 0.0348],\n        ...,\n        [0.0311, 0.0381, 0.0297,  ..., 0.0220, 0.0367, 0.0401],\n        [0.0284, 0.0272, 0.0222,  ..., 0.0340, 0.0224, 0.0380],\n        [0.0236, 0.0274, 0.0316,  ..., 0.0168, 0.0262, 0.0432]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962824.9726973}]}, "version": 524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.9736693}]}, "version": 525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1633, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962824.9749207}]}, "version": 526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.9757318}]}, "version": 527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0048, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962824.9768453}]}, "version": 528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962824.9812026}]}, "version": 529}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4814279079437256, "step": null, "ts": 1644962824.9824874}]}, "version": 530}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962825.319717}]}, "version": 531}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.041534423828125, "step": null, "ts": 1644962825.319717}]}, "version": 532}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644962825.319717}]}, "version": 533}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962825.319717}]}, "version": 534}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5437225699424744, "step": null, "ts": 1644962825.4318562}]}, "version": 535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.3457],\n        [-1.7979],\n        [ 1.5224],\n        [-0.1144],\n        [ 0.0066],\n        [-0.4055],\n        [ 0.2627],\n        [ 0.6476],\n        [-0.0043],\n        [ 1.0743],\n        [ 0.0289],\n        [ 3.5018],\n        [ 0.1899],\n        [-0.1449],\n        [ 0.1663],\n        [-0.1413],\n        [ 0.1624],\n        [ 0.2095],\n        [ 0.0868],\n        [-0.0277],\n        [ 0.7409],\n        [ 0.0144],\n        [ 0.1636],\n        [-0.0369],\n        [ 0.4385],\n        [ 0.2927],\n        [ 0.1468],\n        [ 0.2182],\n        [ 0.3143],\n        [ 0.2064],\n        [ 0.0185],\n        [-0.2138],\n        [-0.1572],\n        [ 0.0822],\n        [ 0.2489],\n        [-0.1666],\n        [-1.9788],\n        [ 0.1745],\n        [ 2.6887],\n        [-0.0060],\n        [ 0.0231],\n        [-0.0520]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962825.446926}]}, "version": 536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.4545653}]}, "version": 537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.5252e-01, -1.0980e-01,  4.4937e-01,  ..., -3.4970e-01,\n          6.2889e-02,  1.8279e-01],\n        [ 2.5372e-01, -7.4794e-02,  1.1198e+00,  ...,  1.8173e-01,\n          8.7300e-01,  1.7684e-01],\n        [-1.7291e+00,  2.0342e+00,  4.4289e+00,  ...,  1.6293e+00,\n          1.3053e+00, -6.9378e-01],\n        ...,\n        [-3.6895e-02,  1.4307e-01, -5.3200e-02,  ...,  2.1874e-01,\n          2.6795e-01, -1.7351e-01],\n        [ 3.9288e-02,  1.7273e-01, -4.9865e-02,  ..., -3.9968e-03,\n         -9.7823e-02,  1.3360e-01],\n        [ 3.0554e-02,  7.1572e-02, -6.3573e-01,  ..., -1.2986e+00,\n         -1.9737e+00,  6.1954e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962825.4568172}]}, "version": 538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.4576886}]}, "version": 539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(30.3953, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962825.458826}]}, "version": 540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.4596877}]}, "version": 541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-45.4211, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962825.4608912}]}, "version": 542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.4616957}]}, "version": 543}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962825.4627233}]}, "version": 544}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25448518991470337, "step": null, "ts": 1644962825.5642867}]}, "version": 545}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0283],\n        [0.0428],\n        [0.0306],\n        [0.0450],\n        [0.0251],\n        [0.0200],\n        [0.0314],\n        [0.0117],\n        [0.0295],\n        [0.0356],\n        [0.0335],\n        [0.0289],\n        [0.0228],\n        [0.0543],\n        [0.0224],\n        [0.0356],\n        [0.0203],\n        [0.0483],\n        [0.0296],\n        [0.0282],\n        [0.0324],\n        [0.0356],\n        [0.0344],\n        [0.0252],\n        [0.0241],\n        [0.0262],\n        [0.0278],\n        [0.0297],\n        [0.0264],\n        [0.0424],\n        [0.0153],\n        [0.0343],\n        [0.0243],\n        [0.0215],\n        [0.0332],\n        [0.0337],\n        [0.0350],\n        [0.0389],\n        [0.0230],\n        [0.0408],\n        [0.0500],\n        [0.0523]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962825.5754213}]}, "version": 546}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.5841303}]}, "version": 547}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0348, 0.0281, 0.0230,  ..., 0.0217, 0.0383, 0.0261],\n        [0.0272, 0.0425, 0.0440,  ..., 0.0159, 0.0177, 0.0445],\n        [0.0382, 0.0338, 0.0288,  ..., 0.0258, 0.0402, 0.0356],\n        ...,\n        [0.0334, 0.0263, 0.0283,  ..., 0.0373, 0.0203, 0.0446],\n        [0.0382, 0.0253, 0.0179,  ..., 0.0306, 0.0343, 0.0411],\n        [0.0313, 0.0563, 0.0307,  ..., 0.0097, 0.0233, 0.0272]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962825.5862837}]}, "version": 548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.5872107}]}, "version": 549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1806, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962825.5885596}]}, "version": 550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.5893917}]}, "version": 551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0024, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962825.5906258}]}, "version": 552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962825.591645}]}, "version": 553}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5170273780822754, "step": null, "ts": 1644962825.5925574}]}, "version": 554}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.974042534828186, "step": null, "ts": 1644962826.035663}]}, "version": 555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.9341],\n        [-0.2727],\n        [ 0.1269],\n        [ 0.0333],\n        [ 0.0239],\n        [-0.0479],\n        [ 0.0160],\n        [ 0.0354],\n        [-0.0549],\n        [ 0.3619],\n        [ 0.4262],\n        [ 0.1494],\n        [ 0.6487],\n        [ 0.1711],\n        [ 0.0111],\n        [-1.5404],\n        [ 0.3385],\n        [ 0.0936],\n        [-0.1717],\n        [ 0.1103],\n        [-0.0428],\n        [ 0.2258],\n        [-0.0135],\n        [ 0.0491],\n        [-0.7815],\n        [-8.5048],\n        [-0.2196],\n        [ 0.1577],\n        [-0.4493],\n        [ 0.4560],\n        [-0.6251],\n        [ 0.1365],\n        [-0.2301],\n        [ 0.0847],\n        [-0.0301],\n        [ 0.0550],\n        [-0.1698],\n        [ 1.2921],\n        [ 0.1281],\n        [-0.2386],\n        [ 0.4767],\n        [-0.0694]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.0483313}]}, "version": 556}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.0588024}]}, "version": 557}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.2676, -0.8399,  0.8518,  ..., -1.7877, -1.4252,  0.7418],\n        [-3.1525, -1.0533, -2.8819,  ..., -4.2259, -1.8153,  2.3070],\n        [-0.0473, -0.1041, -0.2059,  ..., -0.2808, -0.2812,  0.1125],\n        ...,\n        [-0.6048,  0.1883,  0.3957,  ...,  0.4506,  0.8775, -0.3786],\n        [ 0.1610, -0.4250, -0.5778,  ..., -0.7251, -0.1892,  0.7556],\n        [-0.1350, -0.0122,  0.1562,  ...,  0.2304,  0.1212, -0.0641]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.061306}]}, "version": 558}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.062263}]}, "version": 559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(10.9706, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962826.0636935}]}, "version": 560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.0646584}]}, "version": 561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-10.2576, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962826.065967}]}, "version": 562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.0669158}]}, "version": 563}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962826.0679064}]}, "version": 564}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.30886322259902954, "step": null, "ts": 1644962826.1541138}]}, "version": 565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0374],\n        [0.0298],\n        [0.0256],\n        [0.0291],\n        [0.0232],\n        [0.0210],\n        [0.0215],\n        [0.0292],\n        [0.0129],\n        [0.0282],\n        [0.0560],\n        [0.0345],\n        [0.0143],\n        [0.0430],\n        [0.0272],\n        [0.0328],\n        [0.0443],\n        [0.0307],\n        [0.0298],\n        [0.0359],\n        [0.0262],\n        [0.0195],\n        [0.0288],\n        [0.0184],\n        [0.0338],\n        [0.0384],\n        [0.0437],\n        [0.0255],\n        [0.0600],\n        [0.0216],\n        [0.0414],\n        [0.0439],\n        [0.0316],\n        [0.0523],\n        [0.0508],\n        [0.0481],\n        [0.0352],\n        [0.0198],\n        [0.0234],\n        [0.0333],\n        [0.0366],\n        [0.0364]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.161396}]}, "version": 566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.1675992}]}, "version": 567}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0303, 0.0322, 0.0246,  ..., 0.0208, 0.0452, 0.0348],\n        [0.0332, 0.0281, 0.0171,  ..., 0.0281, 0.0131, 0.0357],\n        [0.0400, 0.0158, 0.0332,  ..., 0.0099, 0.0196, 0.0518],\n        ...,\n        [0.0374, 0.0546, 0.0190,  ..., 0.0217, 0.0182, 0.0397],\n        [0.0380, 0.0320, 0.0277,  ..., 0.0339, 0.0354, 0.0294],\n        [0.0306, 0.0250, 0.0247,  ..., 0.0249, 0.0245, 0.0355]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.1726587}]}, "version": 568}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.1816428}]}, "version": 569}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1842, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962826.1830566}]}, "version": 570}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.1840563}]}, "version": 571}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0031, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962826.185587}]}, "version": 572}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.1865737}]}, "version": 573}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5434093475341797, "step": null, "ts": 1644962826.1877058}]}, "version": 574}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8365299701690674, "step": null, "ts": 1644962826.6445527}]}, "version": 575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0414],\n        [-0.1369],\n        [ 0.2168],\n        [ 0.0231],\n        [-0.0404],\n        [-0.3107],\n        [ 0.2327],\n        [-0.1662],\n        [-0.2289],\n        [-0.1199],\n        [ 0.0766],\n        [ 0.1555],\n        [-1.6708],\n        [-0.1754],\n        [ 0.2598],\n        [-0.0200],\n        [ 0.2391],\n        [ 0.6985],\n        [ 0.1665],\n        [ 0.1963],\n        [ 3.6527],\n        [ 0.2446],\n        [-0.1049],\n        [-1.2188],\n        [ 0.1333],\n        [ 0.0211],\n        [-0.1041],\n        [-0.2381],\n        [-0.9812],\n        [ 0.1265],\n        [ 0.0460],\n        [ 0.4189],\n        [ 0.4758],\n        [-0.0871],\n        [ 0.2861],\n        [-0.0981],\n        [-0.0834],\n        [-0.6095],\n        [-5.8643],\n        [ 0.5287],\n        [ 0.1235],\n        [-0.0459]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.6557298}]}, "version": 576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.666524}]}, "version": 577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.1277,  0.1551, -0.3083,  ..., -0.1995, -0.0596,  0.0336],\n        [ 0.0486, -0.0559,  0.1129,  ...,  0.0303,  0.0110,  0.0106],\n        [-0.0072, -0.2959, -0.1473,  ..., -0.3882,  0.2076,  0.1061],\n        ...,\n        [-0.0211,  0.7487, -0.1236,  ...,  1.1768,  0.6475, -0.9981],\n        [ 0.0795,  0.0932,  0.2971,  ...,  0.4438,  0.1288, -0.0808],\n        [-0.1027, -0.0993,  0.3192,  ...,  0.1844,  0.2537, -0.0159]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.668718}]}, "version": 578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.6750803}]}, "version": 579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(19.2218, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962826.6765583}]}, "version": 580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.6775053}]}, "version": 581}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-14.6752, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962826.678686}]}, "version": 582}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.6796582}]}, "version": 583}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962826.6806097}]}, "version": 584}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5077724456787109, "step": null, "ts": 1644962826.7636495}]}, "version": 585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0368],\n        [0.0172],\n        [0.0394],\n        [0.0302],\n        [0.0286],\n        [0.0243],\n        [0.0365],\n        [0.0182],\n        [0.0220],\n        [0.0198],\n        [0.0411],\n        [0.0252],\n        [0.0310],\n        [0.0427],\n        [0.0378],\n        [0.0121],\n        [0.0307],\n        [0.0523],\n        [0.0283],\n        [0.0152],\n        [0.0210],\n        [0.0261],\n        [0.0309],\n        [0.0398],\n        [0.0384],\n        [0.0392],\n        [0.0339],\n        [0.0327],\n        [0.0330],\n        [0.0263],\n        [0.0271],\n        [0.0480],\n        [0.0370],\n        [0.0307],\n        [0.0243],\n        [0.0465],\n        [0.0324],\n        [0.0350],\n        [0.0423],\n        [0.0377],\n        [0.0399],\n        [0.0365]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.778524}]}, "version": 586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.7871346}]}, "version": 587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0416, 0.0194, 0.0264,  ..., 0.0314, 0.0407, 0.0303],\n        [0.0203, 0.0184, 0.0433,  ..., 0.0106, 0.0336, 0.0369],\n        [0.0201, 0.0367, 0.0197,  ..., 0.0356, 0.0250, 0.0257],\n        ...,\n        [0.0316, 0.0493, 0.0192,  ..., 0.0202, 0.0145, 0.0350],\n        [0.0263, 0.0269, 0.0192,  ..., 0.0335, 0.0484, 0.0286],\n        [0.0286, 0.0295, 0.0199,  ..., 0.0230, 0.0433, 0.0376]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962826.7947636}]}, "version": 588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.795734}]}, "version": 589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1517, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962826.7968822}]}, "version": 590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.797845}]}, "version": 591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0031, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962826.7989776}]}, "version": 592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962826.7998474}]}, "version": 593}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.608175277709961, "step": null, "ts": 1644962826.8011208}]}, "version": 594}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8185476660728455, "step": null, "ts": 1644962827.250117}]}, "version": 595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0857],\n        [ 0.0473],\n        [ 0.3132],\n        [ 0.5639],\n        [ 1.1037],\n        [ 0.0479],\n        [ 0.9357],\n        [ 0.0891],\n        [ 0.2275],\n        [-0.0192],\n        [ 0.7681],\n        [-0.6016],\n        [ 0.0118],\n        [ 0.1167],\n        [ 0.1592],\n        [ 0.1426],\n        [-0.0837],\n        [ 0.0150],\n        [ 0.1002],\n        [ 0.0268],\n        [ 0.3391],\n        [ 0.2049],\n        [-0.1167],\n        [-1.5013],\n        [-1.4606],\n        [ 0.2992],\n        [-0.0767],\n        [-0.7508],\n        [-0.1831],\n        [ 0.1091],\n        [ 0.0521],\n        [ 0.0210],\n        [ 0.1971],\n        [ 5.3441],\n        [ 0.0494],\n        [ 1.0641],\n        [-0.8559],\n        [-0.0364],\n        [ 0.1726],\n        [ 0.0519],\n        [ 0.1566],\n        [ 0.0294]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.2638779}]}, "version": 596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.2692542}]}, "version": 597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 3.7759e-02,  4.7379e-02,  3.2125e-02,  ...,  7.6693e-02,\n          2.2312e-01, -5.1103e-02],\n        [ 3.6800e-02,  4.5082e-02,  1.9805e-02,  ...,  2.0509e-01,\n          4.4713e-03,  4.3992e-02],\n        [ 9.3131e-02,  2.8659e-01,  4.1315e-01,  ...,  5.9195e-01,\n         -1.2362e-01, -2.4232e-02],\n        ...,\n        [-1.7596e+00, -2.1070e+00,  4.7066e+00,  ...,  3.4734e+00,\n          5.6923e+00, -2.9346e+00],\n        [ 4.5475e-02,  1.1165e-01,  5.8673e-02,  ..., -1.8584e-02,\n          1.1857e-01,  2.3742e-01],\n        [ 8.3070e-02, -5.7813e-02,  1.0365e-01,  ...,  2.1814e-01,\n          1.1943e-01,  4.0377e-03]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.2718341}]}, "version": 598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.2728796}]}, "version": 599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(115.8012, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962827.2742324}]}, "version": 600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.2751837}]}, "version": 601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-117.7415, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962827.2765393}]}, "version": 602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.2776062}]}, "version": 603}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962827.2785764}]}, "version": 604}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27577370405197144, "step": null, "ts": 1644962827.377898}]}, "version": 605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0449],\n        [0.0381],\n        [0.0254],\n        [0.0324],\n        [0.0249],\n        [0.0424],\n        [0.0286],\n        [0.0168],\n        [0.0291],\n        [0.0285],\n        [0.0228],\n        [0.0387],\n        [0.0446],\n        [0.0301],\n        [0.0200],\n        [0.0257],\n        [0.0472],\n        [0.0390],\n        [0.0256],\n        [0.0333],\n        [0.0349],\n        [0.0336],\n        [0.0205],\n        [0.0239],\n        [0.0553],\n        [0.0251],\n        [0.0218],\n        [0.0326],\n        [0.0278],\n        [0.0318],\n        [0.0356],\n        [0.0255],\n        [0.0278],\n        [0.0243],\n        [0.0221],\n        [0.0384],\n        [0.0486],\n        [0.0349],\n        [0.0432],\n        [0.0279],\n        [0.0337],\n        [0.0294]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.3870833}]}, "version": 606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.3905141}]}, "version": 607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0275, 0.0210, 0.0135,  ..., 0.0172, 0.0226, 0.0290],\n        [0.0346, 0.0268, 0.0276,  ..., 0.0221, 0.0323, 0.0401],\n        [0.0317, 0.0333, 0.0186,  ..., 0.0243, 0.0480, 0.0419],\n        ...,\n        [0.0349, 0.0356, 0.0442,  ..., 0.0210, 0.0221, 0.0402],\n        [0.0281, 0.0324, 0.0229,  ..., 0.0254, 0.0218, 0.0335],\n        [0.0299, 0.0381, 0.0391,  ..., 0.0273, 0.0258, 0.0402]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.3925798}]}, "version": 608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.4006057}]}, "version": 609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1496, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962827.401786}]}, "version": 610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.4027927}]}, "version": 611}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0033, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962827.4038582}]}, "version": 612}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.4046886}]}, "version": 613}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5388941764831543, "step": null, "ts": 1644962827.4055736}]}, "version": 614}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117434144020081, "step": null, "ts": 1644962827.8600912}]}, "version": 615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 6.7576e-03],\n        [ 6.6886e-04],\n        [ 1.4830e+00],\n        [ 1.6804e-01],\n        [-7.3236e-02],\n        [ 5.1724e-02],\n        [ 9.9994e-02],\n        [-4.3626e-01],\n        [-1.5389e-01],\n        [-4.1827e+00],\n        [-2.2943e-02],\n        [-2.1878e-01],\n        [-1.9344e-01],\n        [ 1.2241e-01],\n        [-2.0781e-01],\n        [-2.5403e-02],\n        [ 3.5845e-02],\n        [ 2.0466e+00],\n        [-5.4458e-02],\n        [ 5.2830e+00],\n        [ 2.5873e-02],\n        [-1.1292e+00],\n        [ 1.1746e-01],\n        [-3.4983e-02],\n        [ 5.3122e-01],\n        [ 1.6478e-01],\n        [-7.9761e-02],\n        [ 4.0327e-01],\n        [ 3.1109e-01],\n        [ 6.4914e-02],\n        [-1.6188e-02],\n        [-1.4484e-01],\n        [ 2.3361e-01],\n        [-1.0291e-01],\n        [-2.2389e+00],\n        [-1.1901e-01],\n        [ 5.1801e-02],\n        [-2.6990e-01],\n        [ 4.2061e-02],\n        [-2.7950e-02],\n        [-1.0368e-01],\n        [-7.9449e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962827.8695283}]}, "version": 616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.87059}]}, "version": 617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.7908e-03, -1.0788e+00,  1.6339e+00,  ..., -5.1546e-01,\n         -6.3666e-01, -2.2367e-01],\n        [-1.3055e-02,  4.0165e-02,  4.4615e-02,  ...,  2.0633e-01,\n          1.2831e-01, -7.6407e-02],\n        [ 1.3078e+00,  4.4592e+00,  4.2497e-01,  ..., -5.4598e+00,\n         -4.9126e+00,  1.7223e+00],\n        ...,\n        [-3.3494e-02, -6.6306e-02,  1.0562e-01,  ...,  2.8193e-01,\n         -2.1890e-02,  6.5783e-02],\n        [-4.3721e-01, -3.9460e-02,  2.1153e-01,  ...,  7.1751e-02,\n          3.5586e-01,  6.9117e-02],\n        [ 8.8682e-02,  1.6657e-02,  2.4156e-01,  ...,  1.0855e-01,\n          2.0597e-01, -2.6054e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.8728974}]}, "version": 618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.873933}]}, "version": 619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.6715, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962827.8752794}]}, "version": 620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.8762708}]}, "version": 621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-7.4145, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962827.8775666}]}, "version": 622}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.8785284}]}, "version": 623}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962827.879527}]}, "version": 624}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3120547831058502, "step": null, "ts": 1644962827.9727473}]}, "version": 625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0479],\n        [0.0382],\n        [0.0417],\n        [0.0389],\n        [0.0294],\n        [0.0373],\n        [0.0304],\n        [0.0238],\n        [0.0352],\n        [0.0292],\n        [0.0339],\n        [0.0323],\n        [0.0283],\n        [0.0211],\n        [0.0534],\n        [0.0314],\n        [0.0391],\n        [0.0151],\n        [0.0560],\n        [0.0385],\n        [0.0170],\n        [0.0210],\n        [0.0228],\n        [0.0238],\n        [0.0382],\n        [0.0638],\n        [0.0272],\n        [0.0387],\n        [0.0234],\n        [0.0372],\n        [0.0374],\n        [0.0186],\n        [0.0280],\n        [0.0205],\n        [0.0367],\n        [0.0388],\n        [0.0194],\n        [0.0133],\n        [0.0354],\n        [0.0365],\n        [0.0231],\n        [0.0584]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.983228}]}, "version": 626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.9865415}]}, "version": 627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0119, 0.0305, 0.0279,  ..., 0.0294, 0.0180, 0.0289],\n        [0.0471, 0.0385, 0.0217,  ..., 0.0329, 0.0143, 0.0327],\n        [0.0282, 0.0252, 0.0209,  ..., 0.0309, 0.0239, 0.0232],\n        ...,\n        [0.0269, 0.0258, 0.0177,  ..., 0.0259, 0.0205, 0.0289],\n        [0.0327, 0.0286, 0.0260,  ..., 0.0308, 0.0437, 0.0306],\n        [0.0326, 0.0262, 0.0200,  ..., 0.0274, 0.0277, 0.0304]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962827.991512}]}, "version": 628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.9926434}]}, "version": 629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1321, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962827.9937901}]}, "version": 630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.9947164}]}, "version": 631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0057, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962827.995958}]}, "version": 632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962827.996971}]}, "version": 633}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5767650604248047, "step": null, "ts": 1644962827.9981368}]}, "version": 634}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.796909511089325, "step": null, "ts": 1644962828.4659648}]}, "version": 635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.5403],\n        [-0.0360],\n        [ 0.1491],\n        [-0.0216],\n        [-0.1398],\n        [-0.8085],\n        [-0.0652],\n        [-0.0504],\n        [-0.1052],\n        [ 1.4513],\n        [ 0.3723],\n        [-0.1536],\n        [ 0.2247],\n        [-0.0042],\n        [ 0.0067],\n        [-0.0051],\n        [-0.1238],\n        [-0.4523],\n        [-0.0388],\n        [-0.0353],\n        [-0.2698],\n        [-0.1096],\n        [-0.6380],\n        [-0.0150],\n        [ 0.0971],\n        [ 0.1226],\n        [-0.0090],\n        [ 0.1254],\n        [-0.9289],\n        [-0.0446],\n        [ 0.0604],\n        [ 0.1141],\n        [ 0.1876],\n        [ 0.3434],\n        [ 0.1651],\n        [-0.0513],\n        [ 0.7087],\n        [ 0.0656],\n        [-0.0772],\n        [-0.4278],\n        [-0.0847],\n        [ 0.0374]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962828.4749286}]}, "version": 636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.482186}]}, "version": 637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.4423, -0.0036,  0.2563,  ...,  0.0260,  0.1303,  0.2282],\n        [ 0.0222,  0.1050, -0.2328,  ..., -0.0526,  0.1695,  0.2680],\n        [ 0.4180, -0.0436,  0.8535,  ...,  0.6373,  0.3094, -0.3548],\n        ...,\n        [-0.0308,  0.0314, -0.2043,  ..., -0.1196,  0.1072,  0.1362],\n        [ 0.1503, -0.2438, -0.1196,  ..., -0.1262,  0.1404,  0.0330],\n        [ 0.0884,  0.1067,  0.1419,  ...,  0.1338,  0.0399,  0.0628]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962828.4845486}]}, "version": 638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.4855492}]}, "version": 639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.2950, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962828.4867365}]}, "version": 640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.4876435}]}, "version": 641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-11.2255, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962828.4888477}]}, "version": 642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.4896526}]}, "version": 643}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962828.4906197}]}, "version": 644}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.38608184456825256, "step": null, "ts": 1644962828.5735595}]}, "version": 645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0145],\n        [0.0362],\n        [0.0286],\n        [0.0316],\n        [0.0194],\n        [0.0273],\n        [0.0262],\n        [0.0672],\n        [0.0151],\n        [0.0484],\n        [0.0323],\n        [0.0249],\n        [0.0376],\n        [0.0253],\n        [0.0716],\n        [0.0338],\n        [0.0473],\n        [0.0581],\n        [0.0245],\n        [0.0122],\n        [0.0384],\n        [0.0221],\n        [0.0316],\n        [0.0311],\n        [0.0300],\n        [0.0216],\n        [0.0359],\n        [0.0335],\n        [0.0328],\n        [0.0272],\n        [0.0437],\n        [0.0421],\n        [0.0324],\n        [0.0308],\n        [0.0229],\n        [0.0566],\n        [0.0301],\n        [0.0377],\n        [0.0301],\n        [0.0175],\n        [0.0217],\n        [0.0260]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962828.586296}]}, "version": 646}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.5956912}]}, "version": 647}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0158, 0.0423, 0.0266,  ..., 0.0183, 0.0164, 0.0462],\n        [0.0276, 0.0210, 0.0128,  ..., 0.0232, 0.0286, 0.0339],\n        [0.0317, 0.0525, 0.0208,  ..., 0.0175, 0.0138, 0.0277],\n        ...,\n        [0.0168, 0.0367, 0.0207,  ..., 0.0150, 0.0104, 0.0416],\n        [0.0347, 0.0291, 0.0373,  ..., 0.0161, 0.0266, 0.0418],\n        [0.0399, 0.0199, 0.0237,  ..., 0.0231, 0.0281, 0.0361]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962828.6030512}]}, "version": 648}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.6038985}]}, "version": 649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1585, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962828.605006}]}, "version": 650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.6055982}]}, "version": 651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0029, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962828.606509}]}, "version": 652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962828.6075525}]}, "version": 653}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.508800745010376, "step": null, "ts": 1644962828.608348}]}, "version": 654}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6743407845497131, "step": null, "ts": 1644962829.0589912}]}, "version": 655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.3211],\n        [ 0.2060],\n        [-0.0707],\n        [-0.2682],\n        [ 2.6410],\n        [-0.0888],\n        [ 0.0566],\n        [ 0.0458],\n        [ 0.1681],\n        [-0.3937],\n        [-0.0735],\n        [ 0.0185],\n        [ 7.1607],\n        [ 0.4232],\n        [ 0.1046],\n        [-0.1722],\n        [ 0.2321],\n        [-0.0223],\n        [ 0.0245],\n        [-0.2125],\n        [ 0.9646],\n        [-0.2964],\n        [ 0.0150],\n        [-0.0364],\n        [-0.2310],\n        [-0.1151],\n        [ 0.1042],\n        [ 1.1020],\n        [ 0.5550],\n        [-0.1443],\n        [ 0.1763],\n        [ 0.2188],\n        [ 1.5712],\n        [ 0.1860],\n        [ 0.2233],\n        [ 0.6646],\n        [-0.2131],\n        [-0.0489],\n        [ 0.3285],\n        [ 0.0207],\n        [-0.0574],\n        [-0.6055]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.0714176}]}, "version": 656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.0766902}]}, "version": 657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.9587e-01, -1.0457e+00, -3.8476e-01,  ...,  5.7040e-02,\n         -2.4905e-01,  8.1387e-01],\n        [ 2.7112e-01, -2.9890e-01, -1.1543e+00,  ..., -6.0437e-01,\n         -7.6943e-01,  5.7161e-02],\n        [-4.6588e-02,  3.5928e-01, -7.3091e-02,  ..., -2.9811e-02,\n         -1.9807e-01,  2.2157e-01],\n        ...,\n        [-1.4354e+00, -1.4872e-01, -2.3505e+00,  ..., -1.7816e+00,\n          1.7916e-02,  7.4710e-02],\n        [-8.5930e-02,  6.2254e-02,  1.8774e-01,  ...,  1.3789e-01,\n          1.5994e-01,  1.9049e-03],\n        [ 5.5564e-01, -1.4899e-01,  7.7839e-02,  ..., -3.7925e-01,\n         -5.2456e-01,  4.8316e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.0789495}]}, "version": 658}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.0835755}]}, "version": 659}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(49.5270, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962829.0849879}]}, "version": 660}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.0859873}]}, "version": 661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-40.1821, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962829.0874603}]}, "version": 662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.088434}]}, "version": 663}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962829.0896811}]}, "version": 664}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3410724103450775, "step": null, "ts": 1644962829.190196}]}, "version": 665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0428],\n        [0.0349],\n        [0.0291],\n        [0.0188],\n        [0.0383],\n        [0.0192],\n        [0.0315],\n        [0.0275],\n        [0.0150],\n        [0.0473],\n        [0.0353],\n        [0.0279],\n        [0.0469],\n        [0.0268],\n        [0.0171],\n        [0.0272],\n        [0.0196],\n        [0.0226],\n        [0.0339],\n        [0.0628],\n        [0.0291],\n        [0.0278],\n        [0.0618],\n        [0.0191],\n        [0.0475],\n        [0.0441],\n        [0.0332],\n        [0.0585],\n        [0.0330],\n        [0.0224],\n        [0.0308],\n        [0.0147],\n        [0.0354],\n        [0.0384],\n        [0.0324],\n        [0.0524],\n        [0.0350],\n        [0.0230],\n        [0.0227],\n        [0.0222],\n        [0.0457],\n        [0.0198]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.1989248}]}, "version": 666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.203799}]}, "version": 667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0063, 0.0426, 0.0112,  ..., 0.0137, 0.0109, 0.0327],\n        [0.0226, 0.0341, 0.0268,  ..., 0.0275, 0.0310, 0.0279],\n        [0.0342, 0.0325, 0.0248,  ..., 0.0339, 0.0387, 0.0276],\n        ...,\n        [0.0286, 0.0367, 0.0366,  ..., 0.0251, 0.0140, 0.0432],\n        [0.0416, 0.0264, 0.0222,  ..., 0.0283, 0.0356, 0.0455],\n        [0.0191, 0.0253, 0.0188,  ..., 0.0280, 0.0282, 0.0249]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.2119212}]}, "version": 668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.2154334}]}, "version": 669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1626, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962829.2166142}]}, "version": 670}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.2176218}]}, "version": 671}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0028, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962829.2187636}]}, "version": 672}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.2196612}]}, "version": 673}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.522920846939087, "step": null, "ts": 1644962829.220646}]}, "version": 674}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343256115913391, "step": null, "ts": 1644962829.6589725}]}, "version": 675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0729],\n        [-0.4107],\n        [-0.4527],\n        [ 0.0304],\n        [ 0.2617],\n        [ 3.1243],\n        [ 0.7935],\n        [-0.4781],\n        [ 0.2889],\n        [-0.6408],\n        [ 0.1809],\n        [ 0.1126],\n        [-0.0777],\n        [ 0.6958],\n        [-0.2837],\n        [-0.2131],\n        [-0.4964],\n        [-0.0171],\n        [-0.1185],\n        [-0.0409],\n        [ 0.5305],\n        [-0.0671],\n        [-0.7631],\n        [-0.0244],\n        [ 1.4097],\n        [ 0.3498],\n        [ 0.0914],\n        [ 0.1236],\n        [ 0.0117],\n        [-0.0753],\n        [-2.3077],\n        [-0.2416],\n        [-0.1334],\n        [-0.0407],\n        [ 0.0490],\n        [-0.0656],\n        [ 2.5170],\n        [ 0.3155],\n        [ 0.1287],\n        [-0.2109],\n        [-0.6310],\n        [ 0.1447]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.667997}]}, "version": 676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.669015}]}, "version": 677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0647, -0.3566,  0.4829,  ...,  0.2760,  0.1788,  0.0653],\n        [ 0.1850, -0.0460,  0.0182,  ..., -0.0689,  0.3350,  0.0839],\n        [ 0.2882,  0.0660, -0.1602,  ..., -0.4127, -0.2027,  0.2891],\n        ...,\n        [-0.3682, -0.0681, -1.2812,  ..., -1.1465, -0.9765,  0.7959],\n        [ 0.4943,  0.2855,  0.1644,  ..., -0.0329, -0.1364, -0.1752],\n        [ 0.1131, -0.0267,  0.1351,  ...,  0.0211,  0.1655, -0.0778]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.671555}]}, "version": 678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.6860473}]}, "version": 679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.3834, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962829.687569}]}, "version": 680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.688615}]}, "version": 681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-10.7250, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962829.6897612}]}, "version": 682}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.6907427}]}, "version": 683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962829.6917646}]}, "version": 684}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.15337224304676056, "step": null, "ts": 1644962829.7756388}]}, "version": 685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0296],\n        [0.0267],\n        [0.0337],\n        [0.0571],\n        [0.0399],\n        [0.0308],\n        [0.0320],\n        [0.0335],\n        [0.0208],\n        [0.0424],\n        [0.0418],\n        [0.0068],\n        [0.0209],\n        [0.0377],\n        [0.0571],\n        [0.0144],\n        [0.0438],\n        [0.0405],\n        [0.0486],\n        [0.0254],\n        [0.0357],\n        [0.0323],\n        [0.0231],\n        [0.0317],\n        [0.0410],\n        [0.0300],\n        [0.0414],\n        [0.0406],\n        [0.0377],\n        [0.0309],\n        [0.0400],\n        [0.0548],\n        [0.0267],\n        [0.0324],\n        [0.0408],\n        [0.0155],\n        [0.0291],\n        [0.0399],\n        [0.0274],\n        [0.0110],\n        [0.0429],\n        [0.0413]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.787599}]}, "version": 686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.791091}]}, "version": 687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0190, 0.0362, 0.0090,  ..., 0.0274, 0.0284, 0.0302],\n        [0.0323, 0.0233, 0.0265,  ..., 0.0250, 0.0301, 0.0336],\n        [0.0285, 0.0284, 0.0293,  ..., 0.0160, 0.0205, 0.0303],\n        ...,\n        [0.0275, 0.0247, 0.0231,  ..., 0.0171, 0.0149, 0.0517],\n        [0.0306, 0.0266, 0.0217,  ..., 0.0271, 0.0211, 0.0359],\n        [0.0407, 0.0240, 0.0191,  ..., 0.0253, 0.0275, 0.0344]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962829.7960446}]}, "version": 688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.802223}]}, "version": 689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1891, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962829.8037057}]}, "version": 690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.804787}]}, "version": 691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0025, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962829.805933}]}, "version": 692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962829.8068984}]}, "version": 693}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5596392154693604, "step": null, "ts": 1644962829.8078952}]}, "version": 694}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962830.0983493}]}, "version": 695}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8938287496566772, "step": null, "ts": 1644962830.2760608}]}, "version": 696}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.8765e-01],\n        [ 9.2503e-02],\n        [ 2.1107e-02],\n        [-3.5077e-01],\n        [ 3.8893e-02],\n        [-1.8010e+00],\n        [ 7.9980e-03],\n        [ 1.5400e-01],\n        [-9.4658e-02],\n        [ 1.8268e-02],\n        [-5.3336e-02],\n        [-3.2203e+00],\n        [-8.2495e-02],\n        [ 2.8687e-01],\n        [-7.3995e-01],\n        [ 8.4924e-02],\n        [ 5.4653e-03],\n        [ 2.7872e-01],\n        [ 7.1918e-01],\n        [-8.1170e-03],\n        [ 4.4055e-01],\n        [-4.9095e-02],\n        [-9.1935e-02],\n        [-4.0335e-01],\n        [-5.0914e+00],\n        [ 2.8673e-01],\n        [ 2.1000e-01],\n        [-1.6939e-02],\n        [ 1.1860e-01],\n        [-6.4214e-01],\n        [ 3.1227e-01],\n        [-1.6869e+00],\n        [-4.2458e-02],\n        [ 9.2379e+00],\n        [ 1.5147e-01],\n        [ 3.9224e-01],\n        [-8.3237e-03],\n        [ 3.9767e-02],\n        [ 4.1237e-01],\n        [-1.3115e-01],\n        [ 7.4714e-01],\n        [-6.1939e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962830.2866507}]}, "version": 697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.2919343}]}, "version": 698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0066, -0.0556,  0.4679,  ...,  0.2770,  0.1580, -0.0242],\n        [-0.0242, -0.1525, -0.0740,  ..., -0.0286,  0.0660, -0.0208],\n        [-0.0437,  0.0787,  0.0328,  ...,  0.1947,  0.1661,  0.0405],\n        ...,\n        [-1.3000, -0.4140,  2.7999,  ...,  2.3391,  4.8076, -2.0300],\n        [-0.2351,  0.0069,  0.1838,  ...,  4.0035,  0.5425, -0.7486],\n        [ 0.0435, -0.0149,  0.2565,  ...,  0.0289,  0.0982, -0.1782]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962830.2941456}]}, "version": 699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.2948756}]}, "version": 700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(4.8448, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962830.2959034}]}, "version": 701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.29677}]}, "version": 702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-4.9908, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962830.2978685}]}, "version": 703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.29866}]}, "version": 704}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962830.2996483}]}, "version": 705}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23163534700870514, "step": null, "ts": 1644962830.3949811}]}, "version": 706}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0344],\n        [0.0236],\n        [0.0329],\n        [0.0512],\n        [0.0553],\n        [0.0275],\n        [0.0286],\n        [0.0339],\n        [0.0303],\n        [0.0206],\n        [0.0118],\n        [0.0357],\n        [0.0325],\n        [0.0289],\n        [0.0183],\n        [0.0399],\n        [0.0366],\n        [0.0093],\n        [0.0456],\n        [0.0294],\n        [0.0295],\n        [0.0437],\n        [0.0396],\n        [0.0396],\n        [0.0394],\n        [0.0306],\n        [0.0392],\n        [0.0187],\n        [0.0187],\n        [0.0169],\n        [0.0497],\n        [0.0328],\n        [0.0288],\n        [0.0318],\n        [0.0208],\n        [0.0223],\n        [0.0322],\n        [0.0407],\n        [0.0493],\n        [0.0314],\n        [0.0336],\n        [0.0383]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962830.404534}]}, "version": 707}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.4128387}]}, "version": 708}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0322, 0.0248, 0.0231,  ..., 0.0147, 0.0169, 0.0452],\n        [0.0234, 0.0366, 0.0183,  ..., 0.0206, 0.0256, 0.0337],\n        [0.0324, 0.0296, 0.0268,  ..., 0.0238, 0.0309, 0.0315],\n        ...,\n        [0.0230, 0.0345, 0.0178,  ..., 0.0182, 0.0335, 0.0417],\n        [0.0266, 0.0346, 0.0194,  ..., 0.0142, 0.0209, 0.0232],\n        [0.0438, 0.0592, 0.0109,  ..., 0.0252, 0.0225, 0.0246]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962830.4177828}]}, "version": 709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.4187837}]}, "version": 710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1829, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962830.420155}]}, "version": 711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.4226735}]}, "version": 712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0017, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962830.4241486}]}, "version": 713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.4249887}]}, "version": 714}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5772292613983154, "step": null, "ts": 1644962830.4262109}]}, "version": 715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.614 (0.614)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962830.6690896}]}, "version": 716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.6702116}]}, "version": 717}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7544659376144409, "step": null, "ts": 1644962830.877811}]}, "version": 718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-6.2936e-01],\n        [-4.7533e-01],\n        [ 7.0831e-02],\n        [ 3.1280e-02],\n        [ 7.9384e+00],\n        [ 5.3871e-03],\n        [ 3.8886e-01],\n        [-9.6506e-02],\n        [-3.1044e-01],\n        [ 4.0937e-02],\n        [-7.2578e-01],\n        [-3.8319e-01],\n        [ 1.4798e-01],\n        [ 8.8969e-02],\n        [-1.4474e-01],\n        [ 5.2339e-01],\n        [ 9.7052e-02],\n        [ 1.5426e-03],\n        [-9.3353e-02],\n        [ 1.5609e-01],\n        [-8.0977e-02],\n        [-5.1562e-01],\n        [ 4.1044e-02],\n        [-1.2523e-01],\n        [ 2.0082e-01],\n        [-2.5282e-02],\n        [-8.8251e-02],\n        [-4.2349e-02],\n        [ 8.1835e-01],\n        [-1.2306e+00],\n        [-8.8478e-02],\n        [ 5.8452e-02],\n        [-1.0641e-01],\n        [ 3.9437e-01],\n        [ 3.2044e-01],\n        [ 1.9850e-03],\n        [ 2.8445e-02],\n        [ 2.7061e-01],\n        [-2.6666e-01],\n        [-6.7321e-02],\n        [-3.1789e-01],\n        [-5.3796e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962830.8901405}]}, "version": 719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.8972375}]}, "version": 720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1500,  0.3231, -0.1601,  ...,  0.0015, -0.0767,  0.0766],\n        [-0.2321,  0.3036, -0.3722,  ..., -0.5058, -0.0632,  0.0336],\n        [ 0.0698,  0.0220,  0.0884,  ...,  0.1303,  0.0032, -0.0366],\n        ...,\n        [ 0.0008, -0.1965,  0.1442,  ...,  0.5406,  0.5349, -0.1278],\n        [-0.0127,  0.2048,  0.3213,  ..., -0.0163, -0.0932, -0.0501],\n        [-0.3222,  0.1516,  0.1589,  ...,  0.5018,  0.4144, -0.2863]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962830.8997362}]}, "version": 721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.9007158}]}, "version": 722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.2489, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962830.9018843}]}, "version": 723}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.9028008}]}, "version": 724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-17.5905, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962830.9042473}]}, "version": 725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962830.905243}]}, "version": 726}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962830.9065685}]}, "version": 727}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.295915424823761, "step": null, "ts": 1644962831.0005715}]}, "version": 728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0252],\n        [0.0255],\n        [0.0386],\n        [0.0286],\n        [0.0233],\n        [0.0175],\n        [0.0263],\n        [0.0372],\n        [0.0331],\n        [0.0274],\n        [0.0420],\n        [0.0360],\n        [0.0414],\n        [0.0307],\n        [0.0301],\n        [0.0312],\n        [0.0272],\n        [0.0372],\n        [0.0570],\n        [0.0154],\n        [0.0234],\n        [0.0368],\n        [0.0441],\n        [0.0421],\n        [0.0269],\n        [0.0453],\n        [0.0426],\n        [0.0203],\n        [0.0202],\n        [0.0183],\n        [0.0241],\n        [0.0321],\n        [0.0714],\n        [0.0432],\n        [0.0319],\n        [0.0439],\n        [0.0294],\n        [0.0399],\n        [0.0287],\n        [0.0206],\n        [0.0536],\n        [0.0175]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.013054}]}, "version": 729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.0228217}]}, "version": 730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0321, 0.0291, 0.0247,  ..., 0.0205, 0.0353, 0.0312],\n        [0.0326, 0.0404, 0.0274,  ..., 0.0469, 0.0329, 0.0266],\n        [0.0411, 0.0296, 0.0266,  ..., 0.0239, 0.0354, 0.0370],\n        ...,\n        [0.0399, 0.0260, 0.0237,  ..., 0.0201, 0.0272, 0.0319],\n        [0.0268, 0.0253, 0.0235,  ..., 0.0375, 0.0223, 0.0288],\n        [0.0242, 0.0631, 0.0308,  ..., 0.0193, 0.0086, 0.0455]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.0264626}]}, "version": 731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.0305905}]}, "version": 732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1568, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962831.0318894}]}, "version": 733}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.0325458}]}, "version": 734}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0021, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962831.0337033}]}, "version": 735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.034597}]}, "version": 736}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5861170291900635, "step": null, "ts": 1644962831.0355492}]}, "version": 737}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7592187523841858, "step": null, "ts": 1644962831.4622169}]}, "version": 738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.4033],\n        [-0.0610],\n        [ 0.0518],\n        [ 0.1944],\n        [ 0.0325],\n        [ 0.0389],\n        [-0.1194],\n        [ 3.5125],\n        [-0.0791],\n        [ 0.9629],\n        [ 0.3827],\n        [ 0.2467],\n        [-0.3148],\n        [-2.2528],\n        [ 0.7389],\n        [-0.8802],\n        [ 0.0321],\n        [ 0.2376],\n        [ 0.0374],\n        [ 0.0589],\n        [-0.0822],\n        [-1.3698],\n        [-0.1505],\n        [-0.1272],\n        [ 0.4385],\n        [ 1.1490],\n        [-0.0063],\n        [ 1.1725],\n        [ 0.1715],\n        [ 0.1123],\n        [-0.1216],\n        [-0.0131],\n        [ 0.2182],\n        [ 0.1404],\n        [-0.1208],\n        [ 0.0347],\n        [ 0.1592],\n        [-0.9316],\n        [ 0.4689],\n        [ 0.0323],\n        [ 0.0564],\n        [-1.9651]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.4778578}]}, "version": 739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.4811783}]}, "version": 740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-7.5343e-01, -2.1225e-01,  5.9187e-01,  ...,  1.2361e+00,\n          6.1774e-01, -2.0650e-02],\n        [ 3.7841e-01, -2.0273e-01, -2.7404e-01,  ..., -5.0927e-01,\n         -6.6962e-01,  5.5667e-01],\n        [ 1.8763e-01, -9.3506e-03,  3.8730e-01,  ...,  1.3882e-01,\n         -9.7636e-02,  9.1574e-02],\n        ...,\n        [ 1.2477e-01,  2.0235e-02,  2.7395e-01,  ...,  3.9323e-02,\n          3.2392e-02,  6.3691e-04],\n        [ 9.3362e-02, -2.5526e-01,  3.9443e-01,  ...,  2.1812e-01,\n          7.4165e-02,  2.2412e-01],\n        [ 1.9206e+00, -1.8415e+00, -1.2986e+00,  ...,  4.8117e+00,\n          3.8733e+00, -5.3655e+00]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.4836516}]}, "version": 741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.490347}]}, "version": 742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(172.8311, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962831.4914052}]}, "version": 743}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.492173}]}, "version": 744}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-111.8709, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962831.4932454}]}, "version": 745}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.494163}]}, "version": 746}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962831.4954412}]}, "version": 747}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40869471430778503, "step": null, "ts": 1644962831.5786378}]}, "version": 748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0254],\n        [0.0240],\n        [0.0471],\n        [0.0175],\n        [0.0232],\n        [0.0222],\n        [0.0367],\n        [0.0256],\n        [0.0433],\n        [0.0270],\n        [0.0250],\n        [0.0242],\n        [0.0237],\n        [0.0273],\n        [0.0159],\n        [0.0293],\n        [0.0251],\n        [0.0304],\n        [0.0286],\n        [0.0301],\n        [0.0372],\n        [0.0334],\n        [0.0894],\n        [0.0431],\n        [0.0265],\n        [0.0361],\n        [0.0286],\n        [0.0272],\n        [0.0339],\n        [0.0389],\n        [0.0363],\n        [0.0333],\n        [0.0240],\n        [0.0265],\n        [0.0427],\n        [0.0338],\n        [0.0222],\n        [0.0526],\n        [0.0343],\n        [0.0360],\n        [0.0202],\n        [0.0359]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.5942013}]}, "version": 749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.597924}]}, "version": 750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0273, 0.0436, 0.0055,  ..., 0.0296, 0.0111, 0.0372],\n        [0.0266, 0.0264, 0.0290,  ..., 0.0157, 0.0226, 0.0494],\n        [0.0162, 0.0405, 0.0320,  ..., 0.0239, 0.0165, 0.0249],\n        ...,\n        [0.0313, 0.0244, 0.0207,  ..., 0.0200, 0.0278, 0.0376],\n        [0.0263, 0.0265, 0.0168,  ..., 0.0138, 0.0273, 0.0259],\n        [0.0276, 0.0295, 0.0159,  ..., 0.0211, 0.0462, 0.0298]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962831.6027365}]}, "version": 751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.61082}]}, "version": 752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2162, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962831.6122715}]}, "version": 753}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.6132226}]}, "version": 754}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0012, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962831.614614}]}, "version": 755}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962831.6154094}]}, "version": 756}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.545461654663086, "step": null, "ts": 1644962831.6163573}]}, "version": 757}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6433932781219482, "step": null, "ts": 1644962832.05506}]}, "version": 758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.8472e-01],\n        [ 1.7048e+00],\n        [-1.4292e-03],\n        [-7.1389e-02],\n        [ 1.1433e+00],\n        [ 1.0597e-02],\n        [-2.4611e-01],\n        [ 8.8838e-02],\n        [ 8.6582e-01],\n        [ 8.4838e-02],\n        [ 6.0247e-02],\n        [-3.1143e-02],\n        [ 1.3066e-02],\n        [-1.6574e-01],\n        [ 1.8899e-01],\n        [ 5.2315e-01],\n        [ 2.8530e-02],\n        [-9.3655e-01],\n        [ 3.1370e-01],\n        [ 2.0192e-01],\n        [ 5.4428e+00],\n        [ 1.4980e-01],\n        [-7.2795e-01],\n        [ 1.3813e-01],\n        [ 2.3253e-02],\n        [-1.2213e-01],\n        [ 1.8727e-01],\n        [-4.1646e-01],\n        [-3.6465e-02],\n        [ 1.8144e-01],\n        [-6.5355e-02],\n        [ 1.1371e-01],\n        [-9.0580e-01],\n        [-3.7902e-02],\n        [-6.7016e-02],\n        [ 2.9548e-01],\n        [-1.1502e+00],\n        [-1.0809e-01],\n        [ 7.5206e-01],\n        [-6.8878e-01],\n        [-3.9894e-02],\n        [-3.4088e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962832.0656624}]}, "version": 759}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.0691044}]}, "version": 760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.5878, -0.8167, -0.4189,  ..., -0.4025,  0.1091,  1.1197],\n        [-1.1428,  1.4365, -0.2871,  ..., -3.8933, -1.6353, -0.1192],\n        [-0.1883,  0.0758,  0.5276,  ...,  0.2562,  0.2830,  0.1868],\n        ...,\n        [-0.0678, -0.2126, -0.3490,  ..., -0.3297,  0.7771,  0.1100],\n        [-0.0373,  0.1267,  0.0947,  ...,  0.1290,  0.0396, -0.1257],\n        [-0.1686,  0.0558, -0.4272,  ..., -0.4072, -0.0325,  0.3051]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.0715823}]}, "version": 761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.0724628}]}, "version": 762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(54.5088, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962832.0736275}]}, "version": 763}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.0743735}]}, "version": 764}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-59.1802, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962832.075542}]}, "version": 765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.0761793}]}, "version": 766}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962832.0771823}]}, "version": 767}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27200648188591003, "step": null, "ts": 1644962832.1632478}]}, "version": 768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0393],\n        [0.0354],\n        [0.0160],\n        [0.0374],\n        [0.0185],\n        [0.0239],\n        [0.0172],\n        [0.0340],\n        [0.0229],\n        [0.0326],\n        [0.0274],\n        [0.0338],\n        [0.0230],\n        [0.0367],\n        [0.0364],\n        [0.0138],\n        [0.0431],\n        [0.0366],\n        [0.0183],\n        [0.0269],\n        [0.0271],\n        [0.0363],\n        [0.0419],\n        [0.0311],\n        [0.0305],\n        [0.0316],\n        [0.0309],\n        [0.0333],\n        [0.0417],\n        [0.0334],\n        [0.0480],\n        [0.0565],\n        [0.0281],\n        [0.0190],\n        [0.0424],\n        [0.0339],\n        [0.0379],\n        [0.0298],\n        [0.0288],\n        [0.0179],\n        [0.0402],\n        [0.0401]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.172285}]}, "version": 769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.1808784}]}, "version": 770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0291, 0.0218, 0.0303,  ..., 0.0346, 0.0334, 0.0286],\n        [0.0275, 0.0306, 0.0233,  ..., 0.0326, 0.0333, 0.0276],\n        [0.0212, 0.0419, 0.0399,  ..., 0.0317, 0.0262, 0.0232],\n        ...,\n        [0.0176, 0.0504, 0.0238,  ..., 0.0225, 0.0223, 0.0325],\n        [0.0308, 0.0289, 0.0214,  ..., 0.0271, 0.0279, 0.0296],\n        [0.0369, 0.0349, 0.0237,  ..., 0.0186, 0.0237, 0.0418]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.1860492}]}, "version": 771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.1914642}]}, "version": 772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1699, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962832.1926093}]}, "version": 773}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.1933591}]}, "version": 774}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0027, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962832.194549}]}, "version": 775}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.1952803}]}, "version": 776}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.543888568878174, "step": null, "ts": 1644962832.1962533}]}, "version": 777}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6693803668022156, "step": null, "ts": 1644962832.679505}]}, "version": 778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.1231e-01],\n        [-8.0961e-02],\n        [ 1.4663e-02],\n        [ 1.0379e-01],\n        [-1.1286e-01],\n        [ 2.8208e-01],\n        [-2.9326e-01],\n        [-3.8808e-01],\n        [-8.7370e-02],\n        [ 1.9570e-01],\n        [ 3.2268e-01],\n        [ 1.4397e+00],\n        [-1.2875e-01],\n        [ 8.0372e-02],\n        [ 3.6548e-02],\n        [ 4.8419e-02],\n        [-1.1092e-01],\n        [ 1.1667e-01],\n        [-3.3490e-02],\n        [ 1.3864e+02],\n        [ 8.0355e-02],\n        [ 1.6820e-02],\n        [ 8.7375e-01],\n        [-6.3419e-03],\n        [-1.7456e-01],\n        [-5.7416e-01],\n        [ 6.1846e-02],\n        [ 1.6932e-01],\n        [-1.1928e+00],\n        [ 8.1051e-02],\n        [ 2.6634e-01],\n        [-8.4875e-02],\n        [ 9.6701e-02],\n        [-4.7587e-02],\n        [ 2.0411e-01],\n        [ 1.0161e-01],\n        [ 3.2969e-01],\n        [ 4.8345e-02],\n        [ 2.1706e-01],\n        [ 1.8966e-01],\n        [-2.9433e-01],\n        [ 4.2672e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962832.6958444}]}, "version": 779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.7031345}]}, "version": 780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.2469, -0.0350,  0.4912,  ..., -0.1930, -0.3918,  0.1299],\n        [-0.1172, -0.2955,  0.4108,  ...,  0.2263,  0.4546, -0.0318],\n        [ 0.0228, -0.0229, -0.0237,  ..., -0.1244,  0.1048,  0.1060],\n        ...,\n        [ 0.0560,  0.0542,  0.0586,  ...,  0.1045,  0.3129,  0.0917],\n        [ 0.2469, -0.3374,  0.4712,  ..., -0.1514, -0.2695,  0.0029],\n        [ 0.7910,  0.5490,  0.6781,  ...,  0.3155,  2.8494, -1.0601]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.705627}]}, "version": 781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.7066858}]}, "version": 782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(11.6944, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962832.7080235}]}, "version": 783}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.709016}]}, "version": 784}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-8.9156, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962832.7105052}]}, "version": 785}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.7114148}]}, "version": 786}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962832.7125528}]}, "version": 787}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.5564521551132202, "step": null, "ts": 1644962832.8040915}]}, "version": 788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0344],\n        [0.0331],\n        [0.0359],\n        [0.0225],\n        [0.0365],\n        [0.0292],\n        [0.0286],\n        [0.0211],\n        [0.0254],\n        [0.0424],\n        [0.0408],\n        [0.0236],\n        [0.0238],\n        [0.0402],\n        [0.0202],\n        [0.0133],\n        [0.0529],\n        [0.0393],\n        [0.0236],\n        [0.0371],\n        [0.0180],\n        [0.0137],\n        [0.0388],\n        [0.0277],\n        [0.0469],\n        [0.0507],\n        [0.0387],\n        [0.0337],\n        [0.0312],\n        [0.0432],\n        [0.0187],\n        [0.0317],\n        [0.0507],\n        [0.0293],\n        [0.0327],\n        [0.0264],\n        [0.0436],\n        [0.0391],\n        [0.0326],\n        [0.0298],\n        [0.0216],\n        [0.0250]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.8112206}]}, "version": 789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.8208237}]}, "version": 790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0171, 0.0227, 0.0260,  ..., 0.0279, 0.0441, 0.0262],\n        [0.0268, 0.0293, 0.0163,  ..., 0.0219, 0.0276, 0.0367],\n        [0.0188, 0.0241, 0.0136,  ..., 0.0103, 0.0187, 0.0132],\n        ...,\n        [0.0263, 0.0437, 0.0352,  ..., 0.0314, 0.0312, 0.0276],\n        [0.0232, 0.0230, 0.0189,  ..., 0.0206, 0.0357, 0.0309],\n        [0.0274, 0.0257, 0.0208,  ..., 0.0270, 0.0345, 0.0306]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962832.8280985}]}, "version": 791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.8290672}]}, "version": 792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1827, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962832.8305545}]}, "version": 793}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.8315146}]}, "version": 794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0055, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962832.8327694}]}, "version": 795}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962832.8333611}]}, "version": 796}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.715543746948242, "step": null, "ts": 1644962832.834288}]}, "version": 797}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.0379257202148438, "step": null, "ts": 1644962833.283962}]}, "version": 798}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.6902e-01],\n        [ 1.0505e-01],\n        [ 4.7662e-02],\n        [-2.7740e-01],\n        [-3.6399e-02],\n        [-3.9135e-02],\n        [ 1.7944e-01],\n        [-5.9496e-02],\n        [ 1.2742e-02],\n        [ 1.1860e-01],\n        [-2.9807e-01],\n        [-3.3680e+00],\n        [ 5.9028e-01],\n        [ 4.4433e-02],\n        [-9.0238e-01],\n        [ 7.2157e-03],\n        [ 3.6747e-02],\n        [ 1.7432e-01],\n        [-1.2950e+00],\n        [-4.2503e-02],\n        [-6.8107e-02],\n        [ 2.7716e-03],\n        [-8.2910e-02],\n        [-1.1352e-01],\n        [-3.5724e-01],\n        [-4.1832e+00],\n        [-4.6720e-02],\n        [-1.5849e-01],\n        [-8.4404e+00],\n        [-2.0046e-01],\n        [ 7.0098e-01],\n        [ 1.7578e-01],\n        [ 2.3603e-01],\n        [ 2.4124e-01],\n        [ 9.7785e-02],\n        [-9.6845e-02],\n        [ 1.0620e-02],\n        [ 8.8219e-03],\n        [-1.4015e+00],\n        [ 1.9276e+00],\n        [-3.3693e-03],\n        [ 1.4514e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962833.2876692}]}, "version": 799}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.2916472}]}, "version": 800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.5567, -1.0001,  0.6394,  ...,  0.7673, -0.2534, -0.0284],\n        [-0.0057,  0.0247,  0.1954,  ...,  0.2396,  0.2237,  0.0529],\n        [ 0.1307, -0.0825,  0.0511,  ...,  0.0653,  0.2670, -0.0222],\n        ...,\n        [ 0.2327, -2.4132,  4.2683,  ..., -1.3277,  2.9841, -1.7385],\n        [ 0.1470,  0.0074,  0.4167,  ...,  0.0755,  0.1426,  0.0394],\n        [-0.2671,  0.0145,  0.2654,  ...,  0.1790,  0.2134, -0.1745]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962833.2941036}]}, "version": 801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.2952075}]}, "version": 802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.6522, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962833.2966304}]}, "version": 803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.297389}]}, "version": 804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-5.5133, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962833.2985628}]}, "version": 805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.299293}]}, "version": 806}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962833.3004498}]}, "version": 807}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22683650255203247, "step": null, "ts": 1644962833.393963}]}, "version": 808}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0150],\n        [0.0348],\n        [0.0317],\n        [0.0357],\n        [0.0238],\n        [0.0184],\n        [0.0362],\n        [0.0392],\n        [0.0153],\n        [0.0351],\n        [0.0173],\n        [0.0386],\n        [0.0267],\n        [0.0805],\n        [0.0204],\n        [0.0383],\n        [0.0138],\n        [0.0332],\n        [0.0373],\n        [0.0180],\n        [0.0524],\n        [0.0206],\n        [0.0393],\n        [0.0266],\n        [0.0383],\n        [0.0306],\n        [0.0183],\n        [0.0279],\n        [0.0395],\n        [0.0416],\n        [0.0352],\n        [0.0231],\n        [0.0604],\n        [0.0232],\n        [0.0510],\n        [0.0320],\n        [0.0248],\n        [0.0353],\n        [0.0499],\n        [0.0484],\n        [0.0175],\n        [0.0306]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962833.40537}]}, "version": 809}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.4116766}]}, "version": 810}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0492, 0.0188, 0.0192,  ..., 0.0091, 0.0186, 0.0306],\n        [0.0350, 0.0262, 0.0288,  ..., 0.0269, 0.0319, 0.0309],\n        [0.0376, 0.0234, 0.0218,  ..., 0.0179, 0.0266, 0.0290],\n        ...,\n        [0.0339, 0.0251, 0.0114,  ..., 0.0305, 0.0300, 0.0370],\n        [0.0261, 0.0540, 0.0325,  ..., 0.0219, 0.0220, 0.0382],\n        [0.0323, 0.0286, 0.0189,  ..., 0.0114, 0.0346, 0.0349]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962833.4168203}]}, "version": 811}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.4201553}]}, "version": 812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1370, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962833.4215977}]}, "version": 813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.4225929}]}, "version": 814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0027, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962833.4239485}]}, "version": 815}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962833.4249215}]}, "version": 816}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.597959041595459, "step": null, "ts": 1644962833.4260907}]}, "version": 817}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9422849416732788, "step": null, "ts": 1644962834.1242545}]}, "version": 818}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.4585e-01],\n        [ 1.9814e-02],\n        [ 7.5631e+00],\n        [ 6.4114e+00],\n        [ 4.1742e-01],\n        [-1.2155e-01],\n        [ 2.9988e-01],\n        [ 8.5820e-02],\n        [ 3.4722e-02],\n        [-1.0696e-01],\n        [-6.0089e-02],\n        [-1.2352e-01],\n        [-5.2365e-03],\n        [ 1.2033e-02],\n        [-2.4379e+00],\n        [-1.6402e-01],\n        [ 4.5152e-01],\n        [ 3.4763e-01],\n        [ 3.2500e-02],\n        [ 3.9187e-02],\n        [-4.3131e-02],\n        [-2.6002e-01],\n        [ 7.4412e-02],\n        [-7.5062e-02],\n        [-1.0461e-01],\n        [ 5.0599e-01],\n        [ 1.3590e-01],\n        [-2.9601e-01],\n        [-3.5037e-02],\n        [ 5.3579e-01],\n        [-7.1478e-01],\n        [ 3.1345e-02],\n        [-1.5244e+00],\n        [-4.2330e-01],\n        [-7.7474e-02],\n        [ 1.9837e-01],\n        [ 1.5526e-01],\n        [ 4.7087e-03],\n        [ 1.3102e-01],\n        [ 1.6803e+00],\n        [ 3.4028e-01],\n        [ 8.6131e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962834.1403081}]}, "version": 819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.1465867}]}, "version": 820}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.5813e-02,  4.5681e-03,  2.3422e-01,  ...,  2.0973e-01,\n         -1.8272e-03,  1.3589e-01],\n        [-5.2892e-02, -1.2403e-01,  1.3069e-01,  ...,  3.2613e-01,\n          2.2924e-01, -1.9701e-01],\n        [-1.0044e+00, -4.7850e-01, -4.0086e-01,  ..., -4.4372e-01,\n         -1.4895e+00,  9.0424e-01],\n        ...,\n        [ 2.4424e+00,  3.0438e+00, -1.6999e+00,  ..., -4.7583e+00,\n          4.5046e+00, -3.1080e+00],\n        [ 9.8993e-02,  4.0244e-02, -6.5941e-01,  ..., -3.4316e-01,\n          2.6787e-01,  2.0504e-01],\n        [ 7.1910e+00,  1.2540e+00,  1.9733e+01,  ...,  3.5132e+01,\n          4.7011e+01, -1.6054e+01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.1487563}]}, "version": 821}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.1497428}]}, "version": 822}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(62.0272, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962834.151009}]}, "version": 823}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.1519547}]}, "version": 824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-66.1336, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962834.1533449}]}, "version": 825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.154352}]}, "version": 826}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962834.1554651}]}, "version": 827}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.33237215876579285, "step": null, "ts": 1644962834.2470925}]}, "version": 828}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0230],\n        [0.0570],\n        [0.0374],\n        [0.0428],\n        [0.0253],\n        [0.0180],\n        [0.0252],\n        [0.0183],\n        [0.0385],\n        [0.0213],\n        [0.0324],\n        [0.0212],\n        [0.0409],\n        [0.0281],\n        [0.0350],\n        [0.0280],\n        [0.0300],\n        [0.0466],\n        [0.0261],\n        [0.0453],\n        [0.0219],\n        [0.0153],\n        [0.0310],\n        [0.0326],\n        [0.0718],\n        [0.0405],\n        [0.0495],\n        [0.0238],\n        [0.0330],\n        [0.0259],\n        [0.0200],\n        [0.0261],\n        [0.0496],\n        [0.0484],\n        [0.0223],\n        [0.0295],\n        [0.0152],\n        [0.0668],\n        [0.0201],\n        [0.0303],\n        [0.0397],\n        [0.0249]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.2563152}]}, "version": 829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.2657127}]}, "version": 830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0292, 0.0421, 0.0263,  ..., 0.0300, 0.0231, 0.0398],\n        [0.0191, 0.0409, 0.0086,  ..., 0.0204, 0.0307, 0.0311],\n        [0.0345, 0.0233, 0.0212,  ..., 0.0236, 0.0271, 0.0426],\n        ...,\n        [0.0385, 0.0340, 0.0274,  ..., 0.0237, 0.0238, 0.0398],\n        [0.0338, 0.0331, 0.0248,  ..., 0.0283, 0.0273, 0.0295],\n        [0.0204, 0.0345, 0.0215,  ..., 0.0149, 0.0294, 0.0212]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.2704673}]}, "version": 831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.2714128}]}, "version": 832}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1346, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962834.2727034}]}, "version": 833}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.275835}]}, "version": 834}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0045, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962834.2772748}]}, "version": 835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.2782667}]}, "version": 836}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.43788743019104, "step": null, "ts": 1644962834.279742}]}, "version": 837}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.9249364137649536, "step": null, "ts": 1644962834.7046783}]}, "version": 838}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.0178e-01],\n        [-2.3940e-02],\n        [ 1.0161e-01],\n        [ 5.2196e-01],\n        [ 9.2868e+00],\n        [ 2.8057e-02],\n        [ 2.0720e-01],\n        [-4.1450e-03],\n        [ 1.6010e+00],\n        [ 3.5063e-02],\n        [-1.5954e-01],\n        [-9.2821e-02],\n        [ 9.0135e-02],\n        [ 2.7092e-01],\n        [-1.7334e-01],\n        [ 2.8395e-01],\n        [ 4.7406e-01],\n        [ 2.7147e+00],\n        [ 5.7430e-01],\n        [-3.8285e-01],\n        [ 1.9770e-01],\n        [-7.5267e-01],\n        [ 5.1541e-02],\n        [ 2.9019e-01],\n        [ 2.5506e-01],\n        [ 1.4422e-01],\n        [ 3.0991e-01],\n        [ 3.4905e-02],\n        [ 1.6450e-01],\n        [ 2.4106e-01],\n        [ 6.5460e-02],\n        [-4.7420e-02],\n        [-2.6347e-01],\n        [ 1.7860e-01],\n        [ 2.5907e-02],\n        [ 4.6006e-01],\n        [ 4.8540e-01],\n        [-7.2571e-02],\n        [-3.0088e-02],\n        [-1.9330e-02],\n        [-1.2649e-01],\n        [-7.6367e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962834.7185812}]}, "version": 839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.7272296}]}, "version": 840}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.8895, -0.4271, -0.3801,  ..., -0.1970,  0.7573,  0.3109],\n        [-0.2296,  0.2626,  0.4023,  ...,  0.2070,  0.0117, -0.1452],\n        [ 0.2748,  0.0634,  0.0440,  ...,  0.1109,  0.1269,  0.0415],\n        ...,\n        [-0.0031,  0.0383,  0.1498,  ...,  0.1020, -0.0447,  0.0718],\n        [-0.2732,  0.2611, -0.8154,  ...,  0.8254,  1.5932, -0.5175],\n        [ 0.1011, -0.0200,  0.1309,  ...,  0.1429,  0.2852, -0.0578]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.7297764}]}, "version": 841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.7308657}]}, "version": 842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.2167, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962834.732322}]}, "version": 843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.7333262}]}, "version": 844}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-6.5351, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962834.7346783}]}, "version": 845}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.7355752}]}, "version": 846}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962834.7365305}]}, "version": 847}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2608734965324402, "step": null, "ts": 1644962834.8328042}]}, "version": 848}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0267],\n        [0.0358],\n        [0.0327],\n        [0.0566],\n        [0.0184],\n        [0.0228],\n        [0.0246],\n        [0.0401],\n        [0.0282],\n        [0.0181],\n        [0.0216],\n        [0.0326],\n        [0.0538],\n        [0.0377],\n        [0.0299],\n        [0.0225],\n        [0.0317],\n        [0.0317],\n        [0.0277],\n        [0.0162],\n        [0.0695],\n        [0.0237],\n        [0.0189],\n        [0.0149],\n        [0.0464],\n        [0.0316],\n        [0.0289],\n        [0.0235],\n        [0.0287],\n        [0.0310],\n        [0.0438],\n        [0.0352],\n        [0.0399],\n        [0.0539],\n        [0.0563],\n        [0.0266],\n        [0.0401],\n        [0.0233],\n        [0.0220],\n        [0.0287],\n        [0.0359],\n        [0.0314]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.8432238}]}, "version": 849}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.8463807}]}, "version": 850}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0242, 0.0184, 0.0319,  ..., 0.0253, 0.0197, 0.0286],\n        [0.0339, 0.0268, 0.0250,  ..., 0.0245, 0.0410, 0.0312],\n        [0.0264, 0.0302, 0.0254,  ..., 0.0318, 0.0426, 0.0316],\n        ...,\n        [0.0310, 0.0232, 0.0267,  ..., 0.0272, 0.0380, 0.0320],\n        [0.0359, 0.0274, 0.0153,  ..., 0.0351, 0.0311, 0.0267],\n        [0.0285, 0.0471, 0.0110,  ..., 0.0143, 0.0131, 0.0221]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962834.8513007}]}, "version": 851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.8521678}]}, "version": 852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1282, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962834.8536184}]}, "version": 853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.854367}]}, "version": 854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0053, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962834.8555079}]}, "version": 855}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962834.8567882}]}, "version": 856}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6551315784454346, "step": null, "ts": 1644962834.8576717}]}, "version": 857}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5658231377601624, "step": null, "ts": 1644962835.3236825}]}, "version": 858}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962835.3239925}]}, "version": 859}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.0416412353515625, "step": null, "ts": 1644962835.3239925}]}, "version": 860}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 70.0, "step": null, "ts": 1644962835.3239925}]}, "version": 861}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962835.3239925}]}, "version": 862}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-8.0420e-02],\n        [ 1.1459e+00],\n        [-3.5353e-01],\n        [ 4.2996e-02],\n        [ 1.4803e-01],\n        [-1.9218e-01],\n        [ 3.8720e-01],\n        [ 5.8503e-02],\n        [ 1.2398e-02],\n        [-2.3070e-01],\n        [ 8.8239e-02],\n        [ 1.2789e-01],\n        [ 1.5151e-01],\n        [-6.9307e-02],\n        [ 2.0134e-02],\n        [ 3.7234e-01],\n        [ 2.6815e-01],\n        [-3.0673e-02],\n        [-2.4940e-01],\n        [-1.8060e-01],\n        [-5.7983e-01],\n        [ 2.9018e-01],\n        [ 2.0134e-01],\n        [ 1.5080e-01],\n        [-1.1236e-01],\n        [-5.6220e-02],\n        [ 6.0720e-02],\n        [-1.7035e-02],\n        [ 1.4809e-01],\n        [ 1.3303e+01],\n        [-1.9771e-01],\n        [ 3.6804e-02],\n        [-5.9807e+00],\n        [ 1.1772e-01],\n        [ 5.1724e-02],\n        [ 9.4560e-02],\n        [-2.3542e-01],\n        [ 1.7263e-01],\n        [ 1.2708e-02],\n        [ 1.6739e-01],\n        [ 6.0172e-02],\n        [ 4.7805e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962835.3408322}]}, "version": 863}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.3508482}]}, "version": 864}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.1890e-02,  2.4984e-01,  3.0609e-01,  ...,  2.7773e-01,\n          4.6829e-01, -1.5349e-01],\n        [ 3.4801e+00,  9.1779e-01, -1.4294e+01,  ..., -1.4432e+00,\n          1.6900e+00,  2.9039e+00],\n        [-1.0677e-01,  6.6118e-01,  1.4059e-01,  ...,  9.8944e-01,\n          3.9671e-01, -1.2955e+00],\n        ...,\n        [ 1.4500e-01, -7.1885e-01, -2.8632e-01,  ..., -8.4791e-01,\n         -7.1622e-01,  6.4007e-02],\n        [ 7.1900e-02, -1.1374e-02,  2.1435e-01,  ...,  1.0925e-01,\n         -4.5771e-02,  4.5566e-02],\n        [ 2.2402e-01, -1.6211e+00, -8.6578e-01,  ..., -3.0920e+00,\n         -7.9793e-01, -5.3168e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962835.3530893}]}, "version": 865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.3540468}]}, "version": 866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(27.5079, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962835.355542}]}, "version": 867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.3564456}]}, "version": 868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-24.5229, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962835.3576171}]}, "version": 869}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.3586502}]}, "version": 870}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962835.3596852}]}, "version": 871}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962835.413015}]}, "version": 872}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.35949838161468506, "step": null, "ts": 1644962835.4429862}]}, "version": 873}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0303],\n        [0.0280],\n        [0.0146],\n        [0.0227],\n        [0.0432],\n        [0.0266],\n        [0.0191],\n        [0.0336],\n        [0.0247],\n        [0.0492],\n        [0.0286],\n        [0.0275],\n        [0.0272],\n        [0.0421],\n        [0.0203],\n        [0.0285],\n        [0.0224],\n        [0.0461],\n        [0.0216],\n        [0.0380],\n        [0.0404],\n        [0.0267],\n        [0.0424],\n        [0.0298],\n        [0.0279],\n        [0.0296],\n        [0.0198],\n        [0.0312],\n        [0.0458],\n        [0.0325],\n        [0.0334],\n        [0.0340],\n        [0.0538],\n        [0.0332],\n        [0.0349],\n        [0.0448],\n        [0.0234],\n        [0.0264],\n        [0.0404],\n        [0.0268],\n        [0.0252],\n        [0.0283]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962835.4547317}]}, "version": 874}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.4585834}]}, "version": 875}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0277, 0.0241, 0.0223,  ..., 0.0291, 0.0277, 0.0285],\n        [0.0249, 0.0385, 0.0204,  ..., 0.0172, 0.0235, 0.0433],\n        [0.0110, 0.0541, 0.0338,  ..., 0.0300, 0.0319, 0.0293],\n        ...,\n        [0.0289, 0.0209, 0.0181,  ..., 0.0354, 0.0388, 0.0191],\n        [0.0313, 0.0547, 0.0202,  ..., 0.0260, 0.0224, 0.0260],\n        [0.0250, 0.0307, 0.0075,  ..., 0.0287, 0.0221, 0.0283]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962835.4633858}]}, "version": 876}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.4688458}]}, "version": 877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1228, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962835.4702353}]}, "version": 878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.4710903}]}, "version": 879}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0037, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962835.4724164}]}, "version": 880}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.4731925}]}, "version": 881}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4892189502716064, "step": null, "ts": 1644962835.4745042}]}, "version": 882}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5117916464805603, "step": null, "ts": 1644962835.9374785}]}, "version": 883}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 3.3082e-01],\n        [-5.1210e-01],\n        [ 4.7512e-01],\n        [ 2.5311e-01],\n        [ 1.8608e-02],\n        [-5.7668e+00],\n        [-5.9944e-02],\n        [ 8.2867e-01],\n        [ 5.8268e-02],\n        [-5.2708e-02],\n        [-2.1909e-02],\n        [ 7.7547e-02],\n        [ 4.9421e-01],\n        [-8.4204e-02],\n        [ 1.9394e+00],\n        [ 4.6301e-01],\n        [ 3.1370e-01],\n        [ 6.3367e-02],\n        [ 1.0874e-02],\n        [ 3.1747e-01],\n        [ 5.4984e-02],\n        [-4.3426e-02],\n        [-5.0298e-02],\n        [-5.3825e-02],\n        [-3.8796e+00],\n        [-9.2991e-02],\n        [-5.8565e-01],\n        [-4.9507e-02],\n        [-3.6551e-01],\n        [-1.0984e-01],\n        [-1.0996e-01],\n        [ 8.2325e-02],\n        [ 2.4160e-01],\n        [-3.8884e-03],\n        [ 3.8941e-02],\n        [ 7.3824e-02],\n        [-1.5023e-01],\n        [-7.4878e-02],\n        [-3.1832e+00],\n        [ 7.9031e-02],\n        [-1.1352e-01],\n        [-1.5401e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962835.9473686}]}, "version": 884}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.9522307}]}, "version": 885}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.8379e-01, -9.7402e-02,  5.1829e-02,  ...,  7.4173e-01,\n         -4.1627e-02, -1.6570e-01],\n        [-1.7722e-01,  3.7495e-01,  3.2882e-01,  ..., -1.4042e-02,\n         -2.8801e-01,  1.0146e-01],\n        [ 4.7863e-01, -1.5055e-01, -1.0909e+00,  ..., -4.9090e-01,\n         -4.7169e-01, -3.9786e-02],\n        ...,\n        [ 3.2928e-02, -4.5824e-02,  4.9805e-04,  ...,  7.9860e-01,\n          4.6811e-01, -2.0867e-01],\n        [-2.5542e-01,  2.4158e-01,  1.4949e-01,  ...,  3.7333e-01,\n          4.8479e-02, -3.0348e-01],\n        [-5.8062e-02,  6.8140e-02,  3.3720e-01,  ...,  8.2824e-02,\n          9.7883e-02,  7.0522e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962835.9543738}]}, "version": 886}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.9549515}]}, "version": 887}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.4258, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962835.956084}]}, "version": 888}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.956844}]}, "version": 889}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-6.9362, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962835.9581568}]}, "version": 890}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962835.9590595}]}, "version": 891}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962835.9602275}]}, "version": 892}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.48345693945884705, "step": null, "ts": 1644962836.0495894}]}, "version": 893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0316],\n        [0.0307],\n        [0.0434],\n        [0.0327],\n        [0.0705],\n        [0.0321],\n        [0.0203],\n        [0.0270],\n        [0.0289],\n        [0.0220],\n        [0.0107],\n        [0.0325],\n        [0.0328],\n        [0.0250],\n        [0.0148],\n        [0.0245],\n        [0.0384],\n        [0.0318],\n        [0.0530],\n        [0.0402],\n        [0.0271],\n        [0.0402],\n        [0.0497],\n        [0.0289],\n        [0.0293],\n        [0.0446],\n        [0.0489],\n        [0.0181],\n        [0.0372],\n        [0.0193],\n        [0.0430],\n        [0.0441],\n        [0.0251],\n        [0.0232],\n        [0.0247],\n        [0.0315],\n        [0.0307],\n        [0.0432],\n        [0.0374],\n        [0.0168],\n        [0.0435],\n        [0.0327]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962836.065154}]}, "version": 894}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.0688503}]}, "version": 895}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0280, 0.0376, 0.0215,  ..., 0.0192, 0.0280, 0.0426],\n        [0.0198, 0.0307, 0.0163,  ..., 0.0117, 0.0153, 0.0478],\n        [0.0367, 0.0288, 0.0230,  ..., 0.0267, 0.0410, 0.0410],\n        ...,\n        [0.0281, 0.0357, 0.0296,  ..., 0.0187, 0.0448, 0.0257],\n        [0.0327, 0.0432, 0.0151,  ..., 0.0283, 0.0389, 0.0183],\n        [0.0263, 0.0163, 0.0285,  ..., 0.0367, 0.0307, 0.0318]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962836.07377}]}, "version": 896}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.0824487}]}, "version": 897}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2337, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962836.08373}]}, "version": 898}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.0845509}]}, "version": 899}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0022, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962836.085647}]}, "version": 900}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.086528}]}, "version": 901}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.573946714401245, "step": null, "ts": 1644962836.087554}]}, "version": 902}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7591521739959717, "step": null, "ts": 1644962836.5532527}]}, "version": 903}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.3384e+01],\n        [ 4.2256e-02],\n        [ 1.0385e-01],\n        [ 3.0496e-01],\n        [-3.2719e+00],\n        [ 3.0351e-02],\n        [-7.4134e-02],\n        [-1.0508e-01],\n        [ 4.2342e-01],\n        [-1.1635e-01],\n        [ 4.9539e-01],\n        [-5.5516e-01],\n        [-8.9219e-02],\n        [ 1.1008e-01],\n        [ 1.6588e-01],\n        [ 1.9103e+01],\n        [-9.2930e-03],\n        [-1.4559e-01],\n        [ 3.8061e-01],\n        [ 7.5176e-02],\n        [-3.5936e+00],\n        [-3.1518e-01],\n        [-2.7399e-02],\n        [-4.4143e-02],\n        [ 1.9876e-01],\n        [ 1.1686e-01],\n        [ 3.4340e-01],\n        [-7.6832e-02],\n        [ 1.4499e-01],\n        [-3.3673e-02],\n        [ 1.7353e-02],\n        [ 8.5726e-02],\n        [ 4.8298e+01],\n        [-1.5099e+00],\n        [-3.1244e-01],\n        [ 1.1771e-01],\n        [ 2.8933e-01],\n        [-1.9709e-01],\n        [-1.4205e-02],\n        [ 6.7015e-05],\n        [ 1.8067e-01],\n        [ 2.6999e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962836.5660026}]}, "version": 904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.5670404}]}, "version": 905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.4014, -0.2948,  0.4464,  ...,  0.1483,  0.0195, -0.2116],\n        [ 0.0528,  0.0104,  0.2379,  ...,  0.0097,  0.0901,  0.0992],\n        [ 0.0546,  0.1191,  0.0209,  ...,  0.3239,  0.2128, -0.0978],\n        ...,\n        [ 0.0220, -0.0447,  0.3083,  ...,  0.0698, -0.0989, -0.0185],\n        [ 0.2337, -0.6520, -1.0362,  ..., -0.7819, -0.3019,  0.8695],\n        [ 0.4164, -0.0887,  0.2124,  ...,  0.6523,  0.2632,  0.1990]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962836.5694659}]}, "version": 906}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.5702403}]}, "version": 907}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(11.2286, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962836.5714786}]}, "version": 908}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.572118}]}, "version": 909}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-8.0577, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962836.5735471}]}, "version": 910}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.5742397}]}, "version": 911}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962836.575217}]}, "version": 912}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3443602919578552, "step": null, "ts": 1644962836.66928}]}, "version": 913}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0526],\n        [0.0367],\n        [0.0225],\n        [0.0474],\n        [0.0280],\n        [0.0189],\n        [0.0170],\n        [0.0356],\n        [0.0380],\n        [0.0325],\n        [0.0296],\n        [0.0219],\n        [0.0431],\n        [0.0375],\n        [0.0284],\n        [0.0262],\n        [0.0437],\n        [0.0401],\n        [0.0274],\n        [0.0367],\n        [0.0186],\n        [0.0195],\n        [0.0201],\n        [0.0472],\n        [0.0128],\n        [0.0445],\n        [0.0396],\n        [0.0297],\n        [0.0409],\n        [0.0269],\n        [0.0278],\n        [0.0163],\n        [0.0340],\n        [0.0541],\n        [0.0277],\n        [0.0475],\n        [0.0332],\n        [0.0372],\n        [0.0413],\n        [0.0347],\n        [0.0380],\n        [0.0314]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962836.6834085}]}, "version": 914}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.6894138}]}, "version": 915}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0342, 0.0274, 0.0246,  ..., 0.0308, 0.0301, 0.0462],\n        [0.0307, 0.0478, 0.0132,  ..., 0.0233, 0.0257, 0.0344],\n        [0.0424, 0.0324, 0.0230,  ..., 0.0281, 0.0271, 0.0289],\n        ...,\n        [0.0193, 0.0286, 0.0162,  ..., 0.0218, 0.0194, 0.0282],\n        [0.0268, 0.0310, 0.0222,  ..., 0.0338, 0.0318, 0.0325],\n        [0.0322, 0.0334, 0.0161,  ..., 0.0290, 0.0261, 0.0419]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962836.6915455}]}, "version": 916}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.6949885}]}, "version": 917}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1326, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962836.6963418}]}, "version": 918}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.6973212}]}, "version": 919}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0031, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962836.6987016}]}, "version": 920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.6996155}]}, "version": 921}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5641233921051025, "step": null, "ts": 1644962836.7005641}]}, "version": 922}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.609 (0.609)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss nan (nan)", "step": null, "ts": 1644962836.9431107}]}, "version": 923}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962836.9442246}]}, "version": 924}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7835748195648193, "step": null, "ts": 1644962837.1388807}]}, "version": 925}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-9.6038e-02],\n        [ 1.7800e+00],\n        [ 4.0796e-01],\n        [-3.8900e-02],\n        [ 3.3611e+00],\n        [-2.9726e-01],\n        [ 4.4632e+00],\n        [-1.9707e-01],\n        [ 1.1389e-01],\n        [-1.2145e-01],\n        [ 1.8787e+01],\n        [ 4.2208e-01],\n        [ 3.0354e-02],\n        [ 1.3501e-01],\n        [ 1.3856e-02],\n        [-1.2496e-01],\n        [-4.1309e-02],\n        [-2.0024e-01],\n        [ 6.1022e-02],\n        [ 3.4620e+00],\n        [-1.1499e-01],\n        [-3.2234e+00],\n        [-6.6039e-01],\n        [ 3.7324e-01],\n        [-2.7522e-01],\n        [ 2.2818e+00],\n        [-6.7369e+00],\n        [ 1.8743e-01],\n        [ 1.6351e-01],\n        [-1.9997e+00],\n        [-8.2528e-04],\n        [ 1.2388e-01],\n        [-4.6927e-01],\n        [-6.7892e-01],\n        [-1.9594e-01],\n        [ 1.3961e-01],\n        [ 5.3789e-02],\n        [-5.4903e-02],\n        [-1.3501e-01],\n        [-4.6862e-01],\n        [ 7.0927e-01],\n        [-7.0310e+00]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962837.1519806}]}, "version": 926}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.1610014}]}, "version": 927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.3957,  0.1725,  0.9583,  ...,  0.4146, -0.4244, -0.4358],\n        [ 2.2251,  1.5064, -0.9810,  ..., -2.5950, -3.6262,  0.7483],\n        [ 0.4359, -0.0049, -0.2318,  ..., -1.0699, -0.3213,  0.9156],\n        ...,\n        [ 0.1036, -0.1417,  0.0433,  ...,  0.0193,  0.1285,  0.0207],\n        [ 0.4796, -1.9279,  0.5101,  ...,  2.3006,  1.2522, -0.5077],\n        [-0.1915, -0.4584, -1.3393,  ...,  0.2933,  0.3499, -0.1636]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.163508}]}, "version": 928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.16482}]}, "version": 929}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.8483, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962837.166188}]}, "version": 930}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.1670103}]}, "version": 931}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-4.7508, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962837.168312}]}, "version": 932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.1690123}]}, "version": 933}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962837.1701505}]}, "version": 934}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3973582088947296, "step": null, "ts": 1644962837.2633839}]}, "version": 935}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0387],\n        [0.0400],\n        [0.0418],\n        [0.0267],\n        [0.0230],\n        [0.0313],\n        [0.0278],\n        [0.0425],\n        [0.0280],\n        [0.0391],\n        [0.0233],\n        [0.0327],\n        [0.0153],\n        [0.0336],\n        [0.0151],\n        [0.0281],\n        [0.0475],\n        [0.0202],\n        [0.0256],\n        [0.0221],\n        [0.0358],\n        [0.0379],\n        [0.0338],\n        [0.0335],\n        [0.0468],\n        [0.0387],\n        [0.0243],\n        [0.0317],\n        [0.0568],\n        [0.0180],\n        [0.0341],\n        [0.0343],\n        [0.0390],\n        [0.0066],\n        [0.0423],\n        [0.0371],\n        [0.0435],\n        [0.0219],\n        [0.0341],\n        [0.0563],\n        [0.0328],\n        [0.0367]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.2713034}]}, "version": 936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.2762244}]}, "version": 937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0527, 0.0339, 0.0171,  ..., 0.0200, 0.0088, 0.0484],\n        [0.0270, 0.0304, 0.0327,  ..., 0.0346, 0.0215, 0.0320],\n        [0.0401, 0.0421, 0.0196,  ..., 0.0243, 0.0228, 0.0401],\n        ...,\n        [0.0170, 0.0452, 0.0155,  ..., 0.0219, 0.0250, 0.0186],\n        [0.0239, 0.0312, 0.0206,  ..., 0.0323, 0.0215, 0.0407],\n        [0.0178, 0.0530, 0.0182,  ..., 0.0409, 0.0327, 0.0187]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.2874002}]}, "version": 938}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.2908115}]}, "version": 939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1542, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962837.2921388}]}, "version": 940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.2952552}]}, "version": 941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0054, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962837.2963638}]}, "version": 942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.297145}]}, "version": 943}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.578205108642578, "step": null, "ts": 1644962837.2981448}]}, "version": 944}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6310012340545654, "step": null, "ts": 1644962837.7373767}]}, "version": 945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 6.4670e-01],\n        [ 5.8422e-01],\n        [ 2.4409e+00],\n        [-2.5264e-01],\n        [-7.7845e-02],\n        [-1.8620e-03],\n        [ 3.2021e-01],\n        [-1.6691e+01],\n        [ 1.4179e-01],\n        [-8.5779e+00],\n        [ 1.6891e-01],\n        [ 1.1626e-02],\n        [ 2.2383e+00],\n        [-5.6337e-02],\n        [ 9.9135e-02],\n        [-2.9672e-01],\n        [-3.4287e-01],\n        [-5.4900e-03],\n        [-1.8896e-01],\n        [-3.6797e-02],\n        [-1.6040e-02],\n        [-3.3081e-01],\n        [ 1.4176e-01],\n        [ 7.8498e-02],\n        [-6.6928e-02],\n        [ 4.6947e-01],\n        [-1.1634e-01],\n        [-1.0189e+00],\n        [ 8.3975e-02],\n        [ 6.0394e-02],\n        [ 4.6589e+00],\n        [-1.6320e-01],\n        [ 5.7225e+00],\n        [-1.5240e-01],\n        [-4.7141e-01],\n        [ 3.5181e+00],\n        [ 2.1101e-01],\n        [-2.4600e-01],\n        [ 2.4880e-01],\n        [ 1.6924e-01],\n        [ 8.0553e-01],\n        [ 3.3671e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962837.7481627}]}, "version": 946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.74914}]}, "version": 947}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.6452,  0.5734, -5.0129,  ..., -0.5306, -9.7454,  1.2296],\n        [-3.9443,  1.1244, -1.9976,  ...,  1.7830,  0.3764,  0.1032],\n        [-0.6984,  1.9672, -1.8188,  ..., -2.1315, -1.9732,  0.2011],\n        ...,\n        [-0.0876, -0.0564,  0.6937,  ...,  0.3175,  0.0590, -0.1773],\n        [ 1.1804,  1.8845, -0.9629,  ...,  2.9007,  0.1331, -3.0563],\n        [-0.2171,  0.1489,  0.1244,  ...,  0.1469,  0.3972, -0.0280]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.7515512}]}, "version": 948}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.7580585}]}, "version": 949}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(12.9932, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962837.7594573}]}, "version": 950}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.7603395}]}, "version": 951}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-9.7454, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962837.7614696}]}, "version": 952}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.7622247}]}, "version": 953}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962837.763245}]}, "version": 954}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.10448283702135086, "step": null, "ts": 1644962837.8523254}]}, "version": 955}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0244],\n        [0.0203],\n        [0.0339],\n        [0.0412],\n        [0.0269],\n        [0.0291],\n        [0.0358],\n        [0.0326],\n        [0.0327],\n        [0.0198],\n        [0.0353],\n        [0.0460],\n        [0.0443],\n        [0.0284],\n        [0.0487],\n        [0.0590],\n        [0.0268],\n        [0.0337],\n        [0.0289],\n        [0.0205],\n        [0.0345],\n        [0.0170],\n        [0.0317],\n        [0.0415],\n        [0.0575],\n        [0.0550],\n        [0.0396],\n        [0.0249],\n        [0.0313],\n        [0.0175],\n        [0.0260],\n        [0.0245],\n        [0.0384],\n        [0.0288],\n        [0.0335],\n        [0.0235],\n        [0.0278],\n        [0.0148],\n        [0.0209],\n        [0.0215],\n        [0.0383],\n        [0.0438]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.8633842}]}, "version": 956}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.8688414}]}, "version": 957}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0142, 0.0222, 0.0128,  ..., 0.0186, 0.0169, 0.0239],\n        [0.0294, 0.0409, 0.0305,  ..., 0.0219, 0.0175, 0.0434],\n        [0.0345, 0.0356, 0.0239,  ..., 0.0289, 0.0301, 0.0452],\n        ...,\n        [0.0240, 0.0229, 0.0159,  ..., 0.0152, 0.0256, 0.0288],\n        [0.0453, 0.0435, 0.0169,  ..., 0.0233, 0.0249, 0.0276],\n        [0.0176, 0.0247, 0.0295,  ..., 0.0264, 0.0201, 0.0246]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962837.8714774}]}, "version": 958}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.8795898}]}, "version": 959}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1190, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962837.8836212}]}, "version": 960}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.8845882}]}, "version": 961}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0042, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962837.8856785}]}, "version": 962}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962837.8865507}]}, "version": 963}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6799933910369873, "step": null, "ts": 1644962837.8875291}]}, "version": 964}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8994686007499695, "step": null, "ts": 1644962838.3518748}]}, "version": 965}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.1039e-01],\n        [-1.4584e-01],\n        [-3.6801e-01],\n        [ 1.7290e-01],\n        [-2.5918e-01],\n        [ 4.2894e-01],\n        [-5.6615e-02],\n        [ 4.9786e-03],\n        [-2.9572e-01],\n        [ 2.1770e-01],\n        [ 1.3073e-01],\n        [ 3.7701e-02],\n        [-1.6671e-01],\n        [-4.5197e-01],\n        [ 7.2594e-02],\n        [ 1.9969e-01],\n        [ 5.0429e-01],\n        [ 7.0185e-02],\n        [-9.8025e-01],\n        [-2.7318e-02],\n        [ 3.2125e-03],\n        [ 1.5941e+00],\n        [ 3.6131e-02],\n        [-1.4996e-02],\n        [ 1.4995e-01],\n        [ 2.4742e-01],\n        [-4.1009e+00],\n        [-4.5248e-01],\n        [ 1.6727e-02],\n        [ 7.6484e-03],\n        [-1.9065e-01],\n        [ 1.9202e-01],\n        [-4.1091e-01],\n        [ 7.1066e-02],\n        [-1.2165e-01],\n        [ 1.9763e-01],\n        [ 3.4585e-02],\n        [ 3.7102e-01],\n        [-1.9897e-02],\n        [-5.2835e-02],\n        [-6.0652e-02],\n        [ 3.1031e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962838.362977}]}, "version": 966}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.3639956}]}, "version": 967}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0606,  0.0227,  0.1474,  ...,  0.2504,  0.1521, -0.1630],\n        [ 0.0471,  0.0218, -0.1500,  ..., -0.2382,  0.0137,  0.1023],\n        [-0.1031,  0.1756, -0.3490,  ..., -0.2024,  0.4096, -0.1125],\n        ...,\n        [ 0.0126,  0.0479,  0.1326,  ...,  0.0946,  0.1133,  0.0238],\n        [ 0.0533,  0.2288, -0.0422,  ...,  0.0415,  0.0195,  0.1013],\n        [ 0.1386, -0.2717,  0.0865,  ..., -0.5272, -0.3600,  0.3221]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962838.3664913}]}, "version": 968}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.3675284}]}, "version": 969}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.7008, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962838.3688757}]}, "version": 970}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.3698146}]}, "version": 971}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-9.0708, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962838.3713026}]}, "version": 972}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.3722317}]}, "version": 973}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962838.3732228}]}, "version": 974}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.23073887825012207, "step": null, "ts": 1644962838.4759371}]}, "version": 975}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0168],\n        [0.0267],\n        [0.0362],\n        [0.0351],\n        [0.0516],\n        [0.0606],\n        [0.0422],\n        [0.0308],\n        [0.0229],\n        [0.0193],\n        [0.0210],\n        [0.0307],\n        [0.0338],\n        [0.0395],\n        [0.0342],\n        [0.0331],\n        [0.0324],\n        [0.0282],\n        [0.0354],\n        [0.0505],\n        [0.0209],\n        [0.0323],\n        [0.0243],\n        [0.0354],\n        [0.0397],\n        [0.0289],\n        [0.0242],\n        [0.0235],\n        [0.0288],\n        [0.0659],\n        [0.0187],\n        [0.0424],\n        [0.0204],\n        [0.0166],\n        [0.0242],\n        [0.0155],\n        [0.0301],\n        [0.0567],\n        [0.0244],\n        [0.0286],\n        [0.0323],\n        [0.0519]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962838.4862213}]}, "version": 976}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.4925425}]}, "version": 977}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0509, 0.0296, 0.0327,  ..., 0.0083, 0.0246, 0.0407],\n        [0.0114, 0.0667, 0.0084,  ..., 0.0366, 0.0159, 0.0237],\n        [0.0383, 0.0327, 0.0197,  ..., 0.0217, 0.0323, 0.0315],\n        ...,\n        [0.0264, 0.0374, 0.0222,  ..., 0.0181, 0.0265, 0.0456],\n        [0.0349, 0.0270, 0.0233,  ..., 0.0194, 0.0339, 0.0311],\n        [0.0295, 0.0270, 0.0142,  ..., 0.0320, 0.0200, 0.0337]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962838.4948053}]}, "version": 978}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.498194}]}, "version": 979}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1679, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962838.4995534}]}, "version": 980}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.500277}]}, "version": 981}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0041, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962838.5012684}]}, "version": 982}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.5019052}]}, "version": 983}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.7375853061676025, "step": null, "ts": 1644962838.5028682}]}, "version": 984}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8624277710914612, "step": null, "ts": 1644962838.9549673}]}, "version": 985}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0809],\n        [-0.7044],\n        [ 0.9669],\n        [ 0.3284],\n        [ 0.1714],\n        [ 0.2909],\n        [-0.0161],\n        [ 0.4175],\n        [-0.2318],\n        [ 0.0611],\n        [ 0.5770],\n        [ 0.2454],\n        [ 0.3112],\n        [ 0.4773],\n        [-0.1452],\n        [ 0.1250],\n        [-0.0032],\n        [-0.0929],\n        [-0.7597],\n        [ 0.0399],\n        [ 0.0741],\n        [-0.6658],\n        [-0.0873],\n        [-0.0707],\n        [ 0.1463],\n        [-0.0741],\n        [ 0.3221],\n        [-0.2751],\n        [-0.2836],\n        [-0.0428],\n        [ 0.1502],\n        [ 0.2525],\n        [-0.3045],\n        [ 0.6329],\n        [-0.0570],\n        [ 0.0441],\n        [ 0.1861],\n        [-0.0457],\n        [ 0.1453],\n        [-0.2538],\n        [-0.1790],\n        [ 0.1257]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962838.968166}]}, "version": 986}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.969236}]}, "version": 987}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-9.5696e-02, -5.3994e-01,  7.3447e-02,  ..., -1.3204e+00,\n         -4.9923e-01, -2.2985e-02],\n        [-1.2147e-01, -3.9721e-02,  7.1363e-01,  ...,  2.7738e-01,\n          2.1546e-01,  1.6878e-01],\n        [-1.1690e+01, -1.4137e+01,  3.1942e+01,  ...,  4.9766e+00,\n          5.7859e+00,  4.2566e+00],\n        ...,\n        [ 1.5149e-01,  4.5571e-02,  7.0194e-02,  ...,  1.4003e-01,\n          1.0234e-01,  8.6014e-03],\n        [-1.1455e-01,  4.9899e-02,  4.4736e-01,  ...,  2.6382e-01,\n          2.3532e-01, -9.0795e-02],\n        [-2.7397e-02,  4.5218e-01, -4.6622e-01,  ..., -1.1573e-01,\n         -8.7973e-02, -2.9897e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962838.9714572}]}, "version": 988}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.979033}]}, "version": 989}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(99.9074, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962838.9806666}]}, "version": 990}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.9817462}]}, "version": 991}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-73.3081, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962838.9831276}]}, "version": 992}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962838.9842455}]}, "version": 993}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962838.985642}]}, "version": 994}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.151458278298378, "step": null, "ts": 1644962839.0700336}]}, "version": 995}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0327],\n        [0.0472],\n        [0.0134],\n        [0.0351],\n        [0.0403],\n        [0.0297],\n        [0.0377],\n        [0.0211],\n        [0.0375],\n        [0.0424],\n        [0.0340],\n        [0.0322],\n        [0.0166],\n        [0.0263],\n        [0.0290],\n        [0.0578],\n        [0.0606],\n        [0.0438],\n        [0.0163],\n        [0.0192],\n        [0.0189],\n        [0.0300],\n        [0.0368],\n        [0.0151],\n        [0.0247],\n        [0.0251],\n        [0.0317],\n        [0.0300],\n        [0.0359],\n        [0.0189],\n        [0.0363],\n        [0.0388],\n        [0.0313],\n        [0.0237],\n        [0.0408],\n        [0.0414],\n        [0.0523],\n        [0.0402],\n        [0.0336],\n        [0.0315],\n        [0.0226],\n        [0.0330]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.0805142}]}, "version": 996}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.08691}]}, "version": 997}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0270, 0.0385, 0.0185,  ..., 0.0163, 0.0194, 0.0505],\n        [0.0283, 0.0360, 0.0178,  ..., 0.0261, 0.0292, 0.0267],\n        [0.0283, 0.0267, 0.0124,  ..., 0.0195, 0.0107, 0.0237],\n        ...,\n        [0.0388, 0.0336, 0.0180,  ..., 0.0288, 0.0259, 0.0429],\n        [0.0430, 0.0292, 0.0341,  ..., 0.0272, 0.0180, 0.0522],\n        [0.0379, 0.0552, 0.0274,  ..., 0.0265, 0.0182, 0.0319]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.0892477}]}, "version": 998}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.0978212}]}, "version": 999}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1234, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962839.099408}]}, "version": 1000}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.1004567}]}, "version": 1001}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0036, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962839.1018708}]}, "version": 1002}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.1027815}]}, "version": 1003}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.632930040359497, "step": null, "ts": 1644962839.1040163}]}, "version": 1004}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.755896270275116, "step": null, "ts": 1644962839.553525}]}, "version": 1005}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.2235],\n        [-0.0801],\n        [ 0.0386],\n        [-0.0165],\n        [-2.1502],\n        [-0.0498],\n        [-0.2312],\n        [-0.0536],\n        [-0.1267],\n        [-0.0514],\n        [ 0.4372],\n        [ 0.2726],\n        [ 0.0480],\n        [-0.0891],\n        [ 0.0345],\n        [ 0.0804],\n        [-0.2003],\n        [ 0.1293],\n        [-0.1455],\n        [-0.1586],\n        [-0.2214],\n        [ 0.0742],\n        [-0.1649],\n        [ 0.1523],\n        [ 0.7394],\n        [ 0.0688],\n        [ 0.0737],\n        [-0.0154],\n        [ 0.3158],\n        [-0.4791],\n        [ 0.0963],\n        [ 0.0704],\n        [-0.0969],\n        [ 0.1060],\n        [-0.3259],\n        [ 0.0878],\n        [ 0.1030],\n        [ 0.0298],\n        [-3.6535],\n        [ 0.0372],\n        [-0.1384],\n        [ 0.1731]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.56951}]}, "version": 1006}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.5768592}]}, "version": 1007}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0367,  0.0774,  0.4034,  ...,  0.4241,  0.0816, -0.0087],\n        [ 0.1511,  0.1362,  0.7579,  ...,  0.7540,  0.1514, -0.0859],\n        [-0.0153,  0.1665, -0.1328,  ...,  0.0039, -0.0242,  0.0636],\n        ...,\n        [ 0.0404, -0.0482, -0.0089,  ...,  0.1055,  0.0559,  0.0354],\n        [-0.0846,  0.0022,  0.1905,  ...,  0.2101,  0.2900,  0.0245],\n        [ 0.0030,  0.0033,  0.4225,  ...,  0.4774,  0.1605,  0.0838]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.5793881}]}, "version": 1008}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.5804772}]}, "version": 1009}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(19.1271, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962839.581839}]}, "version": 1010}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.5828304}]}, "version": 1011}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-21.1209, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962839.584196}]}, "version": 1012}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.585162}]}, "version": 1013}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962839.5865119}]}, "version": 1014}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.37527376413345337, "step": null, "ts": 1644962839.6728628}]}, "version": 1015}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0245],\n        [0.0195],\n        [0.0372],\n        [0.0366],\n        [0.0126],\n        [0.0623],\n        [0.0247],\n        [0.0340],\n        [0.0504],\n        [0.0376],\n        [0.0212],\n        [0.0230],\n        [0.0204],\n        [0.0310],\n        [0.0443],\n        [0.0278],\n        [0.0331],\n        [0.0288],\n        [0.0250],\n        [0.0312],\n        [0.0532],\n        [0.0307],\n        [0.0371],\n        [0.0420],\n        [0.0383],\n        [0.0298],\n        [0.0443],\n        [0.0378],\n        [0.0187],\n        [0.0316],\n        [0.0214],\n        [0.0532],\n        [0.0184],\n        [0.0192],\n        [0.0365],\n        [0.0194],\n        [0.0385],\n        [0.0371],\n        [0.0431],\n        [0.0441],\n        [0.0212],\n        [0.0442]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.68323}]}, "version": 1016}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.6893773}]}, "version": 1017}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0371, 0.0353, 0.0200,  ..., 0.0196, 0.0258, 0.0342],\n        [0.0150, 0.0606, 0.0041,  ..., 0.0059, 0.0095, 0.0493],\n        [0.0261, 0.0227, 0.0212,  ..., 0.0139, 0.0281, 0.0327],\n        ...,\n        [0.0170, 0.0283, 0.0214,  ..., 0.0188, 0.0324, 0.0163],\n        [0.0210, 0.0324, 0.0183,  ..., 0.0192, 0.0415, 0.0311],\n        [0.0241, 0.0307, 0.0161,  ..., 0.0350, 0.0226, 0.0369]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962839.6918714}]}, "version": 1018}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.6952345}]}, "version": 1019}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1526, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962839.6988497}]}, "version": 1020}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.6996548}]}, "version": 1021}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0028, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962839.7006729}]}, "version": 1022}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962839.7014647}]}, "version": 1023}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6751341819763184, "step": null, "ts": 1644962839.7024877}]}, "version": 1024}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7045120000839233, "step": null, "ts": 1644962840.147685}]}, "version": 1025}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.1243],\n        [-0.1473],\n        [ 0.0687],\n        [-0.1086],\n        [ 0.0768],\n        [ 0.0412],\n        [-0.2640],\n        [ 0.0755],\n        [ 0.2264],\n        [ 0.0289],\n        [ 1.6761],\n        [ 0.0142],\n        [ 0.0389],\n        [ 0.0764],\n        [-0.2994],\n        [-1.2424],\n        [-0.1979],\n        [-0.3782],\n        [ 0.1324],\n        [ 0.1815],\n        [ 0.2247],\n        [ 0.8680],\n        [ 0.0544],\n        [ 0.3073],\n        [-0.4242],\n        [-0.0367],\n        [-0.0085],\n        [-0.1441],\n        [-0.0980],\n        [-0.2353],\n        [-0.1248],\n        [-0.4888],\n        [ 0.1131],\n        [-0.1456],\n        [-3.6231],\n        [ 0.8270],\n        [ 0.0288],\n        [ 0.2760],\n        [ 0.0151],\n        [-0.0819],\n        [ 0.1460],\n        [-0.4896]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.1699586}]}, "version": 1026}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.171013}]}, "version": 1027}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1035,  0.1088,  0.2503,  ...,  0.0971, -0.0315,  0.2280],\n        [ 0.2316, -0.0267,  0.1962,  ..., -0.2436, -0.3070,  0.0642],\n        [-0.0240, -0.1160,  0.3422,  ...,  0.1790,  0.3597,  0.0205],\n        ...,\n        [ 0.0060, -0.0535,  0.2665,  ..., -0.0193, -0.0366, -0.1115],\n        [-0.1920, -0.1310,  0.1673,  ...,  0.1864,  0.2001, -0.2047],\n        [-0.2126, -0.0119,  0.0473,  ..., -0.0694,  0.0527, -0.0975]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.1734838}]}, "version": 1028}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.1745634}]}, "version": 1029}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(14.3518, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962840.1759288}]}, "version": 1030}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.176806}]}, "version": 1031}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-12.6234, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962840.178183}]}, "version": 1032}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.1791885}]}, "version": 1033}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962840.180505}]}, "version": 1034}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20550669729709625, "step": null, "ts": 1644962840.2676048}]}, "version": 1035}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0160],\n        [0.0389],\n        [0.0420],\n        [0.0631],\n        [0.0207],\n        [0.0251],\n        [0.0559],\n        [0.0269],\n        [0.0235],\n        [0.0223],\n        [0.0156],\n        [0.0439],\n        [0.0348],\n        [0.0466],\n        [0.0424],\n        [0.0317],\n        [0.0319],\n        [0.0229],\n        [0.0181],\n        [0.0163],\n        [0.0448],\n        [0.0168],\n        [0.0254],\n        [0.0598],\n        [0.0164],\n        [0.0351],\n        [0.0370],\n        [0.0313],\n        [0.0448],\n        [0.0325],\n        [0.0301],\n        [0.0169],\n        [0.0278],\n        [0.0203],\n        [0.0228],\n        [0.0292],\n        [0.0484],\n        [0.0483],\n        [0.0373],\n        [0.0327],\n        [0.0300],\n        [0.0425]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.2827723}]}, "version": 1036}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.2863922}]}, "version": 1037}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0159, 0.0217, 0.0258,  ..., 0.0162, 0.0334, 0.0385],\n        [0.0213, 0.0302, 0.0293,  ..., 0.0356, 0.0398, 0.0235],\n        [0.0212, 0.0177, 0.0061,  ..., 0.0095, 0.0184, 0.0276],\n        ...,\n        [0.0377, 0.0290, 0.0332,  ..., 0.0357, 0.0315, 0.0450],\n        [0.0286, 0.0296, 0.0220,  ..., 0.0216, 0.0296, 0.0285],\n        [0.0334, 0.0313, 0.0190,  ..., 0.0259, 0.0517, 0.0419]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.2910736}]}, "version": 1038}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.3001404}]}, "version": 1039}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1941, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962840.3013613}]}, "version": 1040}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.3023226}]}, "version": 1041}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0037, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962840.3034987}]}, "version": 1042}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.304326}]}, "version": 1043}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6094107627868652, "step": null, "ts": 1644962840.3052988}]}, "version": 1044}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.832548975944519, "step": null, "ts": 1644962840.776295}]}, "version": 1045}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.4641],\n        [ 0.3703],\n        [-0.2689],\n        [ 0.1569],\n        [ 0.6245],\n        [-0.3067],\n        [ 0.2664],\n        [ 0.0542],\n        [-0.9462],\n        [-0.0131],\n        [-0.1453],\n        [ 0.8013],\n        [ 0.0258],\n        [ 0.2009],\n        [ 0.2149],\n        [ 0.0264],\n        [-0.3406],\n        [-0.1347],\n        [-0.3164],\n        [ 0.7677],\n        [ 0.1637],\n        [ 0.0215],\n        [-3.3199],\n        [ 0.1074],\n        [ 0.1215],\n        [-0.0065],\n        [-1.5148],\n        [ 0.2447],\n        [ 0.0630],\n        [-0.3278],\n        [ 0.0485],\n        [ 0.1044],\n        [-0.1900],\n        [ 0.1664],\n        [-0.1698],\n        [ 0.2161],\n        [-0.0427],\n        [-0.5888],\n        [-0.0120],\n        [-0.0048],\n        [-0.0856],\n        [ 0.1702]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.7876306}]}, "version": 1046}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.788707}]}, "version": 1047}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 3.1558e+00, -1.2974e+00,  2.2015e+00,  ...,  6.1622e-01,\n         -1.1560e+00, -3.3014e-01],\n        [ 3.1583e-01,  3.5931e-01,  4.0771e-01,  ..., -4.4598e-02,\n          7.8999e-01,  5.3664e-01],\n        [ 6.0718e-02,  2.2394e-01,  2.8335e-01,  ..., -1.2235e-02,\n         -3.0725e-02,  2.5337e-01],\n        ...,\n        [ 3.8387e-02, -1.1795e-01,  2.0811e-03,  ...,  2.4760e-01,\n          1.1915e-01, -4.0770e-02],\n        [ 1.2189e-01,  8.3460e-02, -6.5955e-03,  ...,  1.1491e-01,\n          5.9869e-02, -3.5181e-02],\n        [-7.2794e-02,  2.4837e-02, -1.6552e-01,  ..., -8.6526e-02,\n         -6.5678e-02,  1.8353e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.791126}]}, "version": 1048}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.7939765}]}, "version": 1049}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(20.8166, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962840.7954423}]}, "version": 1050}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.7963457}]}, "version": 1051}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-18.6868, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962840.7975175}]}, "version": 1052}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.798482}]}, "version": 1053}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962840.7995594}]}, "version": 1054}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.20454518496990204, "step": null, "ts": 1644962840.8891656}]}, "version": 1055}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0203],\n        [0.0351],\n        [0.0261],\n        [0.0304],\n        [0.0315],\n        [0.0434],\n        [0.0359],\n        [0.0248],\n        [0.0353],\n        [0.0370],\n        [0.0272],\n        [0.0292],\n        [0.0379],\n        [0.0173],\n        [0.0350],\n        [0.0428],\n        [0.0316],\n        [0.0329],\n        [0.0181],\n        [0.0470],\n        [0.0207],\n        [0.0396],\n        [0.0396],\n        [0.0362],\n        [0.0267],\n        [0.0171],\n        [0.0247],\n        [0.0380],\n        [0.0172],\n        [0.0510],\n        [0.0514],\n        [0.0235],\n        [0.0593],\n        [0.0242],\n        [0.0253],\n        [0.0499],\n        [0.0417],\n        [0.0363],\n        [0.0384],\n        [0.0178],\n        [0.0224],\n        [0.0215]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.8951323}]}, "version": 1056}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.9100049}]}, "version": 1057}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962840.9134564}]}, "version": 1058}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0310, 0.0233, 0.0325,  ..., 0.0268, 0.0260, 0.0264],\n        [0.0302, 0.0299, 0.0188,  ..., 0.0257, 0.0340, 0.0279],\n        [0.0411, 0.0306, 0.0279,  ..., 0.0164, 0.0212, 0.0432],\n        ...,\n        [0.0317, 0.0256, 0.0313,  ..., 0.0161, 0.0210, 0.0427],\n        [0.0310, 0.0352, 0.0237,  ..., 0.0291, 0.0498, 0.0295],\n        [0.0308, 0.0304, 0.0105,  ..., 0.0355, 0.0244, 0.0210]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962840.915448}]}, "version": 1059}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.9191828}]}, "version": 1060}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1650, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962840.9203393}]}, "version": 1061}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.921048}]}, "version": 1062}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0044, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962840.922386}]}, "version": 1063}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962840.9230804}]}, "version": 1064}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.45393443107605, "step": null, "ts": 1644962840.9242046}]}, "version": 1065}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8785760402679443, "step": null, "ts": 1644962841.3786442}]}, "version": 1066}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.5256],\n        [-0.0616],\n        [ 0.0975],\n        [-0.9412],\n        [-7.7436],\n        [ 0.1050],\n        [-0.1166],\n        [ 0.2373],\n        [-0.1504],\n        [ 0.1900],\n        [ 0.1496],\n        [ 0.0097],\n        [-0.0229],\n        [-0.0174],\n        [-0.2391],\n        [-0.1370],\n        [-0.2682],\n        [-0.0350],\n        [ 0.0639],\n        [-0.0163],\n        [-0.1621],\n        [ 0.2409],\n        [ 0.6149],\n        [-1.0998],\n        [ 0.1290],\n        [-0.0801],\n        [-9.0674],\n        [-1.7098],\n        [-0.1774],\n        [ 0.2219],\n        [-0.1636],\n        [-0.4610],\n        [ 0.2618],\n        [ 0.0420],\n        [ 0.0721],\n        [-0.1195],\n        [ 0.1534],\n        [ 0.1550],\n        [-0.2525],\n        [-0.0323],\n        [-1.4398],\n        [ 0.3850]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962841.391013}]}, "version": 1067}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.3919106}]}, "version": 1068}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0954, -0.3615,  0.6177,  ..., -0.0064,  0.4626, -0.0557],\n        [-0.0687,  0.0322, -0.2720,  ..., -0.6968, -1.0303,  0.5318],\n        [ 0.2260,  0.0174, -0.1173,  ...,  0.0536, -0.0608,  0.2248],\n        ...,\n        [ 0.2766, -0.1032,  0.1488,  ...,  0.1601,  0.0126,  0.0286],\n        [-0.9554,  0.5818,  0.3787,  ...,  0.0074, -0.0361,  0.0122],\n        [ 0.2317,  0.0357,  0.4332,  ...,  0.4247, -0.0587, -0.5299]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962841.3943217}]}, "version": 1069}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.3950126}]}, "version": 1070}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(52.6539, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962841.3960428}]}, "version": 1071}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.3967564}]}, "version": 1072}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-58.8321, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962841.3978305}]}, "version": 1073}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.3983672}]}, "version": 1074}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962841.3991892}]}, "version": 1075}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2648724317550659, "step": null, "ts": 1644962841.4823737}]}, "version": 1076}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0268],\n        [0.0188],\n        [0.0312],\n        [0.0415],\n        [0.0404],\n        [0.0273],\n        [0.0255],\n        [0.0369],\n        [0.0240],\n        [0.0333],\n        [0.0328],\n        [0.0239],\n        [0.0272],\n        [0.0422],\n        [0.0194],\n        [0.0409],\n        [0.0339],\n        [0.0181],\n        [0.0313],\n        [0.0361],\n        [0.0335],\n        [0.0223],\n        [0.0193],\n        [0.0183],\n        [0.0641],\n        [0.0307],\n        [0.0495],\n        [0.0377],\n        [0.0378],\n        [0.0619],\n        [0.0330],\n        [0.0305],\n        [0.0315],\n        [0.0283],\n        [0.0334],\n        [0.0385],\n        [0.0288],\n        [0.0254],\n        [0.0542],\n        [0.0291],\n        [0.0374],\n        [0.0137]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962841.4973497}]}, "version": 1077}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.5009902}]}, "version": 1078}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0169, 0.0229, 0.0153,  ..., 0.0232, 0.0489, 0.0112],\n        [0.0186, 0.0763, 0.0238,  ..., 0.0120, 0.0255, 0.0328],\n        [0.0345, 0.0255, 0.0194,  ..., 0.0180, 0.0255, 0.0398],\n        ...,\n        [0.0382, 0.0339, 0.0292,  ..., 0.0161, 0.0274, 0.0231],\n        [0.0378, 0.0266, 0.0260,  ..., 0.0326, 0.0384, 0.0362],\n        [0.0176, 0.0179, 0.0153,  ..., 0.0100, 0.0232, 0.0267]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962841.5100148}]}, "version": 1079}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.5136204}]}, "version": 1080}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1573, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962841.517547}]}, "version": 1081}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.5184653}]}, "version": 1082}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0033, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962841.5197208}]}, "version": 1083}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962841.520367}]}, "version": 1084}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6291420459747314, "step": null, "ts": 1644962841.521297}]}, "version": 1085}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.1513025760650635, "step": null, "ts": 1644962842.0061173}]}, "version": 1086}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.7422e-01],\n        [-3.2853e-01],\n        [ 3.5767e-01],\n        [ 6.9712e-02],\n        [-9.6919e-02],\n        [ 4.4736e-01],\n        [ 7.1207e-04],\n        [ 2.2634e-01],\n        [ 4.9150e-01],\n        [ 1.2930e-02],\n        [ 4.7122e+00],\n        [ 3.1266e-01],\n        [ 8.3675e-02],\n        [ 1.4121e-01],\n        [-1.2568e-01],\n        [-2.3853e-01],\n        [ 3.2610e-02],\n        [ 5.0345e-02],\n        [ 1.0928e-01],\n        [-3.8578e-01],\n        [-6.0023e-01],\n        [-6.4384e-01],\n        [-9.3509e-01],\n        [ 2.5093e-01],\n        [ 1.0302e-01],\n        [-1.4049e+00],\n        [ 4.5913e-01],\n        [ 3.6870e-01],\n        [-4.5718e-03],\n        [ 3.0154e-01],\n        [-7.5886e-01],\n        [-2.4734e-01],\n        [ 1.1519e-01],\n        [ 1.2591e-01],\n        [-4.9591e-03],\n        [ 6.5452e-02],\n        [-5.6404e-02],\n        [-8.4085e-02],\n        [-8.0430e-01],\n        [-1.0770e-01],\n        [-2.1649e-01],\n        [ 6.2307e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962842.0140557}]}, "version": 1087}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.015015}]}, "version": 1088}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.3550, -0.0894,  0.4067,  ...,  0.1563, -0.1397, -0.0549],\n        [ 0.0248, -0.0343,  0.2725,  ...,  0.1074,  0.5234, -0.0621],\n        [ 0.4912, -0.6190,  0.8057,  ...,  0.9229,  0.1502, -0.2637],\n        ...,\n        [-0.1387,  0.2489,  0.0724,  ...,  0.3185,  0.1537,  0.3149],\n        [ 0.2485, -0.0196,  0.1181,  ...,  0.3566,  0.1184, -0.0266],\n        [ 1.0323,  1.2721,  0.2981,  ...,  0.9113, -0.8245, -0.6337]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.0174668}]}, "version": 1089}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.0184224}]}, "version": 1090}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(6.0355, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962842.0196428}]}, "version": 1091}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.0206022}]}, "version": 1092}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-5.0004, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962842.0217447}]}, "version": 1093}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.0222807}]}, "version": 1094}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962842.023276}]}, "version": 1095}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27503037452697754, "step": null, "ts": 1644962842.1187088}]}, "version": 1096}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0295],\n        [0.0383],\n        [0.0231],\n        [0.0379],\n        [0.0218],\n        [0.0336],\n        [0.0249],\n        [0.0289],\n        [0.0455],\n        [0.0422],\n        [0.0300],\n        [0.0344],\n        [0.0331],\n        [0.0332],\n        [0.0308],\n        [0.0427],\n        [0.0386],\n        [0.0399],\n        [0.0262],\n        [0.0346],\n        [0.0226],\n        [0.0347],\n        [0.0248],\n        [0.0242],\n        [0.0287],\n        [0.0204],\n        [0.0218],\n        [0.0263],\n        [0.0330],\n        [0.0296],\n        [0.0371],\n        [0.0214],\n        [0.0271],\n        [0.0407],\n        [0.0265],\n        [0.0179],\n        [0.0499],\n        [0.0356],\n        [0.0462],\n        [0.0180],\n        [0.0250],\n        [0.0291]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.1310422}]}, "version": 1097}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.137306}]}, "version": 1098}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0320, 0.0374, 0.0180,  ..., 0.0215, 0.0270, 0.0437],\n        [0.0385, 0.0351, 0.0187,  ..., 0.0340, 0.0158, 0.0286],\n        [0.0421, 0.0366, 0.0384,  ..., 0.0262, 0.0286, 0.0438],\n        ...,\n        [0.0342, 0.0359, 0.0300,  ..., 0.0245, 0.0244, 0.0417],\n        [0.0279, 0.0296, 0.0218,  ..., 0.0285, 0.0416, 0.0334],\n        [0.0266, 0.0196, 0.0220,  ..., 0.0162, 0.0276, 0.0298]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.1395245}]}, "version": 1099}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.14272}]}, "version": 1100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1737, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962842.14654}]}, "version": 1101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.1472356}]}, "version": 1102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0041, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962842.1483495}]}, "version": 1103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.1492186}]}, "version": 1104}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.56889271736145, "step": null, "ts": 1644962842.150458}]}, "version": 1105}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7999627590179443, "step": null, "ts": 1644962842.5835333}]}, "version": 1106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.2045e-02],\n        [-1.4977e-01],\n        [ 2.8180e-01],\n        [ 1.4336e+00],\n        [ 5.5169e-02],\n        [-4.0085e-02],\n        [-7.7126e-02],\n        [-3.1064e-01],\n        [ 2.1173e-01],\n        [ 7.5991e-02],\n        [-6.0576e-01],\n        [-1.3334e-01],\n        [ 6.6438e-02],\n        [-8.9189e-02],\n        [ 9.8003e-03],\n        [ 6.7945e-01],\n        [ 2.1635e-01],\n        [ 3.0456e+00],\n        [ 1.7936e-01],\n        [ 2.9301e-01],\n        [-1.4514e-01],\n        [-1.3110e-01],\n        [-1.7343e-01],\n        [ 1.6238e+00],\n        [ 1.2578e-02],\n        [ 2.6710e-01],\n        [ 4.1001e-02],\n        [ 3.0927e-02],\n        [ 3.1840e-01],\n        [-1.3917e+01],\n        [-5.3587e-01],\n        [ 2.9457e-01],\n        [ 3.7561e+00],\n        [ 1.2081e-01],\n        [-4.0088e-02],\n        [ 3.0910e-01],\n        [-7.5164e-02],\n        [-2.9962e-02],\n        [ 1.6464e-01],\n        [-1.5416e-01],\n        [-6.4310e-02],\n        [ 4.9541e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962842.595856}]}, "version": 1107}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.6034327}]}, "version": 1108}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1282, -0.0815, -0.1029,  ..., -0.0717, -0.0509,  0.0194],\n        [ 0.0191, -0.1637,  0.3606,  ...,  0.2155, -0.1173, -0.1082],\n        [ 0.6395, -0.0422, -0.3162,  ..., -0.1932, -0.1235,  0.2278],\n        ...,\n        [-0.0991,  0.0410,  0.1153,  ...,  0.2571,  0.1105, -0.0695],\n        [ 0.0139,  0.2817,  0.3367,  ...,  0.0901,  0.0497, -0.1205],\n        [-4.6872, -0.7089,  4.3492,  ...,  5.7557,  1.3317,  1.3262]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.6087108}]}, "version": 1109}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.6095548}]}, "version": 1110}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(5.7557, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962842.6106472}]}, "version": 1111}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.611381}]}, "version": 1112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-6.0513, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962842.6124845}]}, "version": 1113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.6132126}]}, "version": 1114}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962842.6142023}]}, "version": 1115}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2779468297958374, "step": null, "ts": 1644962842.7092874}]}, "version": 1116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0286],\n        [0.0339],\n        [0.0343],\n        [0.0565],\n        [0.0249],\n        [0.0323],\n        [0.0324],\n        [0.0197],\n        [0.0534],\n        [0.0318],\n        [0.0221],\n        [0.0263],\n        [0.0308],\n        [0.0266],\n        [0.0378],\n        [0.0354],\n        [0.0213],\n        [0.0339],\n        [0.0293],\n        [0.0344],\n        [0.0199],\n        [0.0409],\n        [0.0423],\n        [0.0403],\n        [0.0569],\n        [0.0261],\n        [0.0317],\n        [0.0421],\n        [0.0425],\n        [0.0161],\n        [0.0247],\n        [0.0301],\n        [0.0272],\n        [0.0514],\n        [0.0251],\n        [0.0211],\n        [0.0222],\n        [0.0341],\n        [0.0237],\n        [0.0238],\n        [0.0257],\n        [0.0271]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.7222555}]}, "version": 1117}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.7256424}]}, "version": 1118}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0325, 0.0256, 0.0248,  ..., 0.0263, 0.0359, 0.0398],\n        [0.0337, 0.0252, 0.0216,  ..., 0.0208, 0.0243, 0.0283],\n        [0.0327, 0.0273, 0.0155,  ..., 0.0160, 0.0155, 0.0512],\n        ...,\n        [0.0343, 0.0246, 0.0230,  ..., 0.0280, 0.0368, 0.0258],\n        [0.0325, 0.0207, 0.0185,  ..., 0.0077, 0.0072, 0.0397],\n        [0.0300, 0.0358, 0.0151,  ..., 0.0257, 0.0230, 0.0360]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962842.730784}]}, "version": 1119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.7341082}]}, "version": 1120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1217, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962842.738093}]}, "version": 1121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.7389388}]}, "version": 1122}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0071, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962842.7403405}]}, "version": 1123}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.7409515}]}, "version": 1124}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6594724655151367, "step": null, "ts": 1644962842.7420797}]}, "version": 1125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.587 (0.587)\tDT 0.000 (0.000)\tS@1 92.857 (92.857)\tLoss nan (nan)", "step": null, "ts": 1644962842.9851837}]}, "version": 1126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962842.9861064}]}, "version": 1127}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8045385479927063, "step": null, "ts": 1644962843.189926}]}, "version": 1128}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.5727e-01],\n        [ 6.1092e-01],\n        [-3.2489e+00],\n        [-2.6635e-01],\n        [-4.5123e-02],\n        [ 1.9125e-01],\n        [-6.9617e-02],\n        [ 3.0060e-01],\n        [ 1.6732e-01],\n        [-5.9887e-02],\n        [ 1.2293e-01],\n        [-4.3870e-01],\n        [ 7.0431e-02],\n        [ 1.0481e-01],\n        [ 1.7690e-01],\n        [ 1.9776e+00],\n        [ 1.5893e-01],\n        [ 1.6630e-01],\n        [-1.5949e-02],\n        [ 7.4427e+00],\n        [ 1.2483e-01],\n        [-8.4871e-02],\n        [ 2.3183e-01],\n        [ 8.5065e-02],\n        [ 1.0703e-01],\n        [-1.3668e-01],\n        [-3.0603e-03],\n        [ 2.3843e-01],\n        [ 1.1516e+00],\n        [ 2.5939e-01],\n        [ 4.8858e-02],\n        [-3.1999e-01],\n        [-4.7152e-01],\n        [ 2.6866e+00],\n        [-1.2122e+00],\n        [ 2.7830e-03],\n        [ 2.9277e-01],\n        [-7.2922e-02],\n        [-2.5675e-01],\n        [ 7.3874e-02],\n        [ 8.5605e-02],\n        [-2.9283e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962843.201106}]}, "version": 1129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.2102962}]}, "version": 1130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0110, -0.0909, -0.3306,  ..., -0.0488, -0.1800,  0.0722],\n        [ 0.5880, -0.3712,  2.4442,  ...,  3.4207, -0.3349, -3.4649],\n        [-0.5573, -0.0843, -0.9337,  ..., -0.7071, -0.0628,  0.3085],\n        ...,\n        [-0.4959,  0.2510,  0.2452,  ...,  0.5863,  0.3117,  0.4269],\n        [-0.2148,  0.1730,  0.3514,  ...,  0.1919, -0.3792, -0.0578],\n        [ 0.2381,  0.2654,  0.2317,  ..., -0.5899, -0.3285,  0.5585]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.2124233}]}, "version": 1131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.2205458}]}, "version": 1132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(29.2222, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962843.2216444}]}, "version": 1133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.2225394}]}, "version": 1134}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-32.9966, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962843.2237325}]}, "version": 1135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.2243252}]}, "version": 1136}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962843.2252603}]}, "version": 1137}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.4009731113910675, "step": null, "ts": 1644962843.3085244}]}, "version": 1138}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0586],\n        [0.0457],\n        [0.0314],\n        [0.0320],\n        [0.0368],\n        [0.0289],\n        [0.0135],\n        [0.0399],\n        [0.0260],\n        [0.0303],\n        [0.0330],\n        [0.0324],\n        [0.0530],\n        [0.0536],\n        [0.0365],\n        [0.0315],\n        [0.0119],\n        [0.0335],\n        [0.0360],\n        [0.0171],\n        [0.0330],\n        [0.0307],\n        [0.0465],\n        [0.0329],\n        [0.0569],\n        [0.0394],\n        [0.0387],\n        [0.0408],\n        [0.0082],\n        [0.0287],\n        [0.0144],\n        [0.0359],\n        [0.0280],\n        [0.0402],\n        [0.0247],\n        [0.0407],\n        [0.0139],\n        [0.0311],\n        [0.0296],\n        [0.0318],\n        [0.0443],\n        [0.0342]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.320863}]}, "version": 1139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.3241024}]}, "version": 1140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0253, 0.0307, 0.0175,  ..., 0.0307, 0.0290, 0.0290],\n        [0.0366, 0.0321, 0.0179,  ..., 0.0268, 0.0261, 0.0287],\n        [0.0269, 0.0331, 0.0235,  ..., 0.0264, 0.0369, 0.0344],\n        ...,\n        [0.0298, 0.0324, 0.0361,  ..., 0.0288, 0.0314, 0.0340],\n        [0.0327, 0.0308, 0.0194,  ..., 0.0200, 0.0323, 0.0298],\n        [0.0296, 0.0289, 0.0202,  ..., 0.0242, 0.0349, 0.0338]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.3287668}]}, "version": 1141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.3377123}]}, "version": 1142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1804, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962843.3416266}]}, "version": 1143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.3421848}]}, "version": 1144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0022, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962843.3432202}]}, "version": 1145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.3437867}]}, "version": 1146}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4750099182128906, "step": null, "ts": 1644962843.3446395}]}, "version": 1147}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8842369318008423, "step": null, "ts": 1644962843.795927}]}, "version": 1148}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.3817e+00],\n        [-6.4556e-02],\n        [-8.0352e-01],\n        [-4.8474e-02],\n        [ 6.1346e-02],\n        [ 1.7931e-01],\n        [ 1.7217e-01],\n        [ 5.9391e-01],\n        [ 4.1684e-02],\n        [ 3.9413e-02],\n        [-3.1902e-01],\n        [ 6.5170e+00],\n        [ 9.7994e-02],\n        [-8.2976e-01],\n        [ 1.1366e-01],\n        [-4.0983e-02],\n        [-2.1738e+00],\n        [-1.0909e-01],\n        [-1.7816e-02],\n        [ 4.5945e-02],\n        [ 6.7738e-01],\n        [ 1.4336e-03],\n        [-3.0555e-01],\n        [-2.8848e-01],\n        [ 4.8126e-02],\n        [-2.4394e-01],\n        [ 1.9144e-01],\n        [ 9.4322e-02],\n        [-1.0601e-02],\n        [ 2.5691e-01],\n        [ 4.1408e-02],\n        [-2.7382e-01],\n        [-4.3409e-01],\n        [ 5.7992e-02],\n        [-1.9548e-01],\n        [-2.0079e-01],\n        [-1.0134e+00],\n        [-2.0188e-01],\n        [-2.5912e+00],\n        [ 2.1277e+00],\n        [-4.1958e-02],\n        [-3.3489e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962843.8087277}]}, "version": 1149}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.8120887}]}, "version": 1150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.5885, -0.2055, -0.1525,  ..., -0.4981, -0.2676,  0.0250],\n        [ 0.2169,  0.1352, -0.2140,  ...,  0.1647, -0.0892,  0.0808],\n        [ 0.5212, -0.6799, -0.1568,  ..., -0.2774,  0.7254,  0.7133],\n        ...,\n        [ 2.2779, -0.6260, -1.0876,  ..., -0.5984,  1.0198,  1.0751],\n        [ 0.0782, -0.0036,  0.1482,  ...,  0.3213,  0.0860,  0.0120],\n        [-0.1676, -0.0412, -0.2196,  ..., -0.1355,  0.1308,  0.1345]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.814527}]}, "version": 1151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.8154056}]}, "version": 1152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(7.2641, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962843.8168263}]}, "version": 1153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.8177772}]}, "version": 1154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-7.1909, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962843.819424}]}, "version": 1155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.8202076}]}, "version": 1156}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962843.8212633}]}, "version": 1157}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3231256306171417, "step": null, "ts": 1644962843.9122255}]}, "version": 1158}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0227],\n        [0.0281],\n        [0.0501],\n        [0.0364],\n        [0.0319],\n        [0.0366],\n        [0.0264],\n        [0.0273],\n        [0.0370],\n        [0.0107],\n        [0.0164],\n        [0.0432],\n        [0.0396],\n        [0.0321],\n        [0.0267],\n        [0.0470],\n        [0.0393],\n        [0.0265],\n        [0.0257],\n        [0.0292],\n        [0.0386],\n        [0.0309],\n        [0.0430],\n        [0.0352],\n        [0.0378],\n        [0.0317],\n        [0.0352],\n        [0.0314],\n        [0.0228],\n        [0.0261],\n        [0.0330],\n        [0.0510],\n        [0.0102],\n        [0.0356],\n        [0.0319],\n        [0.0245],\n        [0.0598],\n        [0.0332],\n        [0.0241],\n        [0.0422],\n        [0.0388],\n        [0.0487]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.9184098}]}, "version": 1159}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.9280028}]}, "version": 1160}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0373, 0.0234, 0.0124,  ..., 0.0086, 0.0176, 0.0369],\n        [0.0372, 0.0315, 0.0198,  ..., 0.0370, 0.0335, 0.0399],\n        [0.0201, 0.0360, 0.0292,  ..., 0.0292, 0.0218, 0.0279],\n        ...,\n        [0.0365, 0.0276, 0.0282,  ..., 0.0243, 0.0365, 0.0432],\n        [0.0332, 0.0278, 0.0310,  ..., 0.0284, 0.0263, 0.0248],\n        [0.0207, 0.0329, 0.0306,  ..., 0.0331, 0.0213, 0.0330]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962843.9329998}]}, "version": 1161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.9364667}]}, "version": 1162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1826, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962843.9376285}]}, "version": 1163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.9408734}]}, "version": 1164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0023, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962843.9421432}]}, "version": 1165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962843.943098}]}, "version": 1166}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6147265434265137, "step": null, "ts": 1644962843.9441357}]}, "version": 1167}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.5883556008338928, "step": null, "ts": 1644962844.400262}]}, "version": 1168}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0284],\n        [-0.3902],\n        [ 0.1363],\n        [-0.0381],\n        [ 0.5031],\n        [ 0.2948],\n        [-0.0214],\n        [ 1.0382],\n        [ 0.0481],\n        [-0.0369],\n        [-0.2010],\n        [-0.1419],\n        [ 0.1013],\n        [-0.0053],\n        [-0.1553],\n        [-0.0600],\n        [ 0.2708],\n        [ 0.4890],\n        [-0.0116],\n        [-0.0093],\n        [-0.8880],\n        [-0.0390],\n        [-0.3967],\n        [-0.0560],\n        [-0.6533],\n        [ 0.0725],\n        [-1.1584],\n        [ 0.4507],\n        [ 1.4118],\n        [ 0.2156],\n        [-0.1262],\n        [-0.2229],\n        [-0.6963],\n        [ 0.0959],\n        [ 0.3930],\n        [-0.1184],\n        [-0.0504],\n        [-0.1508],\n        [-0.0166],\n        [-0.0784],\n        [ 0.0682],\n        [ 0.0796]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962844.4039276}]}, "version": 1169}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.4049995}]}, "version": 1170}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0810,  0.0511, -0.0104,  ...,  0.1572,  0.1264, -0.0062],\n        [-0.3738, -0.0183,  1.3367,  ...,  0.8491,  0.1864,  0.1141],\n        [-0.2733, -0.1451,  0.4186,  ...,  0.0234,  0.0080,  0.2229],\n        ...,\n        [ 0.0291,  0.0629,  0.1205,  ...,  0.0698, -0.0091,  0.0215],\n        [ 0.2633,  0.0875, -0.0256,  ..., -0.0389, -0.1463, -0.2826],\n        [-0.0161,  0.1922,  0.0510,  ...,  0.0351,  0.2140,  0.0540]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962844.4074388}]}, "version": 1171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.4084165}]}, "version": 1172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(68.0610, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962844.4097219}]}, "version": 1173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.4105995}]}, "version": 1174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-88.3259, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962844.4116952}]}, "version": 1175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.4124212}]}, "version": 1176}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962844.413423}]}, "version": 1177}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3946789503097534, "step": null, "ts": 1644962844.5060098}]}, "version": 1178}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0530],\n        [0.0245],\n        [0.0297],\n        [0.0293],\n        [0.0219],\n        [0.0335],\n        [0.0309],\n        [0.0400],\n        [0.0329],\n        [0.0298],\n        [0.0282],\n        [0.0245],\n        [0.0291],\n        [0.0293],\n        [0.0343],\n        [0.0134],\n        [0.0394],\n        [0.0363],\n        [0.0253],\n        [0.0322],\n        [0.0365],\n        [0.0353],\n        [0.0342],\n        [0.0163],\n        [0.0324],\n        [0.0318],\n        [0.0362],\n        [0.0274],\n        [0.0424],\n        [0.0371],\n        [0.0339],\n        [0.0372],\n        [0.0358],\n        [0.0300],\n        [0.0213],\n        [0.0328],\n        [0.0389],\n        [0.0671],\n        [0.0292],\n        [0.0307],\n        [0.0106],\n        [0.0347]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962844.515178}]}, "version": 1179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.521678}]}, "version": 1180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0105, 0.0317, 0.0127,  ..., 0.0241, 0.0305, 0.0268],\n        [0.0347, 0.0260, 0.0256,  ..., 0.0228, 0.0414, 0.0286],\n        [0.0263, 0.0270, 0.0240,  ..., 0.0275, 0.0263, 0.0442],\n        ...,\n        [0.0358, 0.0395, 0.0197,  ..., 0.0350, 0.0379, 0.0501],\n        [0.0283, 0.0217, 0.0152,  ..., 0.0190, 0.0198, 0.0449],\n        [0.0696, 0.0449, 0.0126,  ..., 0.0198, 0.0164, 0.0285]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962844.527075}]}, "version": 1181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.5279908}]}, "version": 1182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1374, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962844.5295491}]}, "version": 1183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.5305364}]}, "version": 1184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0039, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962844.5319877}]}, "version": 1185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962844.5329237}]}, "version": 1186}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5962235927581787, "step": null, "ts": 1644962844.5340858}]}, "version": 1187}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6319329738616943, "step": null, "ts": 1644962845.2436583}]}, "version": 1188}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.6968e+01],\n        [-5.4212e-02],\n        [ 2.3051e-01],\n        [ 1.1084e-01],\n        [ 1.6214e+00],\n        [ 8.2367e-01],\n        [-3.5801e-01],\n        [-1.6160e-01],\n        [-9.3872e-02],\n        [-1.4533e+00],\n        [-2.6485e-02],\n        [-1.4321e-01],\n        [ 8.4308e-03],\n        [ 1.7362e-01],\n        [-4.9562e-01],\n        [-3.2536e-01],\n        [-7.9097e-02],\n        [ 5.8852e-01],\n        [ 1.5656e-01],\n        [ 1.1726e+00],\n        [ 1.0153e-01],\n        [ 7.8846e-02],\n        [ 8.1845e-02],\n        [ 1.0055e-02],\n        [-4.0552e-02],\n        [ 1.0839e-01],\n        [-7.4601e-02],\n        [ 1.4659e-01],\n        [-5.7793e-01],\n        [ 1.6497e-01],\n        [ 8.6053e-03],\n        [-1.6477e-01],\n        [-4.2434e-02],\n        [-8.7600e-02],\n        [ 2.3349e-01],\n        [ 4.3073e-02],\n        [ 3.5541e-01],\n        [-2.2899e-03],\n        [ 7.7189e-03],\n        [-1.2339e-01],\n        [-2.7864e-01],\n        [ 4.6813e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962845.252957}]}, "version": 1189}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.2604718}]}, "version": 1190}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.2745e-01, -8.8606e-01,  7.9413e-01,  ...,  1.1337e+00,\n         -1.4222e-01,  6.0419e-01],\n        [ 1.4173e-02,  1.0159e-01, -1.5058e-02,  ...,  2.4072e-01,\n          1.9285e-01, -5.1482e-02],\n        [-9.6785e-02, -3.5892e-01, -2.3621e-01,  ..., -4.3415e-01,\n         -1.7111e-01,  2.8316e-01],\n        ...,\n        [ 5.3526e-01,  1.7515e-01, -4.2516e-01,  ..., -3.6841e-01,\n         -4.0918e-01,  4.8951e-01],\n        [ 2.3452e-01, -5.9576e-04,  1.9912e-01,  ...,  1.1274e-01,\n          1.1071e-01,  1.3561e-01],\n        [-1.3187e+00,  1.1742e+00,  1.8445e+00,  ...,  1.9115e+00,\n          1.7306e+00, -8.2896e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.2629712}]}, "version": 1191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.2639408}]}, "version": 1192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(8.4347, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962845.2654529}]}, "version": 1193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.2663796}]}, "version": 1194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-7.8062, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962845.2675908}]}, "version": 1195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.2685218}]}, "version": 1196}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962845.2695131}]}, "version": 1197}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962845.340192}]}, "version": 1198}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.020942687988281, "step": null, "ts": 1644962845.340192}]}, "version": 1199}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 79.0, "step": null, "ts": 1644962845.340192}]}, "version": 1200}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.3995361328125, "step": null, "ts": 1644962845.340192}]}, "version": 1201}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.28008219599723816, "step": null, "ts": 1644962845.3704019}]}, "version": 1202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0337],\n        [0.0395],\n        [0.0701],\n        [0.0418],\n        [0.0362],\n        [0.0291],\n        [0.0261],\n        [0.0291],\n        [0.0463],\n        [0.0305],\n        [0.0262],\n        [0.0259],\n        [0.0361],\n        [0.0281],\n        [0.0344],\n        [0.0245],\n        [0.0175],\n        [0.0343],\n        [0.0392],\n        [0.0495],\n        [0.0231],\n        [0.0403],\n        [0.0328],\n        [0.0242],\n        [0.0398],\n        [0.0197],\n        [0.0319],\n        [0.0275],\n        [0.0192],\n        [0.0209],\n        [0.0437],\n        [0.0305],\n        [0.0251],\n        [0.0250],\n        [0.0266],\n        [0.0171],\n        [0.0521],\n        [0.0215],\n        [0.0284],\n        [0.0135],\n        [0.0273],\n        [0.0314]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.3829448}]}, "version": 1203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.3946798}]}, "version": 1204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0269, 0.0268, 0.0235,  ..., 0.0167, 0.0237, 0.0342],\n        [0.0217, 0.0166, 0.0238,  ..., 0.0160, 0.0401, 0.0180],\n        [0.0239, 0.0229, 0.0078,  ..., 0.0231, 0.0261, 0.0340],\n        ...,\n        [0.0216, 0.0232, 0.0428,  ..., 0.0137, 0.0214, 0.0383],\n        [0.0332, 0.0279, 0.0274,  ..., 0.0176, 0.0199, 0.0362],\n        [0.0299, 0.0253, 0.0193,  ..., 0.0198, 0.0305, 0.0341]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.399728}]}, "version": 1205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.4033382}]}, "version": 1206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2363, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962845.404806}]}, "version": 1207}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.4057593}]}, "version": 1208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0029, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962845.4068565}]}, "version": 1209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.4077077}]}, "version": 1210}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.597755193710327, "step": null, "ts": 1644962845.408636}]}, "version": 1211}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7197707295417786, "step": null, "ts": 1644962845.8328183}]}, "version": 1212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.2322],\n        [ 0.1548],\n        [ 0.1685],\n        [ 0.0667],\n        [-0.4414],\n        [-0.2485],\n        [-0.1195],\n        [-0.1917],\n        [ 0.0484],\n        [-0.0688],\n        [-0.0721],\n        [ 0.0492],\n        [ 0.0566],\n        [-0.0821],\n        [ 0.0767],\n        [-0.0717],\n        [ 0.1869],\n        [ 0.3678],\n        [-0.2733],\n        [ 0.6874],\n        [-0.2920],\n        [ 0.0120],\n        [ 0.2261],\n        [-0.1269],\n        [ 0.3065],\n        [-0.1222],\n        [ 0.0108],\n        [-0.0762],\n        [-1.5284],\n        [ 1.0891],\n        [ 0.0512],\n        [-0.1661],\n        [-0.0865],\n        [ 0.2348],\n        [-0.3397],\n        [ 0.5743],\n        [-0.2928],\n        [ 0.0302],\n        [-0.0227],\n        [ 0.6278],\n        [-1.0091],\n        [-0.6714]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.8435981}]}, "version": 1213}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.848421}]}, "version": 1214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0978, -0.2905,  0.0545,  ...,  0.1057,  0.3430, -0.1625],\n        [-0.1092,  0.2119,  0.1034,  ...,  0.3374,  0.1044, -0.0121],\n        [ 0.8282, -0.0297, -0.3889,  ..., -0.9476, -0.7404,  0.2897],\n        ...,\n        [-1.3012,  0.9305,  1.8468,  ...,  1.6418,  0.5955, -1.4791],\n        [-0.0219, -0.3378, -0.9701,  ..., -0.7939, -0.4436, -0.1677],\n        [-0.3236, -0.2458,  0.2865,  ..., -0.2210,  0.0054,  0.0267]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.8506637}]}, "version": 1215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.8516984}]}, "version": 1216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(27.3912, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962845.8529696}]}, "version": 1217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.8539443}]}, "version": 1218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-49.5785, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962845.8553908}]}, "version": 1219}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.8563106}]}, "version": 1220}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962845.8573997}]}, "version": 1221}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.25423240661621094, "step": null, "ts": 1644962845.9444468}]}, "version": 1222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0288],\n        [0.0232],\n        [0.0293],\n        [0.0198],\n        [0.0338],\n        [0.0152],\n        [0.0313],\n        [0.0334],\n        [0.0571],\n        [0.0284],\n        [0.0260],\n        [0.0414],\n        [0.0326],\n        [0.0134],\n        [0.0403],\n        [0.0553],\n        [0.0326],\n        [0.0198],\n        [0.0521],\n        [0.0432],\n        [0.0289],\n        [0.0444],\n        [0.0342],\n        [0.0193],\n        [0.0341],\n        [0.0353],\n        [0.0333],\n        [0.0179],\n        [0.0220],\n        [0.0179],\n        [0.0562],\n        [0.0335],\n        [0.0279],\n        [0.0206],\n        [0.0356],\n        [0.0355],\n        [0.0323],\n        [0.0425],\n        [0.0448],\n        [0.0253],\n        [0.0250],\n        [0.0381]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.9563448}]}, "version": 1223}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.965952}]}, "version": 1224}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0317, 0.0261, 0.0179,  ..., 0.0237, 0.0305, 0.0320],\n        [0.0191, 0.0277, 0.0185,  ..., 0.0101, 0.0195, 0.0176],\n        [0.0262, 0.0281, 0.0181,  ..., 0.0214, 0.0370, 0.0330],\n        ...,\n        [0.0416, 0.0168, 0.0207,  ..., 0.0167, 0.0218, 0.0443],\n        [0.0240, 0.0213, 0.0170,  ..., 0.0069, 0.0157, 0.0506],\n        [0.0285, 0.0413, 0.0134,  ..., 0.0159, 0.0138, 0.0609]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962845.9763994}]}, "version": 1225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.9800892}]}, "version": 1226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1415, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962845.9813867}]}, "version": 1227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.9821908}]}, "version": 1228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0057, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962845.9834316}]}, "version": 1229}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962845.9844885}]}, "version": 1230}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5951476097106934, "step": null, "ts": 1644962845.9854457}]}, "version": 1231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962846.325372}]}, "version": 1232}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8343167901039124, "step": null, "ts": 1644962846.4450126}]}, "version": 1233}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.7275e-01],\n        [ 7.9232e-02],\n        [-7.1116e-02],\n        [ 9.1575e-01],\n        [-9.5469e-02],\n        [-1.7027e-01],\n        [ 2.2437e-01],\n        [ 6.1633e-03],\n        [-4.2777e-01],\n        [ 2.3615e-01],\n        [ 9.1334e-02],\n        [ 7.4257e-02],\n        [-5.9188e-01],\n        [ 3.6460e-02],\n        [ 2.7809e-01],\n        [-8.4035e-01],\n        [ 6.0798e-01],\n        [ 1.3779e-02],\n        [-1.3134e-01],\n        [ 2.6905e-01],\n        [ 8.8344e-02],\n        [-7.5830e-02],\n        [-2.9183e-01],\n        [-1.2873e-01],\n        [ 2.5651e-01],\n        [-2.9510e+01],\n        [-7.0631e-02],\n        [ 3.8639e-01],\n        [-3.9222e-02],\n        [ 7.5296e-01],\n        [ 1.8220e-01],\n        [ 5.0873e-01],\n        [-9.4568e-01],\n        [-4.3980e-03],\n        [ 2.3495e-01],\n        [-5.5743e-02],\n        [-3.2959e-01],\n        [ 1.0970e-01],\n        [-1.1115e-01],\n        [-1.1807e-02],\n        [ 3.8076e-02],\n        [ 3.8704e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962846.4583554}]}, "version": 1234}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.4591744}]}, "version": 1235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0079,  0.0262,  0.1392,  ...,  0.0968,  0.1861, -0.0372],\n        [-0.0029, -0.1126,  0.0669,  ..., -0.4185, -0.2087,  0.2334],\n        [ 0.0754,  0.0080,  0.1210,  ...,  0.2726,  0.0576,  0.0262],\n        ...,\n        [ 0.0837,  0.1118,  0.1821,  ...,  0.0561,  0.0168,  0.0438],\n        [-0.0808,  0.0799,  0.1515,  ...,  0.4140,  0.0249,  0.1035],\n        [ 0.1450, -0.0028,  0.2953,  ...,  0.3730,  0.2394, -0.2568]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962846.4615211}]}, "version": 1236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.4624164}]}, "version": 1237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(32.7654, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962846.4634933}]}, "version": 1238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.4641812}]}, "version": 1239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-27.4879, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962846.4654863}]}, "version": 1240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.466189}]}, "version": 1241}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962846.4671671}]}, "version": 1242}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.1704740822315216, "step": null, "ts": 1644962846.5610132}]}, "version": 1243}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0226],\n        [0.0259],\n        [0.0313],\n        [0.0336],\n        [0.0274],\n        [0.0337],\n        [0.0608],\n        [0.0231],\n        [0.0272],\n        [0.0500],\n        [0.0440],\n        [0.0151],\n        [0.0456],\n        [0.0304],\n        [0.0315],\n        [0.0194],\n        [0.0219],\n        [0.0216],\n        [0.0446],\n        [0.0170],\n        [0.0439],\n        [0.0247],\n        [0.0280],\n        [0.0221],\n        [0.0311],\n        [0.0251],\n        [0.0230],\n        [0.0331],\n        [0.0293],\n        [0.0413],\n        [0.0486],\n        [0.0485],\n        [0.0315],\n        [0.0346],\n        [0.0276],\n        [0.0230],\n        [0.0269],\n        [0.0528],\n        [0.0373],\n        [0.0327],\n        [0.0335],\n        [0.0256]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962846.577437}]}, "version": 1244}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.5810368}]}, "version": 1245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0254, 0.0336, 0.0302,  ..., 0.0165, 0.0160, 0.0733],\n        [0.0287, 0.0379, 0.0235,  ..., 0.0380, 0.0406, 0.0277],\n        [0.0310, 0.0221, 0.0206,  ..., 0.0353, 0.0340, 0.0284],\n        ...,\n        [0.0344, 0.0324, 0.0219,  ..., 0.0153, 0.0169, 0.0453],\n        [0.0363, 0.0130, 0.0202,  ..., 0.0198, 0.0196, 0.0314],\n        [0.0424, 0.0352, 0.0253,  ..., 0.0275, 0.0375, 0.0308]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962846.5833406}]}, "version": 1246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.5908182}]}, "version": 1247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1255, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962846.5947936}]}, "version": 1248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.5954044}]}, "version": 1249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0042, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962846.5965676}]}, "version": 1250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962846.597371}]}, "version": 1251}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.7137718200683594, "step": null, "ts": 1644962846.59844}]}, "version": 1252}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8749030232429504, "step": null, "ts": 1644962847.0466146}]}, "version": 1253}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ -0.1563],\n        [ -0.4127],\n        [ -1.3726],\n        [ -0.0704],\n        [  0.0985],\n        [  0.0776],\n        [  0.2408],\n        [ -0.0516],\n        [ -0.3699],\n        [ -0.2166],\n        [ -0.1897],\n        [  0.3816],\n        [ -0.0215],\n        [  0.0620],\n        [ -1.1446],\n        [  0.0382],\n        [ -0.1153],\n        [  0.4453],\n        [ -0.0503],\n        [ -0.2610],\n        [  0.0139],\n        [ -0.2260],\n        [ -0.4078],\n        [  0.0683],\n        [ -0.0243],\n        [ -1.3229],\n        [-13.2129],\n        [ -0.6983],\n        [ -0.0140],\n        [  0.3395],\n        [  0.0386],\n        [  0.6461],\n        [ -0.0161],\n        [  0.3664],\n        [ -0.1081],\n        [  0.0298],\n        [ -0.3001],\n        [  1.1490],\n        [ -0.0193],\n        [ -0.0798],\n        [ -0.4151],\n        [ -0.0382]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.0557995}]}, "version": 1254}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.056791}]}, "version": 1255}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.2489e-02, -4.4925e-02,  1.2712e-01,  ...,  2.8403e-02,\n          1.5846e-01, -3.0577e-03],\n        [ 6.2940e-02, -4.7378e-02,  1.0545e+00,  ...,  9.9387e-01,\n         -2.0555e-01, -5.4349e-01],\n        [ 1.1019e-01, -1.0272e-01, -5.0633e-01,  ..., -7.7193e-01,\n         -9.4109e-02,  6.5241e-01],\n        ...,\n        [ 2.2068e+00,  2.1751e+00, -2.5912e+00,  ..., -4.7034e+00,\n         -3.8644e+00,  6.2463e-01],\n        [-3.9180e-01, -4.6240e-02,  1.5551e-01,  ...,  9.1400e-02,\n          3.5548e-01,  2.5340e-03],\n        [-1.7566e-02,  2.1555e-02,  1.4475e-01,  ...,  1.0317e-01,\n          1.1584e-01,  7.3064e-03]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.0592966}]}, "version": 1256}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.0602574}]}, "version": 1257}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(18.2521, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962847.0617232}]}, "version": 1258}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.062658}]}, "version": 1259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-15.9461, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962847.063883}]}, "version": 1260}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.0648203}]}, "version": 1261}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962847.0658445}]}, "version": 1262}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.27369993925094604, "step": null, "ts": 1644962847.165012}]}, "version": 1263}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0171],\n        [0.0292],\n        [0.0226],\n        [0.0456],\n        [0.0371],\n        [0.0313],\n        [0.0244],\n        [0.0228],\n        [0.0381],\n        [0.0406],\n        [0.0428],\n        [0.0219],\n        [0.0452],\n        [0.0303],\n        [0.0475],\n        [0.0150],\n        [0.0276],\n        [0.0154],\n        [0.0346],\n        [0.0349],\n        [0.0315],\n        [0.0343],\n        [0.0712],\n        [0.0397],\n        [0.0328],\n        [0.0614],\n        [0.0248],\n        [0.0294],\n        [0.0242],\n        [0.0237],\n        [0.0514],\n        [0.0250],\n        [0.0193],\n        [0.0299],\n        [0.0391],\n        [0.0333],\n        [0.0474],\n        [0.0402],\n        [0.0225],\n        [0.0119],\n        [0.0251],\n        [0.0477]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.1737769}]}, "version": 1264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.1829717}]}, "version": 1265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0532, 0.0274, 0.0256,  ..., 0.0132, 0.0285, 0.0293],\n        [0.0181, 0.0433, 0.0116,  ..., 0.0175, 0.0155, 0.0453],\n        [0.0529, 0.0299, 0.0279,  ..., 0.0189, 0.0205, 0.0361],\n        ...,\n        [0.0614, 0.0195, 0.0247,  ..., 0.0172, 0.0198, 0.0395],\n        [0.0322, 0.0269, 0.0264,  ..., 0.0244, 0.0275, 0.0238],\n        [0.0352, 0.0228, 0.0220,  ..., 0.0140, 0.0341, 0.0483]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.188077}]}, "version": 1266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.1918955}]}, "version": 1267}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1229, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962847.1930785}]}, "version": 1268}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.1938248}]}, "version": 1269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0042, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962847.1951451}]}, "version": 1270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.1960094}]}, "version": 1271}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.532778024673462, "step": null, "ts": 1644962847.19723}]}, "version": 1272}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.4247816801071167, "step": null, "ts": 1644962847.6538196}]}, "version": 1273}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 6.6700e-03],\n        [ 1.2192e-01],\n        [-6.6670e-02],\n        [ 4.4197e-02],\n        [ 2.4700e-03],\n        [-1.2516e-01],\n        [-6.3637e+00],\n        [ 7.1633e-02],\n        [ 1.2824e-01],\n        [ 9.0005e-03],\n        [ 2.5238e-01],\n        [-9.9253e-01],\n        [-3.7333e-01],\n        [-1.5156e-02],\n        [-1.6807e+00],\n        [ 2.2838e-01],\n        [ 6.4624e+00],\n        [-2.3088e-02],\n        [-1.4149e-01],\n        [ 1.4891e-01],\n        [ 4.0835e-01],\n        [-3.4784e-01],\n        [ 2.3190e-01],\n        [-1.9849e-01],\n        [-1.8392e-02],\n        [-1.2275e+00],\n        [-1.4266e+00],\n        [-1.9456e-01],\n        [ 3.7969e-01],\n        [-3.0796e-03],\n        [-5.2742e-01],\n        [ 2.6296e-01],\n        [-1.2887e-01],\n        [ 9.5824e-02],\n        [ 8.4765e-02],\n        [ 1.2181e-01],\n        [-7.8523e-01],\n        [-7.8934e-03],\n        [ 3.1765e-02],\n        [ 1.9816e-01],\n        [-1.5232e-01],\n        [ 2.6249e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962847.6645987}]}, "version": 1274}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.6692233}]}, "version": 1275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0055, -0.0386, -0.0359,  ...,  0.1683,  0.0418, -0.0817],\n        [-0.6454, -0.0232,  0.8264,  ...,  0.9014, -0.1854, -0.3057],\n        [-0.0718,  0.0101,  0.0366,  ..., -0.0248, -0.0581,  0.0685],\n        ...,\n        [ 0.4858, -0.0046, -0.5999,  ..., -0.0533, -1.0635,  0.7159],\n        [ 0.0790,  0.1035,  0.1359,  ...,  0.0764, -0.0543,  0.0617],\n        [-0.1047,  0.1863,  0.2566,  ...,  0.0281,  0.1116,  0.1188]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.6718183}]}, "version": 1276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.6727412}]}, "version": 1277}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(2.8261, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962847.6737983}]}, "version": 1278}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.674804}]}, "version": 1279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-3.1949, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962847.6761794}]}, "version": 1280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.6768513}]}, "version": 1281}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962847.677841}]}, "version": 1282}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.40446531772613525, "step": null, "ts": 1644962847.7642019}]}, "version": 1283}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0247],\n        [0.0633],\n        [0.0388],\n        [0.0576],\n        [0.0318],\n        [0.0296],\n        [0.0309],\n        [0.0434],\n        [0.0399],\n        [0.0245],\n        [0.0348],\n        [0.0344],\n        [0.0367],\n        [0.0391],\n        [0.0307],\n        [0.0203],\n        [0.0143],\n        [0.0560],\n        [0.0150],\n        [0.0335],\n        [0.0232],\n        [0.0218],\n        [0.0295],\n        [0.0185],\n        [0.0382],\n        [0.0516],\n        [0.0178],\n        [0.0376],\n        [0.0314],\n        [0.0230],\n        [0.0319],\n        [0.0449],\n        [0.0289],\n        [0.0379],\n        [0.0432],\n        [0.0136],\n        [0.0319],\n        [0.0310],\n        [0.0343],\n        [0.0241],\n        [0.0168],\n        [0.0344]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.7744029}]}, "version": 1284}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.7821374}]}, "version": 1285}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0274, 0.0525, 0.0227,  ..., 0.0166, 0.0338, 0.0342],\n        [0.0235, 0.0417, 0.0333,  ..., 0.0293, 0.0312, 0.0346],\n        [0.0419, 0.0414, 0.0232,  ..., 0.0181, 0.0213, 0.0233],\n        ...,\n        [0.0372, 0.0207, 0.0206,  ..., 0.0265, 0.0263, 0.0290],\n        [0.0467, 0.0241, 0.0352,  ..., 0.0240, 0.0213, 0.0403],\n        [0.0352, 0.0288, 0.0265,  ..., 0.0312, 0.0274, 0.0284]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962847.7869482}]}, "version": 1286}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.7904136}]}, "version": 1287}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1854, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962847.7916267}]}, "version": 1288}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.794987}]}, "version": 1289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0047, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962847.7963834}]}, "version": 1290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962847.7970152}]}, "version": 1291}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4879252910614014, "step": null, "ts": 1644962847.7978942}]}, "version": 1292}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8861426711082458, "step": null, "ts": 1644962848.273315}]}, "version": 1293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.7971e-02],\n        [ 2.8376e-02],\n        [ 3.0652e-01],\n        [-7.0629e+00],\n        [ 5.1878e+00],\n        [-1.3063e+00],\n        [-3.1111e-01],\n        [ 2.3759e-02],\n        [ 2.3384e+00],\n        [ 6.7543e-01],\n        [-2.1660e-01],\n        [ 2.9451e-02],\n        [ 1.2451e-02],\n        [ 5.6463e-02],\n        [ 7.0864e-02],\n        [ 9.6819e-02],\n        [ 2.1487e-02],\n        [-8.8152e-02],\n        [-1.3815e+01],\n        [ 1.4306e-01],\n        [-5.7999e-01],\n        [ 3.4487e-01],\n        [ 7.2537e-02],\n        [-1.1723e-01],\n        [ 5.6046e-02],\n        [ 1.1931e-01],\n        [-4.1446e-02],\n        [-1.0943e-01],\n        [-5.6775e-01],\n        [ 2.2281e-02],\n        [ 9.4510e-02],\n        [ 1.4607e-01],\n        [ 3.6492e-01],\n        [ 8.6090e-02],\n        [ 8.2427e-01],\n        [-3.5438e-01],\n        [-9.8319e-02],\n        [-1.1275e-02],\n        [-1.3153e-01],\n        [-4.5040e-02],\n        [ 2.3977e-01],\n        [ 2.9749e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962848.281835}]}, "version": 1294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.288246}]}, "version": 1295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0665,  0.0292,  0.1391,  ..., -0.1025, -0.3108,  0.1443],\n        [-0.0134, -0.1526,  0.3447,  ...,  0.0256, -0.0241,  0.0331],\n        [ 2.0821,  0.1891,  2.3066,  ...,  2.2602,  0.5424, -0.7911],\n        ...,\n        [ 0.0343,  0.0493,  0.2782,  ...,  0.1627,  0.0279,  0.1160],\n        [-0.1605,  0.2419, -0.0938,  ...,  0.3925,  0.4734, -0.4863],\n        [ 0.2538, -0.1073,  1.3685,  ...,  1.3645,  0.2226, -0.1144]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962848.2904203}]}, "version": 1296}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.2913077}]}, "version": 1297}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(25.1686, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962848.2925463}]}, "version": 1298}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.293448}]}, "version": 1299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-18.3551, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962848.2947316}]}, "version": 1300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.2954307}]}, "version": 1301}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962848.2963886}]}, "version": 1302}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24977482855319977, "step": null, "ts": 1644962848.3794706}]}, "version": 1303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0283],\n        [0.0410],\n        [0.0475],\n        [0.0258],\n        [0.0400],\n        [0.0171],\n        [0.0303],\n        [0.0447],\n        [0.0136],\n        [0.0198],\n        [0.0309],\n        [0.0339],\n        [0.0197],\n        [0.0363],\n        [0.0310],\n        [0.0291],\n        [0.0675],\n        [0.0237],\n        [0.0222],\n        [0.0292],\n        [0.0441],\n        [0.0595],\n        [0.0553],\n        [0.0379],\n        [0.0290],\n        [0.0363],\n        [0.0278],\n        [0.0152],\n        [0.0228],\n        [0.0186],\n        [0.0371],\n        [0.0334],\n        [0.0433],\n        [0.0276],\n        [0.0192],\n        [0.0176],\n        [0.0330],\n        [0.0350],\n        [0.0322],\n        [0.0371],\n        [0.0250],\n        [0.0203]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962848.3919647}]}, "version": 1304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.4011312}]}, "version": 1305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0314, 0.0357, 0.0208,  ..., 0.0171, 0.0226, 0.0526],\n        [0.0251, 0.0237, 0.0232,  ..., 0.0389, 0.0245, 0.0256],\n        [0.0379, 0.0211, 0.0191,  ..., 0.0247, 0.0462, 0.0289],\n        ...,\n        [0.0502, 0.0571, 0.0129,  ..., 0.0292, 0.0161, 0.0301],\n        [0.0352, 0.0290, 0.0260,  ..., 0.0249, 0.0284, 0.0280],\n        [0.0348, 0.0220, 0.0520,  ..., 0.0108, 0.0104, 0.0452]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962848.4095404}]}, "version": 1306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.4205859}]}, "version": 1307}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1571, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962848.4220142}]}, "version": 1308}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.4229069}]}, "version": 1309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0031, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962848.4243867}]}, "version": 1310}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.4254606}]}, "version": 1311}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.622760772705078, "step": null, "ts": 1644962848.426475}]}, "version": 1312}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8108454346656799, "step": null, "ts": 1644962848.8785625}]}, "version": 1313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 2.2557e-01],\n        [ 1.8024e+00],\n        [ 6.0412e-02],\n        [ 1.7423e-01],\n        [-1.9855e-03],\n        [ 5.8375e-01],\n        [-4.7945e-01],\n        [-6.5355e-02],\n        [-1.1960e+01],\n        [-2.2265e-01],\n        [ 2.4965e-01],\n        [-2.7987e-01],\n        [ 6.6226e-02],\n        [-4.5930e-01],\n        [-2.9228e-01],\n        [ 4.2154e-01],\n        [ 2.5861e-01],\n        [-1.8501e+00],\n        [-5.5567e-02],\n        [-4.8994e-02],\n        [-2.4914e-02],\n        [ 1.1243e-01],\n        [ 2.2622e-01],\n        [-1.8071e-01],\n        [-3.0733e-02],\n        [ 1.2778e+00],\n        [-8.3211e-02],\n        [ 4.0645e-01],\n        [ 9.1913e-02],\n        [-1.2351e+00],\n        [ 5.7722e-02],\n        [ 9.2069e-02],\n        [ 9.3287e-02],\n        [-1.4194e-02],\n        [-2.7093e-01],\n        [-2.7113e-01],\n        [ 3.2277e-02],\n        [-5.8134e-03],\n        [ 1.8437e-01],\n        [ 8.7839e-01],\n        [-9.7387e-02],\n        [ 2.4440e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962848.8924727}]}, "version": 1314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.8934474}]}, "version": 1315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.0665e-01, -7.6826e-02, -2.3401e-01,  ..., -8.0818e-02,\n          6.6187e-02, -8.5700e-02],\n        [-1.2572e+00, -5.3065e-01,  2.8277e+00,  ...,  3.2892e+00,\n          2.3140e-03, -1.6885e+00],\n        [-6.2272e-01, -3.5512e-01,  1.2357e+00,  ..., -1.0197e-01,\n          1.5957e+00,  1.2957e-01],\n        ...,\n        [ 1.4566e+01,  1.3155e+01,  1.6619e+01,  ...,  3.4074e+01,\n          2.0898e+01, -1.0301e-02],\n        [-1.1269e-01, -3.3641e-02, -2.1161e-01,  ..., -5.7332e-01,\n         -7.3995e-01,  3.4043e-01],\n        [-4.1599e-01,  3.1766e-02,  3.6663e-01,  ...,  4.0949e-01,\n          8.6037e-01, -1.9363e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962848.895824}]}, "version": 1316}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.896689}]}, "version": 1317}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(34.0741, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962848.8978736}]}, "version": 1318}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.8987238}]}, "version": 1319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-43.5540, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962848.8999295}]}, "version": 1320}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962848.9007323}]}, "version": 1321}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962848.901715}]}, "version": 1322}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.34137794375419617, "step": null, "ts": 1644962849.0108492}]}, "version": 1323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0331],\n        [0.0325],\n        [0.0283],\n        [0.0336],\n        [0.0260],\n        [0.0189],\n        [0.0161],\n        [0.0344],\n        [0.0145],\n        [0.0274],\n        [0.0353],\n        [0.0346],\n        [0.0350],\n        [0.0324],\n        [0.0457],\n        [0.0365],\n        [0.0382],\n        [0.0322],\n        [0.0362],\n        [0.0211],\n        [0.0413],\n        [0.0334],\n        [0.0465],\n        [0.0596],\n        [0.0270],\n        [0.0311],\n        [0.0141],\n        [0.0418],\n        [0.0247],\n        [0.0294],\n        [0.0243],\n        [0.0306],\n        [0.0404],\n        [0.0190],\n        [0.0307],\n        [0.0424],\n        [0.0361],\n        [0.0376],\n        [0.0367],\n        [0.0429],\n        [0.0312],\n        [0.0415]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.0260432}]}, "version": 1324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.0348186}]}, "version": 1325}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0268, 0.0265, 0.0194,  ..., 0.0287, 0.0406, 0.0246],\n        [0.0339, 0.0327, 0.0284,  ..., 0.0313, 0.0320, 0.0327],\n        [0.0322, 0.0240, 0.0201,  ..., 0.0121, 0.0259, 0.0260],\n        ...,\n        [0.0409, 0.0239, 0.0234,  ..., 0.0361, 0.0272, 0.0296],\n        [0.0247, 0.0340, 0.0229,  ..., 0.0399, 0.0285, 0.0312],\n        [0.0327, 0.0264, 0.0106,  ..., 0.0164, 0.0218, 0.0361]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.0396953}]}, "version": 1326}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.0429428}]}, "version": 1327}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.3001, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962849.044169}]}, "version": 1328}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.044875}]}, "version": 1329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0010, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962849.046024}]}, "version": 1330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.0467134}]}, "version": 1331}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6138930320739746, "step": null, "ts": 1644962849.0476182}]}, "version": 1332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [0/200]\tBT 0.620 (0.620)\tDT 0.000 (0.000)\tS@1 95.238 (95.238)\tLoss nan (nan)", "step": null, "ts": 1644962849.2920778}]}, "version": 1333}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.293461}]}, "version": 1334}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7117100358009338, "step": null, "ts": 1644962849.4999657}]}, "version": 1335}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.1637],\n        [-0.1277],\n        [-1.3049],\n        [ 6.4014],\n        [-0.2607],\n        [-2.2268],\n        [-0.2925],\n        [-0.0125],\n        [-0.0369],\n        [ 0.0663],\n        [-0.0195],\n        [ 0.1620],\n        [ 0.2113],\n        [-0.4146],\n        [ 0.0157],\n        [ 0.1011],\n        [-0.8185],\n        [ 0.3692],\n        [ 0.1081],\n        [ 0.0424],\n        [ 0.0801],\n        [ 3.9295],\n        [ 0.1605],\n        [-0.1849],\n        [-0.0714],\n        [-0.3994],\n        [ 0.7810],\n        [ 0.0473],\n        [-0.8660],\n        [ 0.0200],\n        [ 0.0870],\n        [ 0.0309],\n        [ 0.1431],\n        [-0.0971],\n        [ 0.2731],\n        [-0.2105],\n        [ 0.2025],\n        [ 0.5308],\n        [-0.1255],\n        [ 0.4166],\n        [ 1.3053],\n        [ 0.1471]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.5069892}]}, "version": 1336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.512247}]}, "version": 1337}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-7.5236e-01,  7.9381e-01,  4.4917e-01,  ...,  4.5465e-01,\n          7.3305e-01, -4.8466e-01],\n        [-2.7953e-02,  2.0365e-01,  2.2600e-01,  ...,  1.2039e-01,\n          1.1430e-01, -4.5395e-03],\n        [-7.1300e-01,  1.8416e+00,  1.2110e+00,  ...,  1.1402e+00,\n          1.0327e+00, -4.7688e-01],\n        ...,\n        [-6.5249e-01, -5.1064e-01,  4.6688e-01,  ...,  4.3213e-01,\n          2.2567e-01, -4.1506e-03],\n        [-6.8491e-01,  2.3089e+00, -1.6160e+00,  ...,  5.9104e+00,\n          9.7324e+00,  4.2178e+00],\n        [ 3.3412e-01, -7.5962e-02, -2.2797e-01,  ..., -1.2315e-02,\n          3.1626e-01,  1.0992e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.514542}]}, "version": 1338}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.515488}]}, "version": 1339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(18.6423, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962849.5166426}]}, "version": 1340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.5176544}]}, "version": 1341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-14.3362, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962849.518726}]}, "version": 1342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.5197198}]}, "version": 1343}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962849.5207038}]}, "version": 1344}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.14450661838054657, "step": null, "ts": 1644962849.6119}]}, "version": 1345}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0311],\n        [0.0327],\n        [0.0337],\n        [0.0326],\n        [0.0248],\n        [0.0134],\n        [0.0353],\n        [0.0246],\n        [0.0378],\n        [0.0342],\n        [0.0266],\n        [0.0465],\n        [0.0333],\n        [0.0257],\n        [0.0333],\n        [0.0186],\n        [0.0294],\n        [0.0684],\n        [0.0350],\n        [0.0339],\n        [0.0178],\n        [0.0299],\n        [0.0230],\n        [0.0364],\n        [0.0384],\n        [0.0376],\n        [0.0357],\n        [0.0277],\n        [0.0213],\n        [0.0654],\n        [0.0356],\n        [0.0239],\n        [0.0490],\n        [0.0247],\n        [0.0304],\n        [0.0392],\n        [0.0263],\n        [0.0123],\n        [0.0296],\n        [0.0302],\n        [0.0314],\n        [0.0388]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.6260457}]}, "version": 1346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.6324866}]}, "version": 1347}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0361, 0.0292, 0.0257,  ..., 0.0236, 0.0267, 0.0280],\n        [0.0246, 0.0203, 0.0279,  ..., 0.0311, 0.0302, 0.0380],\n        [0.0399, 0.0363, 0.0277,  ..., 0.0293, 0.0351, 0.0292],\n        ...,\n        [0.0289, 0.0258, 0.0216,  ..., 0.0239, 0.0230, 0.0278],\n        [0.0343, 0.0305, 0.0274,  ..., 0.0195, 0.0374, 0.0433],\n        [0.0470, 0.0389, 0.0227,  ..., 0.0107, 0.0282, 0.0346]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962849.6347432}]}, "version": 1348}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.635743}]}, "version": 1349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0942, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962849.6370034}]}, "version": 1350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.6396368}]}, "version": 1351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0043, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962849.6411266}]}, "version": 1352}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962849.642171}]}, "version": 1353}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.6160497665405273, "step": null, "ts": 1644962849.6432161}]}, "version": 1354}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.8868114948272705, "step": null, "ts": 1644962850.1073787}]}, "version": 1355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-1.2113e-02],\n        [ 1.2247e-01],\n        [ 4.2274e-01],\n        [ 1.1062e-01],\n        [-6.4916e-02],\n        [-1.6520e-01],\n        [ 2.4779e+00],\n        [-3.2516e-01],\n        [ 2.1378e-01],\n        [-1.0685e-02],\n        [ 6.2091e-01],\n        [ 3.2684e-02],\n        [ 8.9432e-01],\n        [-5.4208e-03],\n        [ 4.1360e-01],\n        [-1.5294e-01],\n        [-1.0394e-02],\n        [ 2.1512e-01],\n        [-6.0908e-03],\n        [ 9.2887e-02],\n        [ 1.0484e-01],\n        [ 9.3132e-03],\n        [ 5.0634e-01],\n        [ 8.0017e-01],\n        [ 1.0112e-01],\n        [ 1.7090e+00],\n        [ 6.8909e-02],\n        [ 1.7238e-01],\n        [-1.3688e+00],\n        [-2.3271e-01],\n        [-1.4678e-01],\n        [ 1.3855e+00],\n        [-1.3932e+00],\n        [-5.0664e-02],\n        [ 3.6174e-01],\n        [ 3.0290e-01],\n        [ 1.7803e+00],\n        [-5.9658e-01],\n        [-2.1714e+01],\n        [-7.9874e-01],\n        [ 9.5834e-02],\n        [-8.2210e-01]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962850.1216536}]}, "version": 1356}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.1252449}]}, "version": 1357}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0789,  0.0276,  0.1877,  ...,  0.0029,  0.0934,  0.0992],\n        [ 0.3847,  0.0607, -1.1487,  ..., -0.6402, -0.0893,  0.4144],\n        [ 0.1904,  0.0241, -0.4799,  ..., -0.2242, -0.1876,  0.3439],\n        ...,\n        [-0.0742,  0.2342,  0.8692,  ...,  0.1667,  0.3054, -0.6300],\n        [ 0.0816,  0.0831,  0.1340,  ...,  0.2148, -0.0461,  0.0987],\n        [-0.0471, -0.0441,  0.2526,  ...,  0.0570,  0.5832, -0.0384]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.1333287}]}, "version": 1358}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.1343675}]}, "version": 1359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(19.2215, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962850.1354752}]}, "version": 1360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.1361146}]}, "version": 1361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-18.1137, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962850.1372862}]}, "version": 1362}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.1378105}]}, "version": 1363}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962850.1387181}]}, "version": 1364}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2853262722492218, "step": null, "ts": 1644962850.2259378}]}, "version": 1365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0299],\n        [0.0343],\n        [0.0212],\n        [0.0569],\n        [0.0536],\n        [0.0229],\n        [0.0319],\n        [0.0251],\n        [0.0150],\n        [0.0419],\n        [0.0270],\n        [0.0344],\n        [0.0337],\n        [0.0209],\n        [0.0302],\n        [0.0272],\n        [0.0283],\n        [0.0300],\n        [0.0252],\n        [0.0389],\n        [0.0458],\n        [0.0355],\n        [0.0299],\n        [0.0372],\n        [0.0298],\n        [0.0257],\n        [0.0469],\n        [0.0271],\n        [0.0603],\n        [0.0368],\n        [0.0264],\n        [0.0250],\n        [0.0154],\n        [0.0142],\n        [0.0549],\n        [0.0686],\n        [0.0186],\n        [0.0185],\n        [0.0580],\n        [0.0355],\n        [0.0288],\n        [0.0208]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.233487}]}, "version": 1366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.2430112}]}, "version": 1367}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0324, 0.0291, 0.0296,  ..., 0.0284, 0.0316, 0.0313],\n        [0.0360, 0.0240, 0.0252,  ..., 0.0216, 0.0219, 0.0385],\n        [0.0180, 0.0323, 0.0128,  ..., 0.0167, 0.0236, 0.0188],\n        ...,\n        [0.0218, 0.0145, 0.0107,  ..., 0.0081, 0.0241, 0.0281],\n        [0.0339, 0.0296, 0.0300,  ..., 0.0247, 0.0344, 0.0288],\n        [0.0328, 0.0336, 0.0254,  ..., 0.0221, 0.0240, 0.0471]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.2506788}]}, "version": 1368}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.2543166}]}, "version": 1369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1293, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962850.2557926}]}, "version": 1370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.256604}]}, "version": 1371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0027, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962850.2577412}]}, "version": 1372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.2583857}]}, "version": 1373}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5964744091033936, "step": null, "ts": 1644962850.259355}]}, "version": 1374}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.7214325070381165, "step": null, "ts": 1644962850.7319949}]}, "version": 1375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.1555],\n        [ 0.1805],\n        [ 0.0325],\n        [ 0.1532],\n        [-0.1007],\n        [-0.0071],\n        [ 0.0475],\n        [ 0.0188],\n        [-0.3731],\n        [ 0.1895],\n        [ 1.2874],\n        [-0.0177],\n        [ 0.0078],\n        [ 0.5053],\n        [-0.2400],\n        [-0.3276],\n        [ 0.4442],\n        [-0.0853],\n        [ 0.0065],\n        [-0.0038],\n        [ 1.4354],\n        [ 0.1190],\n        [ 0.1746],\n        [-0.0411],\n        [ 0.6523],\n        [-0.7006],\n        [ 0.2861],\n        [ 0.1134],\n        [-0.5996],\n        [-0.0280],\n        [-1.1630],\n        [-0.1356],\n        [-0.6310],\n        [ 0.2092],\n        [ 0.0701],\n        [ 0.0336],\n        [-0.2968],\n        [ 0.5504],\n        [ 0.1973],\n        [-0.1150],\n        [ 1.0112],\n        [ 0.5473]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.7485108}]}, "version": 1376}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.749406}]}, "version": 1377}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-3.5006e-03, -1.4397e-01, -3.3300e-01,  ..., -4.8359e-01,\n         -2.2565e-02,  1.5170e-02],\n        [-1.3933e-01,  7.3189e-02,  2.7886e-01,  ...,  5.9171e-02,\n          2.1050e-01, -7.9340e-02],\n        [-3.3627e-01,  2.6500e-01,  4.0930e-01,  ...,  4.2237e-02,\n          4.4624e-03, -5.0802e-02],\n        ...,\n        [ 1.1115e-02, -6.8934e-02, -4.7217e-02,  ..., -1.6855e-01,\n         -8.6063e-02,  1.6530e-01],\n        [ 2.5264e+02, -5.8885e+01, -9.4128e+01,  ..., -2.8186e+02,\n         -1.0695e+02,  1.7988e+02],\n        [ 1.8107e+00, -1.8168e-01,  1.3226e+00,  ...,  7.5123e-01,\n          3.6815e-01, -4.9609e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.7517314}]}, "version": 1378}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.7527432}]}, "version": 1379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(258.9519, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962850.7541447}]}, "version": 1380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.755042}]}, "version": 1381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-388.2774, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962850.7564974}]}, "version": 1382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.7572377}]}, "version": 1383}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962850.7581987}]}, "version": 1384}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3079419434070587, "step": null, "ts": 1644962850.8622015}]}, "version": 1385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0363],\n        [0.0157],\n        [0.0205],\n        [0.0401],\n        [0.0980],\n        [0.0300],\n        [0.0256],\n        [0.0406],\n        [0.0414],\n        [0.0353],\n        [0.0409],\n        [0.0443],\n        [0.0237],\n        [0.0150],\n        [0.0207],\n        [0.0323],\n        [0.0278],\n        [0.0400],\n        [0.0282],\n        [0.0188],\n        [0.0355],\n        [0.0117],\n        [0.0326],\n        [0.0323],\n        [0.0189],\n        [0.0247],\n        [0.0408],\n        [0.0297],\n        [0.0290],\n        [0.0515],\n        [0.0451],\n        [0.0367],\n        [0.0217],\n        [0.0474],\n        [0.0516],\n        [0.0232],\n        [0.0244],\n        [0.0658],\n        [0.0185],\n        [0.0279],\n        [0.0569],\n        [0.0196]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.875427}]}, "version": 1386}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.8816116}]}, "version": 1387}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0460, 0.0236, 0.0107,  ..., 0.0170, 0.0309, 0.0280],\n        [0.0457, 0.0278, 0.0199,  ..., 0.0141, 0.0148, 0.0480],\n        [0.0364, 0.0268, 0.0193,  ..., 0.0173, 0.0151, 0.0354],\n        ...,\n        [0.0162, 0.0256, 0.0340,  ..., 0.0309, 0.0225, 0.0302],\n        [0.0479, 0.0217, 0.0158,  ..., 0.0212, 0.0245, 0.0320],\n        [0.0243, 0.0384, 0.0215,  ..., 0.0327, 0.0247, 0.0295]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962850.8868556}]}, "version": 1388}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.893253}]}, "version": 1389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2348, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962850.894714}]}, "version": 1390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.8957598}]}, "version": 1391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0022, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962850.8969972}]}, "version": 1392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962850.8979557}]}, "version": 1393}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.596759796142578, "step": null, "ts": 1644962850.8990326}]}, "version": 1394}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6897535920143127, "step": null, "ts": 1644962851.3261967}]}, "version": 1395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0201],\n        [ 0.0094],\n        [ 0.4040],\n        [ 0.1274],\n        [-0.1949],\n        [ 0.0921],\n        [ 0.0554],\n        [ 0.0747],\n        [-0.1525],\n        [-0.2545],\n        [ 0.8342],\n        [ 0.1673],\n        [ 0.6703],\n        [-0.0339],\n        [ 0.8216],\n        [ 0.3068],\n        [ 0.4476],\n        [ 1.1786],\n        [ 0.1658],\n        [ 0.0623],\n        [ 0.6805],\n        [-1.4260],\n        [ 0.0143],\n        [ 7.2491],\n        [ 0.0928],\n        [-2.8144],\n        [ 0.1511],\n        [ 0.1516],\n        [ 0.5011],\n        [ 0.1583],\n        [ 0.1148],\n        [ 0.0708],\n        [ 0.3677],\n        [-0.7177],\n        [-0.0661],\n        [-0.0554],\n        [ 1.1068],\n        [ 0.5365],\n        [-0.0647],\n        [-0.4181],\n        [-0.0588],\n        [ 0.0169]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962851.3672712}]}, "version": 1396}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.3683302}]}, "version": 1397}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.2169,  0.2171, -0.3823,  ...,  0.0607, -0.2574, -0.2421],\n        [ 0.2889, -0.0306, -0.6086,  ..., -0.1150, -0.2304, -0.0184],\n        [-0.2506,  0.7442,  0.5533,  ...,  0.3816, -0.4969,  0.2968],\n        ...,\n        [-0.0927,  0.0408,  0.1387,  ...,  0.0387,  0.0618,  0.0825],\n        [ 0.0504,  0.1949,  0.2335,  ...,  0.1156,  0.0310,  0.0389],\n        [ 0.0973, -0.1590,  0.3665,  ...,  0.4082,  0.3356,  0.1662]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962851.3705285}]}, "version": 1398}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.3714185}]}, "version": 1399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(23.5898, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962851.3727968}]}, "version": 1400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.3736584}]}, "version": 1401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-29.8336, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962851.3747413}]}, "version": 1402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.3756912}]}, "version": 1403}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962851.37669}]}, "version": 1404}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.17014706134796143, "step": null, "ts": 1644962851.4670205}]}, "version": 1405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0202],\n        [0.0435],\n        [0.0457],\n        [0.0341],\n        [0.0331],\n        [0.0106],\n        [0.0258],\n        [0.0394],\n        [0.0331],\n        [0.0260],\n        [0.0327],\n        [0.0229],\n        [0.0532],\n        [0.0286],\n        [0.0406],\n        [0.0399],\n        [0.0198],\n        [0.0338],\n        [0.0201],\n        [0.0453],\n        [0.0310],\n        [0.0341],\n        [0.0434],\n        [0.0287],\n        [0.0361],\n        [0.0196],\n        [0.0365],\n        [0.0332],\n        [0.0307],\n        [0.0230],\n        [0.0399],\n        [0.0185],\n        [0.0254],\n        [0.0310],\n        [0.0311],\n        [0.0162],\n        [0.0372],\n        [0.0432],\n        [0.0364],\n        [0.0195],\n        [0.0515],\n        [0.0367]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962851.4774854}]}, "version": 1406}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.4860232}]}, "version": 1407}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0356, 0.0448, 0.0188,  ..., 0.0171, 0.0313, 0.0365],\n        [0.0435, 0.0286, 0.0123,  ..., 0.0129, 0.0414, 0.0371],\n        [0.0351, 0.0500, 0.0233,  ..., 0.0188, 0.0166, 0.0358],\n        ...,\n        [0.0410, 0.0314, 0.0193,  ..., 0.0164, 0.0209, 0.0461],\n        [0.0295, 0.0366, 0.0135,  ..., 0.0225, 0.0289, 0.0403],\n        [0.0289, 0.0262, 0.0089,  ..., 0.0102, 0.0114, 0.0506]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962851.4909315}]}, "version": 1408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.4944634}]}, "version": 1409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2004, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962851.4958134}]}, "version": 1410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.4966807}]}, "version": 1411}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0039, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962851.4980743}]}, "version": 1412}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.498989}]}, "version": 1413}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4986579418182373, "step": null, "ts": 1644962851.499909}]}, "version": 1414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962851.7023244}]}, "version": 1415}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.6962966322898865, "step": null, "ts": 1644962851.9353044}]}, "version": 1416}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-9.2773e-02],\n        [-1.7063e-01],\n        [ 3.5169e-02],\n        [ 4.6721e+00],\n        [-2.4436e-01],\n        [ 2.2435e-02],\n        [ 9.9419e-02],\n        [-1.0964e-02],\n        [ 7.6635e-01],\n        [ 1.6568e-01],\n        [-5.8638e-01],\n        [-4.8656e-02],\n        [ 3.4791e-01],\n        [-5.7636e-01],\n        [-4.5840e+00],\n        [-2.7105e-01],\n        [ 1.0410e-01],\n        [ 9.8681e+00],\n        [ 1.5385e-01],\n        [-4.4795e-03],\n        [ 7.7729e-01],\n        [-1.4664e+00],\n        [-3.0490e-01],\n        [-2.2431e-01],\n        [-1.4567e-01],\n        [ 1.3622e+00],\n        [ 1.1530e-01],\n        [ 2.2939e-01],\n        [-7.8307e-02],\n        [ 1.9493e-01],\n        [-1.0140e-01],\n        [ 5.3440e+00],\n        [-8.2065e-02],\n        [-8.9812e-02],\n        [ 5.2564e-01],\n        [ 2.0185e-01],\n        [-2.4285e-01],\n        [ 4.1240e-01],\n        [ 1.2082e-01],\n        [-1.1246e-01],\n        [-4.9295e-02],\n        [ 1.2250e+00]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962851.948864}]}, "version": 1417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.95581}]}, "version": 1418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-2.4062e-02, -5.9886e-03,  9.4313e-02,  ...,  7.6425e-02,\n          1.3338e-01, -1.9296e-02],\n        [ 6.5322e-02,  2.7666e-01,  1.4804e+00,  ...,  7.4359e-01,\n          7.8729e-02, -6.4390e-01],\n        [ 9.7847e-02,  2.9832e-02,  6.7346e-02,  ...,  2.1755e-01,\n          1.7308e-01,  2.5764e-02],\n        ...,\n        [ 8.8158e-02, -1.1032e+00, -5.8783e-01,  ..., -2.8673e+00,\n         -2.6084e-01, -2.3653e-02],\n        [ 1.2595e-02,  9.6945e-02,  1.2795e-01,  ...,  9.7125e-02,\n          7.0727e-02, -1.3687e-02],\n        [-3.7724e+00,  5.7557e+00, -6.1664e-01,  ..., -6.9146e+00,\n         -5.3677e+00,  1.1386e+00]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962851.9648185}]}, "version": 1419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.9659278}]}, "version": 1420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(37.5545, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962851.9674344}]}, "version": 1421}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.9684436}]}, "version": 1422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-33.1899, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962851.9698083}]}, "version": 1423}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962851.9707987}]}, "version": 1424}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962851.972152}]}, "version": 1425}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.24531416594982147, "step": null, "ts": 1644962852.0587673}]}, "version": 1426}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0399],\n        [0.0313],\n        [0.0213],\n        [0.0224],\n        [0.0359],\n        [0.0342],\n        [0.0291],\n        [0.0181],\n        [0.0227],\n        [0.0320],\n        [0.0254],\n        [0.0360],\n        [0.0358],\n        [0.0282],\n        [0.0329],\n        [0.0356],\n        [0.0325],\n        [0.0334],\n        [0.0304],\n        [0.0658],\n        [0.0384],\n        [0.0177],\n        [0.0226],\n        [0.0337],\n        [0.0315],\n        [0.0319],\n        [0.0276],\n        [0.0245],\n        [0.0496],\n        [0.0256],\n        [0.0257],\n        [0.0317],\n        [0.0290],\n        [0.0315],\n        [0.0223],\n        [0.0301],\n        [0.0373],\n        [0.0380],\n        [0.0343],\n        [0.0202],\n        [0.0426],\n        [0.0217]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962852.0653849}]}, "version": 1427}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.0714242}]}, "version": 1428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0362, 0.0305, 0.0248,  ..., 0.0265, 0.0400, 0.0364],\n        [0.0347, 0.0380, 0.0208,  ..., 0.0324, 0.0290, 0.0587],\n        [0.0456, 0.0216, 0.0194,  ..., 0.0189, 0.0380, 0.0272],\n        ...,\n        [0.0278, 0.0319, 0.0245,  ..., 0.0253, 0.0324, 0.0434],\n        [0.0160, 0.0390, 0.0095,  ..., 0.0314, 0.0169, 0.0131],\n        [0.0244, 0.0454, 0.0206,  ..., 0.0067, 0.0063, 0.0457]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962852.0740356}]}, "version": 1429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.080927}]}, "version": 1430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1641, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962852.0823503}]}, "version": 1431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.0832167}]}, "version": 1432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0027, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962852.084679}]}, "version": 1433}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.0855403}]}, "version": 1434}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.4199798107147217, "step": null, "ts": 1644962852.0864904}]}, "version": 1435}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 0.727627694606781, "step": null, "ts": 1644962852.505874}]}, "version": 1436}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 1.2243e-01],\n        [-8.6038e-02],\n        [-1.4910e-01],\n        [-7.7827e-02],\n        [-8.0127e-02],\n        [ 2.9199e-01],\n        [-1.6302e-01],\n        [ 1.0433e+00],\n        [ 2.2579e-01],\n        [-8.4456e-02],\n        [ 1.2197e-01],\n        [ 5.7484e-02],\n        [ 2.8318e-02],\n        [ 7.1130e-03],\n        [ 3.8063e-01],\n        [ 1.2896e-01],\n        [ 3.1215e-01],\n        [ 5.7800e-03],\n        [-2.7436e-01],\n        [ 3.1715e-01],\n        [ 9.8979e-02],\n        [ 8.3271e-01],\n        [ 3.9732e-01],\n        [ 2.3109e-01],\n        [ 9.3595e-01],\n        [ 2.0544e-02],\n        [ 2.9087e+00],\n        [ 1.3242e+00],\n        [-1.1451e+00],\n        [ 2.8610e-01],\n        [-4.1350e-01],\n        [ 1.6003e-01],\n        [ 3.0351e-01],\n        [-6.9081e+00],\n        [-4.8713e-02],\n        [ 1.4737e-02],\n        [-1.2298e+00],\n        [ 1.9655e-01],\n        [ 3.8168e-01],\n        [ 1.1124e-01],\n        [ 1.1523e-01],\n        [-2.5452e-02]], device='cuda:0', grad_fn=<AddBack", "step": null, "ts": 1644962852.5159192}]}, "version": 1437}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.5217175}]}, "version": 1438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0665, -0.2050,  0.6036,  ...,  0.1268,  0.0595,  0.1195],\n        [-0.0503, -0.0714,  0.2766,  ..., -0.0525, -0.2041,  0.0057],\n        [ 0.1933, -0.1448,  0.2525,  ..., -0.1028,  0.0325,  0.0257],\n        ...,\n        [-0.1163, -0.0955,  0.2064,  ...,  0.1753,  0.3428,  0.0055],\n        [ 0.1235,  0.0883,  0.1275,  ...,  0.1966,  0.2065, -0.0465],\n        [ 0.0177, -0.1348,  0.0837,  ...,  0.2952,  0.4763, -0.0641]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962852.5275776}]}, "version": 1439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.5282538}]}, "version": 1440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(183.8480, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962852.5291743}]}, "version": 1441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.5299273}]}, "version": 1442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-180.1479, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962852.530984}]}, "version": 1443}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.531502}]}, "version": 1444}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962852.5322597}]}, "version": 1445}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.21221177279949188, "step": null, "ts": 1644962852.6259372}]}, "version": 1446}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0250],\n        [0.0399],\n        [0.0419],\n        [0.0218],\n        [0.0290],\n        [0.0235],\n        [0.0476],\n        [0.0170],\n        [0.0188],\n        [0.0209],\n        [0.0449],\n        [0.0342],\n        [0.0371],\n        [0.0387],\n        [0.0331],\n        [0.0507],\n        [0.0344],\n        [0.0343],\n        [0.0239],\n        [0.0522],\n        [0.0399],\n        [0.0412],\n        [0.0380],\n        [0.0365],\n        [0.0220],\n        [0.0519],\n        [0.0226],\n        [0.0301],\n        [0.0231],\n        [0.0626],\n        [0.0430],\n        [0.0277],\n        [0.0183],\n        [0.0308],\n        [0.0256],\n        [0.0339],\n        [0.0280],\n        [0.0240],\n        [0.0474],\n        [0.0101],\n        [0.0255],\n        [0.0208]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962852.6374118}]}, "version": 1447}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.6383896}]}, "version": 1448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0321, 0.0313, 0.0237,  ..., 0.0246, 0.0189, 0.0360],\n        [0.0135, 0.0192, 0.0130,  ..., 0.0181, 0.0244, 0.0487],\n        [0.0386, 0.0194, 0.0187,  ..., 0.0142, 0.0176, 0.0181],\n        ...,\n        [0.0235, 0.0261, 0.0263,  ..., 0.0141, 0.0200, 0.0385],\n        [0.0308, 0.0406, 0.0197,  ..., 0.0214, 0.0285, 0.0405],\n        [0.0200, 0.0356, 0.0242,  ..., 0.0184, 0.0155, 0.0640]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962852.6407433}]}, "version": 1449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.6417265}]}, "version": 1450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1352, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962852.6429043}]}, "version": 1451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.6438265}]}, "version": 1452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0043, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962852.644941}]}, "version": 1453}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962852.6454217}]}, "version": 1454}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.5090839862823486, "step": null, "ts": 1644962852.6462426}]}, "version": 1455}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962855.3654013}]}, "version": 1456}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.1352386474609375, "step": null, "ts": 1644962855.3654013}]}, "version": 1457}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 46.0, "step": null, "ts": 1644962855.3654013}]}, "version": 1458}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962855.3654013}]}, "version": 1459}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962857.0791862}]}, "version": 1460}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962865.3701828}]}, "version": 1461}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.140789031982422, "step": null, "ts": 1644962865.3701828}]}, "version": 1462}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962865.3701828}]}, "version": 1463}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962865.3701828}]}, "version": 1464}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][0/13]\tT 0.648 (0.648)\tD 0.523 (0.523)\tT@1 100.000 (100.000)\tT@5 100.000 (100.000)\tL 0.1043 (0.1043)", "step": null, "ts": 1644962866.8985593}]}, "version": 1465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962866.909974}]}, "version": 1466}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [0][10/13]\tT 0.480 (0.474)\tD 0.356 (0.352)\tT@1 65.079 (80.952)\tT@5 98.413 (95.094)\tL 0.9167 (0.7286)", "step": null, "ts": 1644962871.4643502}]}, "version": 1467}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962871.4755917}]}, "version": 1468}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962876.8272994}]}, "version": 1469}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962875.376514}]}, "version": 1470}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.066616058349609, "step": null, "ts": 1644962875.376514}]}, "version": 1471}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962875.376514}]}, "version": 1472}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962885.9803257}]}, "version": 1473}
{"obj": {"type": "LogImages", "path": ["fig", "target_tsne2"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962886.7851639}]}, "version": 1474}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T training set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644962886.7875805}]}, "version": 1475}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962886.7886474}]}, "version": 1476}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.8, "step": null, "ts": 1644962886.8322828}]}, "version": 1477}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.138580322265625, "step": null, "ts": 1644962886.8322828}]}, "version": 1478}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 8.4366455078125, "step": null, "ts": 1644962886.8322828}]}, "version": 1479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][0/13]\tTime 0.667 (0.667)\tLoss 0.1043 (0.1043)\tPrec@1 100.000 (100.000)\tPrec@5 100.000 (100.000)", "step": null, "ts": 1644962887.4580076}]}, "version": 1480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962887.4688356}]}, "version": 1481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T test set - [0][10/13]\tTime 0.466 (0.474)\tLoss 0.9167 (0.7286)\tPrec@1 65.079 (80.952)\tPrec@5 98.413 (95.094)", "step": null, "ts": 1644962892.0046766}]}, "version": 1482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962892.0158818}]}, "version": 1483}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": " * Test on T test set - Prec@1 80.000, Prec@5 95.094", "step": null, "ts": 1644962892.67616}]}, "version": 1484}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962892.677435}]}, "version": 1485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.133, Prec@1 89.308", "step": null, "ts": 1644962892.8125837}]}, "version": 1486}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962892.813504}]}, "version": 1487}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.109, Prec@1 90.063", "step": null, "ts": 1644962892.8974423}]}, "version": 1488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962892.8985164}]}, "version": 1489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.094, Prec@1 89.308", "step": null, "ts": 1644962892.9602997}]}, "version": 1490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962892.961262}]}, "version": 1491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.086, Prec@1 88.931", "step": null, "ts": 1644962893.0218868}]}, "version": 1492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.02278}]}, "version": 1493}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.081, Prec@1 88.931", "step": null, "ts": 1644962893.0836985}]}, "version": 1494}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.0848274}]}, "version": 1495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 0, Average clustering time 0.001, Prec@1 87.799", "step": null, "ts": 1644962893.2025027}]}, "version": 1496}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.2038202}]}, "version": 1497}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 1, Average clustering time 0.030, Prec@1 89.057", "step": null, "ts": 1644962893.262365}]}, "version": 1498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.2635171}]}, "version": 1499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 2, Average clustering time 0.040, Prec@1 89.182", "step": null, "ts": 1644962893.3219671}]}, "version": 1500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.3231213}]}, "version": 1501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 3, Average clustering time 0.045, Prec@1 89.182", "step": null, "ts": 1644962893.3822227}]}, "version": 1502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.3833091}]}, "version": 1503}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Epoch 0, K-means clustering 4, Average clustering time 0.048, Prec@1 88.931", "step": null, "ts": 1644962893.4420342}]}, "version": 1504}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962893.4429345}]}, "version": 1505}
{"obj": {"type": "LogFloats", "path": ["metrics", "current_acc"], "values": [{"value": 80.00000184257075, "step": null, "ts": 1644962894.2011902}]}, "version": 1506}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.080183744430542, "step": null, "ts": 1644962895.1604946}]}, "version": 1507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0507],\n        [0.0214],\n        [0.0312],\n        [0.0268],\n        [0.0194],\n        [0.0275],\n        [0.0387],\n        [0.0344],\n        [0.0283],\n        [0.0451],\n        [0.0384],\n        [0.0362],\n        [0.0315],\n        [0.0138],\n        [0.0465],\n        [0.0412],\n        [0.0340],\n        [0.0214],\n        [0.0325],\n        [0.0271],\n        [0.0293],\n        [0.0160],\n        [0.0178],\n        [0.0543],\n        [0.0208],\n        [0.0193],\n        [0.0529],\n        [0.0299],\n        [0.0201],\n        [0.0304],\n        [0.0384],\n        [0.0359],\n        [0.0165],\n        [0.0340],\n        [0.0562],\n        [0.0434],\n        [0.0460],\n        [0.0318],\n        [0.0378],\n        [0.0224],\n        [0.0232],\n        [0.0443]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.171049}]}, "version": 1508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.1772947}]}, "version": 1509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0359, 0.0295, 0.0221,  ..., 0.0168, 0.0167, 0.0321],\n        [0.0244, 0.0276, 0.0118,  ..., 0.0175, 0.0132, 0.0411],\n        [0.0289, 0.0193, 0.0219,  ..., 0.0163, 0.0235, 0.0374],\n        ...,\n        [0.0210, 0.0340, 0.0194,  ..., 0.0311, 0.0145, 0.0214],\n        [0.0179, 0.0375, 0.0210,  ..., 0.0182, 0.0190, 0.0447],\n        [0.0339, 0.0297, 0.0137,  ..., 0.0202, 0.0211, 0.0295]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.1795142}]}, "version": 1510}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.1805227}]}, "version": 1511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1774, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962895.181763}]}, "version": 1512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.1828039}]}, "version": 1513}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0043, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962895.184001}]}, "version": 1514}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.1849551}]}, "version": 1515}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 744.4346313476562, "step": null, "ts": 1644962895.1863275}]}, "version": 1516}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.22868497669696808, "step": null, "ts": 1644962895.2747562}]}, "version": 1517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0412],\n        [0.0422],\n        [0.0324],\n        [0.0170],\n        [0.0374],\n        [0.0327],\n        [0.0271],\n        [0.0417],\n        [0.0204],\n        [0.0212],\n        [0.0179],\n        [0.0279],\n        [0.0227],\n        [0.0263],\n        [0.0257],\n        [0.0379],\n        [0.0513],\n        [0.0356],\n        [0.0143],\n        [0.0518],\n        [0.0247],\n        [0.0230],\n        [0.0284],\n        [0.0232],\n        [0.0322],\n        [0.0296],\n        [0.0231],\n        [0.0392],\n        [0.0332],\n        [0.0391],\n        [0.0304],\n        [0.0298],\n        [0.0439],\n        [0.0304],\n        [0.0370],\n        [0.0337],\n        [0.0291],\n        [0.0306],\n        [0.0334],\n        [0.0247],\n        [0.0369],\n        [0.0710]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.2856138}]}, "version": 1518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.298363}]}, "version": 1519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0236, 0.0330, 0.0264,  ..., 0.0243, 0.0359, 0.0203],\n        [0.0381, 0.0613, 0.0282,  ..., 0.0144, 0.0220, 0.0424],\n        [0.0239, 0.0232, 0.0307,  ..., 0.0326, 0.0260, 0.0258],\n        ...,\n        [0.0374, 0.0196, 0.0133,  ..., 0.0097, 0.0236, 0.0275],\n        [0.0432, 0.0343, 0.0304,  ..., 0.0309, 0.0359, 0.0309],\n        [0.0101, 0.0189, 0.0144,  ..., 0.0267, 0.0104, 0.0284]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.303486}]}, "version": 1520}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.3045576}]}, "version": 1521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1266, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962895.3057404}]}, "version": 1522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.3067932}]}, "version": 1523}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0053, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962895.3082428}]}, "version": 1524}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.3091326}]}, "version": 1525}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.275533676147461, "step": null, "ts": 1644962895.3102305}]}, "version": 1526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "The penalty weight is 0.024995", "step": null, "ts": 1644962895.5580037}]}, "version": 1527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.5591235}]}, "version": 1528}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.193549633026123, "step": null, "ts": 1644962895.7332182}]}, "version": 1529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.2188],\n        [0.0940],\n        [0.1215],\n        [0.1217],\n        [0.1616],\n        [0.2071],\n        [0.6086],\n        [0.1397],\n        [0.1065],\n        [0.1515],\n        [0.3766],\n        [0.2352],\n        [0.4088],\n        [0.1531],\n        [0.0730],\n        [0.1825],\n        [0.0690],\n        [0.3600],\n        [0.6938],\n        [0.0789],\n        [0.1480],\n        [0.0541],\n        [0.3096],\n        [0.0608],\n        [0.4032],\n        [0.0617],\n        [0.5187],\n        [0.2191],\n        [0.0781],\n        [0.1280],\n        [0.0568],\n        [0.1028],\n        [0.2175],\n        [0.1688],\n        [0.4354],\n        [0.1122],\n        [0.3337],\n        [0.1868],\n        [0.1623],\n        [0.3502],\n        [0.1273],\n        [0.1149]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.7412143}]}, "version": 1530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.74696}]}, "version": 1531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0177, 0.0268, 0.0135,  ..., 0.0229, 0.0138, 0.0397],\n        [0.0311, 0.0234, 0.0244,  ..., 0.0370, 0.0401, 0.0355],\n        [0.0262, 0.0443, 0.0245,  ..., 0.0256, 0.0241, 0.0299],\n        ...,\n        [0.0532, 0.0430, 0.0157,  ..., 0.0319, 0.0270, 0.0251],\n        [0.0272, 0.0454, 0.0370,  ..., 0.0308, 0.0243, 0.0367],\n        [0.0359, 0.0493, 0.0255,  ..., 0.0324, 0.0177, 0.0227]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.7493362}]}, "version": 1532}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.7504392}]}, "version": 1533}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1112, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962895.7517061}]}, "version": 1534}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.752657}]}, "version": 1535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0043, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962895.7537904}]}, "version": 1536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.7547078}]}, "version": 1537}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 2107.477294921875, "step": null, "ts": 1644962895.7558215}]}, "version": 1538}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.3016635477542877, "step": null, "ts": 1644962895.8658137}]}, "version": 1539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.1453],\n        [0.1824],\n        [0.2776],\n        [0.2180],\n        [0.1476],\n        [0.1691],\n        [0.2392],\n        [0.5734],\n        [0.1270],\n        [0.1937],\n        [0.1835],\n        [0.1383],\n        [0.0849],\n        [0.0845],\n        [0.1394],\n        [0.1368],\n        [0.2768],\n        [0.1189],\n        [0.1245],\n        [0.1037],\n        [0.1216],\n        [0.0935],\n        [0.1113],\n        [0.1414],\n        [0.3751],\n        [0.1312],\n        [0.4031],\n        [0.1420],\n        [0.1643],\n        [0.2409],\n        [0.2283],\n        [0.2256],\n        [0.5071],\n        [0.1067],\n        [0.1929],\n        [0.2926],\n        [0.1871],\n        [0.2370],\n        [0.1668],\n        [0.4000],\n        [0.1546],\n        [0.1425]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.8717234}]}, "version": 1540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.8806648}]}, "version": 1541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0300, 0.0555, 0.0195,  ..., 0.0240, 0.0206, 0.0246],\n        [0.0295, 0.0282, 0.0160,  ..., 0.0329, 0.0251, 0.0444],\n        [0.0308, 0.0302, 0.0309,  ..., 0.0142, 0.0222, 0.0267],\n        ...,\n        [0.0222, 0.0136, 0.0093,  ..., 0.0086, 0.0221, 0.0257],\n        [0.0419, 0.0340, 0.0216,  ..., 0.0305, 0.0392, 0.0463],\n        [0.0376, 0.0316, 0.0370,  ..., 0.0144, 0.0207, 0.0448]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962895.885631}]}, "version": 1542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.8865428}]}, "version": 1543}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1006, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962895.887794}]}, "version": 1544}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.8885536}]}, "version": 1545}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0054, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962895.8896906}]}, "version": 1546}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962895.8904126}]}, "version": 1547}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 3.161377429962158, "step": null, "ts": 1644962895.8913286}]}, "version": 1548}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.2490836381912231, "step": null, "ts": 1644962896.3160048}]}, "version": 1549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9573],\n        [0.9806],\n        [0.9048],\n        [0.9764],\n        [1.0000],\n        [0.7739],\n        [0.9997],\n        [1.0000],\n        [0.8798],\n        [0.9995],\n        [0.9921],\n        [0.9960],\n        [0.9996],\n        [0.9997],\n        [0.9766],\n        [0.9978],\n        [0.9989],\n        [0.7534],\n        [0.9990],\n        [0.9065],\n        [0.9933],\n        [0.9721],\n        [0.8537],\n        [0.9889],\n        [0.9147],\n        [1.0000],\n        [0.9957],\n        [0.9886],\n        [0.9883],\n        [0.9895],\n        [0.9984],\n        [1.0000],\n        [1.0000],\n        [0.9936],\n        [0.9802],\n        [0.7978],\n        [0.9874],\n        [0.9915],\n        [0.9950],\n        [0.9992],\n        [0.9698],\n        [0.9034]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.3313124}]}, "version": 1550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.3323486}]}, "version": 1551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0546, 0.0246, 0.0213,  ..., 0.0431, 0.0241, 0.0331],\n        [0.0571, 0.0407, 0.0192,  ..., 0.0294, 0.0250, 0.0244],\n        [0.0526, 0.0241, 0.0195,  ..., 0.0380, 0.0396, 0.0335],\n        ...,\n        [0.0450, 0.0433, 0.0172,  ..., 0.0258, 0.0299, 0.0233],\n        [0.0296, 0.0268, 0.0212,  ..., 0.0222, 0.0274, 0.0285],\n        [0.0500, 0.0377, 0.0321,  ..., 0.0219, 0.0316, 0.0374]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.3347151}]}, "version": 1552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.3356986}]}, "version": 1553}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.3538, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962896.3368468}]}, "version": 1554}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.3378527}]}, "version": 1555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-2.0009, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962896.3392553}]}, "version": 1556}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.340276}]}, "version": 1557}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962896.3414145}]}, "version": 1558}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.2886667847633362, "step": null, "ts": 1644962896.437435}]}, "version": 1559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9782],\n        [0.9911],\n        [0.8451],\n        [0.9758],\n        [0.9728],\n        [0.9959],\n        [0.9946],\n        [0.9979],\n        [0.9422],\n        [0.9503],\n        [1.0000],\n        [1.0000],\n        [0.9969],\n        [0.8392],\n        [0.9422],\n        [0.8319],\n        [0.9639],\n        [0.9998],\n        [0.9949],\n        [0.9802],\n        [0.8813],\n        [0.9962],\n        [1.0000],\n        [0.9865],\n        [0.9963],\n        [0.9999],\n        [0.6023],\n        [0.9999],\n        [0.9668],\n        [0.9371],\n        [0.9507],\n        [0.9838],\n        [0.9329],\n        [0.9274],\n        [0.9890],\n        [0.8078],\n        [1.0000],\n        [0.9261],\n        [1.0000],\n        [1.0000],\n        [0.9749],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.4487321}]}, "version": 1560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.457819}]}, "version": 1561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 4.2125e-02,  4.0152e-02,  1.6868e-02,  ...,  3.0217e-02,\n          2.6328e-02,  3.8512e-02],\n        [ 4.2990e-02,  1.9875e-02,  1.6004e-02,  ...,  1.9911e-02,\n          3.4507e-02,  2.8151e-02],\n        [ 3.3370e-02,  2.4348e-02,  3.6902e-02,  ...,  2.1801e-02,\n          2.4027e-02,  2.4758e-02],\n        ...,\n        [-1.1309e-03, -2.3331e-04, -1.2458e-04,  ..., -4.6556e-05,\n         -1.1760e-04, -1.4117e-04],\n        [ 4.6651e-02,  2.4849e-02,  2.2181e-02,  ...,  2.5911e-02,\n          2.6795e-02,  2.5174e-02],\n        [ 4.4703e-02,  2.8963e-02,  1.4424e-02,  ...,  4.2135e-02,\n          6.1254e-02,  3.7548e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.462867}]}, "version": 1562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.463864}]}, "version": 1563}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.5722, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962896.465245}]}, "version": 1564}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.4661674}]}, "version": 1565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.2460, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962896.467526}]}, "version": 1566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.4685266}]}, "version": 1567}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962896.4694343}]}, "version": 1568}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962896.8399425}]}, "version": 1569}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.963336944580078, "step": null, "ts": 1644962896.8399425}]}, "version": 1570}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 98.0, "step": null, "ts": 1644962896.8399425}]}, "version": 1571}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0460205078125, "step": null, "ts": 1644962896.8399425}]}, "version": 1572}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 1.711814522743225, "step": null, "ts": 1644962896.8977132}]}, "version": 1573}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9942],\n        [0.5313],\n        [0.9934],\n        [0.9744],\n        [0.9964],\n        [0.9971],\n        [0.9683],\n        [0.4873],\n        [0.9932],\n        [0.9945],\n        [0.7171],\n        [0.9395],\n        [0.9991],\n        [0.9942],\n        [0.9950],\n        [0.9957],\n        [0.9711],\n        [0.6525],\n        [0.9958],\n        [0.9966],\n        [0.9988],\n        [0.9940],\n        [0.9977],\n        [0.9992],\n        [0.9959],\n        [0.9975],\n        [1.0000],\n        [0.9958],\n        [1.0000],\n        [0.9965],\n        [0.9952],\n        [0.9948],\n        [0.9977],\n        [0.9970],\n        [0.9943],\n        [0.9819],\n        [0.9936],\n        [0.9961],\n        [0.9959],\n        [1.0000],\n        [0.7845],\n        [0.9959]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.9068482}]}, "version": 1574}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.9152262}]}, "version": 1575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.4687e-02,  2.3664e-02,  2.5729e-02,  ...,  2.9651e-02,\n          2.6795e-02,  2.3636e-02],\n        [ 4.2358e-02,  3.7653e-02,  2.3953e-02,  ...,  3.3889e-02,\n          2.0961e-02,  3.9621e-02],\n        [ 4.9035e-02,  2.1027e-02,  2.6954e-02,  ...,  3.1648e-02,\n          3.2607e-02,  2.2536e-02],\n        ...,\n        [-1.3464e-03,  2.8639e-06, -2.5547e-06,  ..., -1.3636e-05,\n         -5.6618e-05, -3.6761e-05],\n        [ 3.5266e-02,  2.8352e-02,  2.9954e-02,  ...,  3.5012e-02,\n          2.7616e-02,  2.4751e-02],\n        [ 4.8101e-02,  3.1233e-02,  2.5624e-02,  ...,  2.8252e-02,\n          2.8000e-02,  2.6004e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962896.924198}]}, "version": 1576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.9253044}]}, "version": 1577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.8470, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962896.926704}]}, "version": 1578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.9277344}]}, "version": 1579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0013, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962896.9289103}]}, "version": 1580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962896.9298627}]}, "version": 1581}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962896.9311323}]}, "version": 1582}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 0.9241903424263, "step": null, "ts": 1644962897.0195487}]}, "version": 1583}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9580],\n        [0.9796],\n        [0.8697],\n        [0.9893],\n        [0.9551],\n        [0.9778],\n        [0.9629],\n        [0.9405],\n        [0.9631],\n        [0.9811],\n        [0.9734],\n        [0.9665],\n        [0.9577],\n        [0.9531],\n        [0.9740],\n        [0.9721],\n        [0.9794],\n        [0.9353],\n        [0.9737],\n        [0.9824],\n        [0.9984],\n        [0.9678],\n        [0.9986],\n        [0.9771],\n        [0.9644],\n        [0.9613],\n        [0.9797],\n        [0.9190],\n        [0.9562],\n        [0.9684],\n        [0.9726],\n        [0.9965],\n        [0.9907],\n        [0.9924],\n        [0.9907],\n        [0.9732],\n        [0.9626],\n        [0.9561],\n        [0.6795],\n        [0.9300],\n        [0.9557],\n        [0.9657]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.02529}]}, "version": 1584}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.0326428}]}, "version": 1585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0447, 0.0265, 0.0254,  ..., 0.0307, 0.0314, 0.0246],\n        [0.0366, 0.0239, 0.0254,  ..., 0.0351, 0.0310, 0.0257],\n        [0.0685, 0.0282, 0.0364,  ..., 0.0289, 0.0316, 0.0389],\n        ...,\n        [0.0528, 0.0322, 0.0273,  ..., 0.0341, 0.0292, 0.0269],\n        [0.0448, 0.0266, 0.0268,  ..., 0.0311, 0.0314, 0.0235],\n        [0.0373, 0.0236, 0.0223,  ..., 0.0333, 0.0336, 0.0236]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.0376296}]}, "version": 1586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.038654}]}, "version": 1587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0005, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962897.0400236}]}, "version": 1588}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.0410457}]}, "version": 1589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0721e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962897.04253}]}, "version": 1590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.0435374}]}, "version": 1591}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 6.044102668762207, "step": null, "ts": 1644962897.0446203}]}, "version": 1592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.571 (0.571)\tDT 0.000 (0.000)\tS@1 83.333 (83.333)\tLoss nan (nan)", "step": null, "ts": 1644962897.2872632}]}, "version": 1593}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.3069327}]}, "version": 1594}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.3070948123931885, "step": null, "ts": 1644962897.4749012}]}, "version": 1595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9403],\n        [0.9282],\n        [0.9319],\n        [0.9315],\n        [0.9213],\n        [0.9250],\n        [0.9370],\n        [0.9997],\n        [0.9313],\n        [0.8881],\n        [0.9279],\n        [0.9150],\n        [0.9283],\n        [0.8439],\n        [0.9317],\n        [0.9285],\n        [0.9314],\n        [0.9274],\n        [0.9025],\n        [0.9159],\n        [0.9214],\n        [0.9327],\n        [0.9190],\n        [0.6565],\n        [0.9220],\n        [0.9331],\n        [1.0000],\n        [0.9329],\n        [0.9207],\n        [0.9334],\n        [0.8493],\n        [0.9202],\n        [0.8875],\n        [0.9284],\n        [0.7752],\n        [0.9206],\n        [0.8529],\n        [0.9270],\n        [0.9192],\n        [0.8942],\n        [0.9516],\n        [0.9245]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.4825845}]}, "version": 1596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.489404}]}, "version": 1597}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0439, 0.0213, 0.0214,  ..., 0.0359, 0.0263, 0.0196],\n        [0.0452, 0.0236, 0.0226,  ..., 0.0323, 0.0293, 0.0232],\n        [0.0459, 0.0203, 0.0196,  ..., 0.0330, 0.0288, 0.0243],\n        ...,\n        [0.0494, 0.0232, 0.0248,  ..., 0.0320, 0.0264, 0.0229],\n        [0.0543, 0.0222, 0.0227,  ..., 0.0312, 0.0250, 0.0227],\n        [0.0432, 0.0230, 0.0205,  ..., 0.0352, 0.0306, 0.0232]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.491586}]}, "version": 1598}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.492607}]}, "version": 1599}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1629, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962897.4938235}]}, "version": 1600}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.4946282}]}, "version": 1601}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9997e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962897.4957118}]}, "version": 1602}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.496594}]}, "version": 1603}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 1896.841796875, "step": null, "ts": 1644962897.497625}]}, "version": 1604}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 2.081519842147827, "step": null, "ts": 1644962897.5904512}]}, "version": 1605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9935],\n        [0.8922],\n        [0.9939],\n        [0.9934],\n        [0.9777],\n        [0.9331],\n        [0.9957],\n        [0.9713],\n        [0.9917],\n        [0.9152],\n        [0.9905],\n        [0.9898],\n        [0.9898],\n        [0.9857],\n        [1.0000],\n        [0.9864],\n        [0.9611],\n        [0.9839],\n        [0.9350],\n        [0.9931],\n        [0.9939],\n        [0.9940],\n        [0.9904],\n        [0.9927],\n        [0.9942],\n        [0.9939],\n        [0.9927],\n        [0.9916],\n        [0.9897],\n        [0.9905],\n        [0.9938],\n        [0.9860],\n        [0.9921],\n        [0.9940],\n        [0.9919],\n        [0.9911],\n        [0.9906],\n        [0.9928],\n        [1.0000],\n        [0.9928],\n        [0.9932],\n        [0.9934]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.5961757}]}, "version": 1606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.6048174}]}, "version": 1607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0538, 0.0193, 0.0201,  ..., 0.0320, 0.0257, 0.0203],\n        [0.0361, 0.0063, 0.0152,  ..., 0.0082, 0.0101, 0.0107],\n        [0.0534, 0.0213, 0.0198,  ..., 0.0316, 0.0258, 0.0209],\n        ...,\n        [0.0540, 0.0195, 0.0206,  ..., 0.0292, 0.0255, 0.0194],\n        [0.0523, 0.0204, 0.0196,  ..., 0.0313, 0.0265, 0.0201],\n        [0.0497, 0.0201, 0.0196,  ..., 0.0313, 0.0273, 0.0197]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962897.609842}]}, "version": 1608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.6106715}]}, "version": 1609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2487, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962897.6119232}]}, "version": 1610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.6128364}]}, "version": 1611}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0015, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962897.6141548}]}, "version": 1612}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962897.615024}]}, "version": 1613}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962897.616281}]}, "version": 1614}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.4074268341064453, "step": null, "ts": 1644962898.038901}]}, "version": 1615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9487],\n        [0.9491],\n        [0.9462],\n        [0.9495],\n        [0.5406],\n        [0.9472],\n        [0.9488],\n        [0.9474],\n        [1.0000],\n        [0.9474],\n        [0.9482],\n        [0.9483],\n        [0.9488],\n        [0.9361],\n        [0.9440],\n        [0.9504],\n        [0.9402],\n        [0.9502],\n        [0.9341],\n        [0.9492],\n        [0.9219],\n        [0.4392],\n        [0.9505],\n        [0.8185],\n        [0.9501],\n        [0.9474],\n        [0.6903],\n        [0.9194],\n        [0.9460],\n        [0.6681],\n        [0.9489],\n        [0.9387],\n        [0.9487],\n        [1.0000],\n        [0.9490],\n        [0.8254],\n        [0.9469],\n        [0.9474],\n        [0.9474],\n        [0.9382],\n        [0.9380],\n        [0.9487]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.049882}]}, "version": 1616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.0533268}]}, "version": 1617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0459, 0.0202, 0.0227,  ..., 0.0292, 0.0262, 0.0211],\n        [0.0462, 0.0201, 0.0224,  ..., 0.0296, 0.0262, 0.0212],\n        [0.0460, 0.0200, 0.0228,  ..., 0.0293, 0.0257, 0.0209],\n        ...,\n        [0.0453, 0.0207, 0.0229,  ..., 0.0292, 0.0256, 0.0211],\n        [0.0444, 0.0206, 0.0231,  ..., 0.0299, 0.0262, 0.0216],\n        [0.0463, 0.0202, 0.0226,  ..., 0.0294, 0.0263, 0.0212]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.0557837}]}, "version": 1618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.0568607}]}, "version": 1619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1428, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962898.0582867}]}, "version": 1620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.0593677}]}, "version": 1621}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.9936, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962898.060695}]}, "version": 1622}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.0616143}]}, "version": 1623}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962898.0626004}]}, "version": 1624}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 3.1052603721618652, "step": null, "ts": 1644962898.149473}]}, "version": 1625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9523],\n        [0.9555],\n        [0.9385],\n        [0.9482],\n        [0.9678],\n        [0.9686],\n        [0.9676],\n        [0.9674],\n        [0.9687],\n        [1.0000],\n        [0.9644],\n        [0.9671],\n        [0.9686],\n        [0.9667],\n        [0.7849],\n        [0.9695],\n        [0.9675],\n        [0.9698],\n        [0.8498],\n        [0.9681],\n        [0.9688],\n        [0.9679],\n        [0.9665],\n        [0.9674],\n        [0.9636],\n        [0.8986],\n        [0.9680],\n        [0.9540],\n        [0.9679],\n        [0.3754],\n        [0.9667],\n        [0.9670],\n        [0.9695],\n        [0.9658],\n        [0.7842],\n        [0.9655],\n        [0.9664],\n        [0.9671],\n        [0.6574],\n        [1.0000],\n        [0.9064],\n        [0.9678]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.1582756}]}, "version": 1626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.1616542}]}, "version": 1627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.6003e-02, 1.9900e-02, 2.2278e-02,  ..., 2.8952e-02, 2.5612e-02,\n         2.0660e-02],\n        [4.7336e-02, 1.9571e-02, 2.2358e-02,  ..., 2.7395e-02, 2.4369e-02,\n         2.0605e-02],\n        [4.5295e-02, 2.0402e-02, 2.2700e-02,  ..., 2.9359e-02, 2.6750e-02,\n         2.1130e-02],\n        ...,\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [4.3776e-02, 2.2573e-02, 2.5129e-02,  ..., 3.0319e-02, 2.6330e-02,\n         2.2438e-02],\n        [4.7231e-02, 1.9361e-02, 2.1891e-02,  ..., 2.8826e-02, 2.4802e-02,\n         1.9979e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.166524}]}, "version": 1628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.1703775}]}, "version": 1629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1905, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962898.1715503}]}, "version": 1630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.1724331}]}, "version": 1631}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9281e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962898.1735697}]}, "version": 1632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.1743617}]}, "version": 1633}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962898.175242}]}, "version": 1634}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.3439199924468994, "step": null, "ts": 1644962898.6421645}]}, "version": 1635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9980],\n        [0.9874],\n        [0.9978],\n        [0.9977],\n        [0.2588],\n        [0.6599],\n        [0.9964],\n        [0.9982],\n        [0.9981],\n        [0.9979],\n        [0.9978],\n        [0.9959],\n        [0.9981],\n        [0.9963],\n        [1.0000],\n        [0.9981],\n        [0.9981],\n        [0.9974],\n        [0.9954],\n        [1.0000],\n        [0.9981],\n        [0.9978],\n        [0.9980],\n        [0.9939],\n        [0.9978],\n        [0.9966],\n        [0.9980],\n        [0.9979],\n        [0.9981],\n        [0.9978],\n        [0.9981],\n        [0.9872],\n        [0.9979],\n        [0.9979],\n        [0.9979],\n        [0.2183],\n        [0.9980],\n        [0.9969],\n        [0.9999],\n        [0.9977],\n        [0.9973],\n        [0.9963]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.6512072}]}, "version": 1636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.6562507}]}, "version": 1637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0481, 0.0142, 0.0178,  ..., 0.0243, 0.0174, 0.0135],\n        [0.0415, 0.0148, 0.0181,  ..., 0.0200, 0.0176, 0.0144],\n        [0.0466, 0.0143, 0.0174,  ..., 0.0234, 0.0180, 0.0134],\n        ...,\n        [0.1071, 0.0216, 0.0238,  ..., 0.0395, 0.0391, 0.0191],\n        [0.0461, 0.0143, 0.0174,  ..., 0.0234, 0.0181, 0.0137],\n        [0.0473, 0.0147, 0.0175,  ..., 0.0228, 0.0181, 0.0134]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.658474}]}, "version": 1638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.6592095}]}, "version": 1639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1779, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962898.6603549}]}, "version": 1640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.6609511}]}, "version": 1641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9981e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962898.6622622}]}, "version": 1642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.6630158}]}, "version": 1643}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 3207.96923828125, "step": null, "ts": 1644962898.6642752}]}, "version": 1644}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 5.219321250915527, "step": null, "ts": 1644962898.7529495}]}, "version": 1645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.6927],\n        [0.9596],\n        [0.9406],\n        [0.9025],\n        [0.9580],\n        [0.9581],\n        [0.9536],\n        [0.9590],\n        [0.9532],\n        [0.9372],\n        [0.9552],\n        [0.9580],\n        [0.9538],\n        [0.9576],\n        [0.8821],\n        [0.9567],\n        [0.9607],\n        [0.9603],\n        [0.9596],\n        [0.9579],\n        [0.9584],\n        [0.9525],\n        [0.3663],\n        [0.9585],\n        [1.0000],\n        [0.9581],\n        [0.9584],\n        [0.9998],\n        [0.9569],\n        [0.9434],\n        [0.9364],\n        [0.9327],\n        [0.3770],\n        [0.9592],\n        [0.9518],\n        [0.9600],\n        [0.9344],\n        [0.9586],\n        [0.9587],\n        [0.9579],\n        [0.9479],\n        [0.9533]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.766117}]}, "version": 1646}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.7694495}]}, "version": 1647}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0364, 0.0230, 0.0271,  ..., 0.0301, 0.0267, 0.0246],\n        [0.0449, 0.0202, 0.0233,  ..., 0.0285, 0.0238, 0.0191],\n        [0.0440, 0.0210, 0.0241,  ..., 0.0288, 0.0244, 0.0199],\n        ...,\n        [0.0447, 0.0203, 0.0233,  ..., 0.0285, 0.0240, 0.0192],\n        [0.0444, 0.0206, 0.0233,  ..., 0.0280, 0.0242, 0.0191],\n        [0.0450, 0.0204, 0.0233,  ..., 0.0283, 0.0239, 0.0192]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962898.7742798}]}, "version": 1648}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.7804222}]}, "version": 1649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1302, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962898.7815146}]}, "version": 1650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.7822754}]}, "version": 1651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962898.7833633}]}, "version": 1652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962898.7838924}]}, "version": 1653}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962898.7846801}]}, "version": 1654}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.6290156841278076, "step": null, "ts": 1644962899.2443628}]}, "version": 1655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9766],\n        [1.0000],\n        [0.9767],\n        [0.9763],\n        [0.9764],\n        [0.9766],\n        [0.9761],\n        [0.9606],\n        [0.9473],\n        [0.9758],\n        [0.9763],\n        [0.4547],\n        [0.9751],\n        [0.9757],\n        [0.9764],\n        [0.9485],\n        [0.9774],\n        [0.9768],\n        [0.9763],\n        [0.9738],\n        [0.9766],\n        [0.9412],\n        [0.9764],\n        [0.9765],\n        [0.9769],\n        [0.9766],\n        [1.0000],\n        [0.9764],\n        [0.9766],\n        [0.9764],\n        [0.9737],\n        [0.9745],\n        [0.9767],\n        [0.9763],\n        [0.9772],\n        [0.9766],\n        [0.9767],\n        [0.9760],\n        [0.9768],\n        [0.9771],\n        [0.9765],\n        [0.9759]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.2544723}]}, "version": 1656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.2552667}]}, "version": 1657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 0.0444,  0.0193,  0.0224,  ...,  0.0300,  0.0221,  0.0193],\n        [-0.1542, -0.0106, -0.0161,  ..., -0.0365, -0.0264, -0.0112],\n        [ 0.0444,  0.0193,  0.0224,  ...,  0.0300,  0.0221,  0.0192],\n        ...,\n        [ 0.0445,  0.0193,  0.0224,  ...,  0.0300,  0.0220,  0.0193],\n        [ 0.0443,  0.0193,  0.0224,  ...,  0.0299,  0.0221,  0.0193],\n        [ 0.0441,  0.0193,  0.0224,  ...,  0.0299,  0.0221,  0.0193]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.2574203}]}, "version": 1658}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.2583964}]}, "version": 1659}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0704, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962899.259792}]}, "version": 1660}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.260665}]}, "version": 1661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.1542, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962899.2618375}]}, "version": 1662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.26247}]}, "version": 1663}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962899.2632663}]}, "version": 1664}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 5.201378345489502, "step": null, "ts": 1644962899.3539877}]}, "version": 1665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8540],\n        [0.9393],\n        [0.9321],\n        [0.9376],\n        [1.0000],\n        [0.9383],\n        [0.9378],\n        [0.9373],\n        [0.9366],\n        [0.9395],\n        [0.9376],\n        [0.9379],\n        [0.9306],\n        [0.8855],\n        [0.9276],\n        [0.9361],\n        [0.8620],\n        [0.1359],\n        [0.9359],\n        [0.9348],\n        [0.9374],\n        [0.9346],\n        [0.9383],\n        [0.8924],\n        [0.9061],\n        [0.9386],\n        [0.9376],\n        [0.9364],\n        [0.9373],\n        [0.9369],\n        [0.9348],\n        [0.9357],\n        [0.9257],\n        [0.5069],\n        [0.9379],\n        [0.9367],\n        [0.9377],\n        [0.9366],\n        [0.9376],\n        [0.9371],\n        [0.9374],\n        [0.7708]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.3649895}]}, "version": 1666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.3683367}]}, "version": 1667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0411, 0.0225, 0.0252,  ..., 0.0294, 0.0247, 0.0219],\n        [0.0428, 0.0217, 0.0240,  ..., 0.0309, 0.0244, 0.0213],\n        [0.0431, 0.0215, 0.0241,  ..., 0.0310, 0.0240, 0.0211],\n        ...,\n        [0.0431, 0.0214, 0.0240,  ..., 0.0309, 0.0242, 0.0213],\n        [0.0431, 0.0215, 0.0241,  ..., 0.0308, 0.0243, 0.0214],\n        [0.0372, 0.0268, 0.0264,  ..., 0.0310, 0.0292, 0.0253]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.3731134}]}, "version": 1668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.3741112}]}, "version": 1669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0652, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962899.3753715}]}, "version": 1670}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.3784993}]}, "version": 1671}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962899.3797958}]}, "version": 1672}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.3807263}]}, "version": 1673}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962899.3820925}]}, "version": 1674}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.538187265396118, "step": null, "ts": 1644962899.8504097}]}, "version": 1675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9653],\n        [1.0000],\n        [0.9962],\n        [0.9965],\n        [0.9966],\n        [0.9949],\n        [0.9807],\n        [0.9960],\n        [0.9966],\n        [0.9966],\n        [0.9965],\n        [0.9966],\n        [0.9966],\n        [0.8323],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9966],\n        [0.9966],\n        [0.9966],\n        [0.9964],\n        [0.9960],\n        [0.9966],\n        [0.9966],\n        [0.9965],\n        [0.4507],\n        [0.9962],\n        [0.9964],\n        [0.9955],\n        [0.9966],\n        [0.9963],\n        [0.9966],\n        [0.9966],\n        [0.9967],\n        [0.9965],\n        [0.9965],\n        [0.9966],\n        [0.9966],\n        [0.5988],\n        [0.9964],\n        [1.0000],\n        [0.9964]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.8643174}]}, "version": 1676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.865253}]}, "version": 1677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.7533e-02, 2.1565e-02, 2.2783e-02,  ..., 3.1702e-02, 2.2610e-02,\n         1.9935e-02],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [4.0860e-02, 1.7100e-02, 2.0212e-02,  ..., 2.9805e-02, 1.9272e-02,\n         1.6322e-02],\n        ...,\n        [4.0705e-02, 1.7193e-02, 2.0282e-02,  ..., 3.0264e-02, 1.9664e-02,\n         1.6627e-02],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [4.1229e-02, 1.7178e-02, 2.0227e-02,  ..., 2.9991e-02, 1.9396e-02,\n         1.6324e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.8674383}]}, "version": 1678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.8683195}]}, "version": 1679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0839, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962899.869643}]}, "version": 1680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.8705611}]}, "version": 1681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962899.8717265}]}, "version": 1682}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.872319}]}, "version": 1683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 422.4580383300781, "step": null, "ts": 1644962899.8732975}]}, "version": 1684}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962899.8755803}]}, "version": 1685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962899.8762548}]}, "version": 1686}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 7.295064449310303, "step": null, "ts": 1644962899.9736574}]}, "version": 1687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9679],\n        [1.0000],\n        [1.0000],\n        [0.9972],\n        [0.9999],\n        [1.0000],\n        [0.9993],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.8490],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [0.9392],\n        [0.9999],\n        [0.1314],\n        [1.0000],\n        [0.9999],\n        [0.9999]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.9830315}]}, "version": 1688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.9863563}]}, "version": 1689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[5.0488e-02, 1.3242e-02, 1.7333e-02,  ..., 3.0799e-02, 1.4949e-02,\n         1.2608e-02],\n        [5.1142e-02, 1.3628e-02, 1.7670e-02,  ..., 3.2126e-02, 1.5442e-02,\n         1.2834e-02],\n        [5.0064e-02, 1.3430e-02, 1.7413e-02,  ..., 3.0844e-02, 1.5396e-02,\n         1.2636e-02],\n        ...,\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [4.9462e-02, 1.3395e-02, 1.7208e-02,  ..., 3.1326e-02, 1.5160e-02,\n         1.2513e-02],\n        [5.1951e-02, 1.3459e-02, 1.7617e-02,  ..., 3.1612e-02, 1.5250e-02,\n         1.2754e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962899.9912581}]}, "version": 1690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.99682}]}, "version": 1691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1431, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962899.998345}]}, "version": 1692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962899.99927}]}, "version": 1693}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0412, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962900.000603}]}, "version": 1694}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.0016017}]}, "version": 1695}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962900.005571}]}, "version": 1696}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.3538644313812256, "step": null, "ts": 1644962900.4653482}]}, "version": 1697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.3131],\n        [0.9863],\n        [0.9802],\n        [0.9987],\n        [0.9795],\n        [1.0000],\n        [0.9869],\n        [0.9858],\n        [0.7511],\n        [0.9863],\n        [0.9867],\n        [0.9853],\n        [0.9841],\n        [0.9863],\n        [0.9871],\n        [0.4470],\n        [0.9880],\n        [0.9879],\n        [0.9855],\n        [0.9877],\n        [0.9874],\n        [0.9875],\n        [0.9873],\n        [0.9868],\n        [0.9877],\n        [0.9871],\n        [0.9880],\n        [0.9874],\n        [0.9863],\n        [0.9836],\n        [0.9872],\n        [0.9878],\n        [0.9875],\n        [0.9876],\n        [0.9870],\n        [0.9875],\n        [0.9810],\n        [0.7768],\n        [0.9795],\n        [0.9871],\n        [0.9816],\n        [0.9879]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962900.4716716}]}, "version": 1698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.4784732}]}, "version": 1699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0383, 0.0331, 0.0302,  ..., 0.0313, 0.0324, 0.0257],\n        [0.0376, 0.0200, 0.0220,  ..., 0.0317, 0.0206, 0.0179],\n        [0.0360, 0.0196, 0.0220,  ..., 0.0310, 0.0209, 0.0180],\n        ...,\n        [0.0367, 0.0203, 0.0217,  ..., 0.0316, 0.0207, 0.0180],\n        [0.0364, 0.0212, 0.0227,  ..., 0.0313, 0.0217, 0.0189],\n        [0.0375, 0.0201, 0.0220,  ..., 0.0316, 0.0206, 0.0179]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962900.4806836}]}, "version": 1700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.4816067}]}, "version": 1701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1279, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962900.482886}]}, "version": 1702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.483742}]}, "version": 1703}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962900.4851863}]}, "version": 1704}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.4860651}]}, "version": 1705}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 1910.691650390625, "step": null, "ts": 1644962900.4874146}]}, "version": 1706}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 7.73887300491333, "step": null, "ts": 1644962900.5831473}]}, "version": 1707}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9944],\n        [0.9999],\n        [0.9999],\n        [0.9998],\n        [0.9998],\n        [0.9999],\n        [0.9999],\n        [0.9996],\n        [0.9998],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9998],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9690],\n        [0.9999],\n        [0.9998],\n        [1.0000],\n        [0.9999],\n        [0.9998],\n        [0.9997],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [0.9831],\n        [0.9998],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [0.9999]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962900.5892348}]}, "version": 1708}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.5927882}]}, "version": 1709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0256, 0.0176, 0.0181,  ..., 0.0276, 0.0494, 0.0215],\n        [0.0403, 0.0137, 0.0161,  ..., 0.0295, 0.0137, 0.0118],\n        [0.0405, 0.0137, 0.0162,  ..., 0.0295, 0.0137, 0.0118],\n        ...,\n        [0.0387, 0.0133, 0.0159,  ..., 0.0287, 0.0137, 0.0118],\n        [0.0403, 0.0137, 0.0161,  ..., 0.0297, 0.0137, 0.0118],\n        [0.1063, 0.0112, 0.0178,  ..., 0.0326, 0.0191, 0.0108]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962900.5980148}]}, "version": 1710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.6041398}]}, "version": 1711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1852, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962900.6054811}]}, "version": 1712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.6063957}]}, "version": 1713}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.7554, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962900.6076288}]}, "version": 1714}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962900.6085289}]}, "version": 1715}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962900.6095963}]}, "version": 1716}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.586686611175537, "step": null, "ts": 1644962901.0760362}]}, "version": 1717}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9978],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9970],\n        [0.9984],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9981],\n        [0.9984],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9984],\n        [0.9629],\n        [0.9984],\n        [0.9984],\n        [0.9982],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9984],\n        [0.9984],\n        [0.9983],\n        [0.9984],\n        [0.9984],\n        [0.9993],\n        [0.9983],\n        [0.9984],\n        [0.9983],\n        [0.9984],\n        [1.0000],\n        [1.0000],\n        [0.9984],\n        [0.9984],\n        [0.9985],\n        [0.9983],\n        [0.9984]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.0836277}]}, "version": 1718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.0906448}]}, "version": 1719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0380, 0.0190, 0.0206,  ..., 0.0295, 0.0165, 0.0150],\n        [0.0386, 0.0185, 0.0203,  ..., 0.0292, 0.0161, 0.0145],\n        [0.0387, 0.0183, 0.0202,  ..., 0.0291, 0.0160, 0.0144],\n        ...,\n        [0.0388, 0.0182, 0.0202,  ..., 0.0292, 0.0159, 0.0143],\n        [0.0385, 0.0183, 0.0203,  ..., 0.0290, 0.0161, 0.0144],\n        [0.0388, 0.0183, 0.0203,  ..., 0.0291, 0.0160, 0.0144]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.0929575}]}, "version": 1720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.0939047}]}, "version": 1721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1115, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962901.0953283}]}, "version": 1722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.0963023}]}, "version": 1723}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962901.0974808}]}, "version": 1724}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.0983992}]}, "version": 1725}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 1655.1544189453125, "step": null, "ts": 1644962901.0994108}]}, "version": 1726}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 8.216599464416504, "step": null, "ts": 1644962901.1889899}]}, "version": 1727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9996],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9996],\n        [1.0000],\n        [0.9996],\n        [0.9997],\n        [0.9996],\n        [1.0000],\n        [0.9996],\n        [0.9996],\n        [0.9997],\n        [0.9996],\n        [0.9997],\n        [0.9996],\n        [0.9996],\n        [0.9997],\n        [0.9996],\n        [0.9995],\n        [0.9997],\n        [0.9996],\n        [0.9973],\n        [0.9997],\n        [0.9996],\n        [0.9996],\n        [0.9997],\n        [0.9996],\n        [0.9992],\n        [0.9995],\n        [1.0000],\n        [0.9996],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9432],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.1949334}]}, "version": 1728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.198328}]}, "version": 1729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0388, 0.0162, 0.0184,  ..., 0.0280, 0.0138, 0.0125],\n        [0.0394, 0.0161, 0.0184,  ..., 0.0283, 0.0137, 0.0124],\n        [0.0393, 0.0161, 0.0184,  ..., 0.0283, 0.0137, 0.0124],\n        ...,\n        [0.0395, 0.0162, 0.0183,  ..., 0.0282, 0.0137, 0.0124],\n        [0.0394, 0.0161, 0.0184,  ..., 0.0283, 0.0137, 0.0124],\n        [0.0395, 0.0161, 0.0184,  ..., 0.0283, 0.0137, 0.0124]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.2032514}]}, "version": 1730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.2091997}]}, "version": 1731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1232, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962901.2107005}]}, "version": 1732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.211605}]}, "version": 1733}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9985e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962901.2127688}]}, "version": 1734}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.2136679}]}, "version": 1735}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962901.2146986}]}, "version": 1736}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.492516040802002, "step": null, "ts": 1644962901.662832}]}, "version": 1737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9915],\n        [0.9762],\n        [0.9802],\n        [0.9913],\n        [0.9916],\n        [0.9917],\n        [0.9916],\n        [0.7319],\n        [0.9914],\n        [0.9916],\n        [0.9913],\n        [0.9913],\n        [0.9914],\n        [0.9913],\n        [0.9914],\n        [0.9912],\n        [0.9917],\n        [0.9912],\n        [0.9917],\n        [0.9914],\n        [0.9917],\n        [0.9916],\n        [0.9914],\n        [0.9917],\n        [0.9899],\n        [0.9916],\n        [0.9916],\n        [0.9917],\n        [0.9913],\n        [0.9917],\n        [0.9916],\n        [1.0000],\n        [0.9913],\n        [0.9737],\n        [0.9917],\n        [0.9915],\n        [0.9898],\n        [0.9912],\n        [0.7378],\n        [0.8091],\n        [0.9914],\n        [0.9915]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.6716528}]}, "version": 1738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.679137}]}, "version": 1739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0375, 0.0235, 0.0255,  ..., 0.0331, 0.0193, 0.0180],\n        [0.0379, 0.0263, 0.0265,  ..., 0.0338, 0.0234, 0.0198],\n        [0.0728, 0.0158, 0.0261,  ..., 0.0329, 0.0256, 0.0203],\n        ...,\n        [0.0361, 0.0294, 0.0294,  ..., 0.0343, 0.0263, 0.0240],\n        [0.0375, 0.0235, 0.0254,  ..., 0.0332, 0.0194, 0.0180],\n        [0.0375, 0.0235, 0.0254,  ..., 0.0332, 0.0194, 0.0180]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.6816077}]}, "version": 1740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.6823802}]}, "version": 1741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1079, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962901.6836789}]}, "version": 1742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.6846895}]}, "version": 1743}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962901.6858046}]}, "version": 1744}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.686663}]}, "version": 1745}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 1747.1392822265625, "step": null, "ts": 1644962901.6877842}]}, "version": 1746}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 8.898509979248047, "step": null, "ts": 1644962901.7726853}]}, "version": 1747}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.8469],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9859],\n        [1.0000],\n        [0.9999],\n        [0.3955],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [1.0000],\n        [0.9999],\n        [1.0000],\n        [0.9995],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.7838054}]}, "version": 1748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.787192}]}, "version": 1749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0421, 0.0182, 0.0217,  ..., 0.0338, 0.0125, 0.0123],\n        [0.0407, 0.0181, 0.0211,  ..., 0.0336, 0.0124, 0.0124],\n        [0.0430, 0.0185, 0.0221,  ..., 0.0345, 0.0127, 0.0124],\n        ...,\n        [0.0370, 0.0194, 0.0221,  ..., 0.0313, 0.0140, 0.0134],\n        [0.0420, 0.0182, 0.0216,  ..., 0.0338, 0.0126, 0.0122],\n        [0.0446, 0.0189, 0.0228,  ..., 0.0357, 0.0130, 0.0127]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962901.7919693}]}, "version": 1750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.7979465}]}, "version": 1751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1775, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962901.7993162}]}, "version": 1752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.8002484}]}, "version": 1753}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0005, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962901.8012574}]}, "version": 1754}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962901.8032393}]}, "version": 1755}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962901.8041492}]}, "version": 1756}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.1276895999908447, "step": null, "ts": 1644962902.2517233}]}, "version": 1757}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.6783],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.2122],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.2639],\n        [1.0000],\n        [0.9988],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9992],\n        [0.9989],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.2625635}]}, "version": 1758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.2686818}]}, "version": 1759}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 5.4359e-02,  2.5093e-02,  3.3022e-02,  ...,  4.8765e-02,\n          1.4725e-02,  1.5397e-02],\n        [-2.7210e-02, -1.0790e-02, -1.4850e-02,  ..., -2.3676e-02,\n         -5.7928e-03, -6.3516e-03],\n        [-9.3905e-03, -3.5971e-03, -5.0384e-03,  ..., -8.1961e-03,\n         -1.8739e-03, -2.0873e-03],\n        ...,\n        [-1.4034e-02, -5.4735e-03, -7.6449e-03,  ..., -1.2242e-02,\n         -2.8849e-03, -3.1925e-03],\n        [ 1.0000e-05,  1.0000e-05,  1.0000e-05,  ...,  1.0000e-05,\n          1.0000e-05,  1.0000e-05],\n        [-1.9739e-02, -7.7732e-03, -1.0711e-02,  ..., -1.7066e-02,\n         -4.1487e-03, -4.5796e-03]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.270834}]}, "version": 1760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.2734177}]}, "version": 1761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.5885, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962902.2744563}]}, "version": 1762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.2750454}]}, "version": 1763}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.3177, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962902.2761128}]}, "version": 1764}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.2770023}]}, "version": 1765}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962902.2781045}]}, "version": 1766}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 10.022266387939453, "step": null, "ts": 1644962902.3670676}]}, "version": 1767}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [0.9999],\n        [0.8821],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9998],\n        [0.9999],\n        [1.0000],\n        [0.5196],\n        [0.9998],\n        [0.9999],\n        [0.9999],\n        [0.9998],\n        [0.9998],\n        [0.8161],\n        [1.0000],\n        [1.0000],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9605],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999],\n        [0.9999]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.375202}]}, "version": 1768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.3787172}]}, "version": 1769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0404, 0.0198, 0.0248,  ..., 0.0362, 0.0122, 0.0132],\n        [0.0399, 0.0197, 0.0246,  ..., 0.0360, 0.0122, 0.0131],\n        [0.0394, 0.0196, 0.0244,  ..., 0.0354, 0.0122, 0.0130],\n        ...,\n        [0.0389, 0.0196, 0.0244,  ..., 0.0353, 0.0123, 0.0131],\n        [0.0389, 0.0195, 0.0242,  ..., 0.0352, 0.0123, 0.0130],\n        [0.0405, 0.0198, 0.0248,  ..., 0.0364, 0.0122, 0.0132]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.3883483}]}, "version": 1770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.390485}]}, "version": 1771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2369, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962902.3942547}]}, "version": 1772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.3951275}]}, "version": 1773}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0007, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962902.3965812}]}, "version": 1774}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.3974056}]}, "version": 1775}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962902.3984497}]}, "version": 1776}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.3308823108673096, "step": null, "ts": 1644962902.8754506}]}, "version": 1777}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9609],\n        [0.9582],\n        [0.9616],\n        [0.9536],\n        [0.9606],\n        [0.9967],\n        [0.9617],\n        [0.9632],\n        [0.9633],\n        [0.9633],\n        [0.9571],\n        [0.9601],\n        [0.9628],\n        [0.9610],\n        [0.7965],\n        [0.9619],\n        [0.9631],\n        [0.9612],\n        [0.8077],\n        [1.0000],\n        [0.9633],\n        [0.9602],\n        [0.9572],\n        [0.9583],\n        [0.9549],\n        [0.9633],\n        [0.9617],\n        [0.9850],\n        [0.9597],\n        [0.9633],\n        [1.0000],\n        [1.0000],\n        [0.9620],\n        [0.9585],\n        [0.9272],\n        [0.9628],\n        [0.9612],\n        [0.9586],\n        [0.7420],\n        [0.9614],\n        [0.9633],\n        [0.9616]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.8853548}]}, "version": 1778}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.892462}]}, "version": 1779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0318, 0.0208, 0.0316,  ..., 0.0305, 0.0113, 0.0125],\n        [0.0319, 0.0208, 0.0315,  ..., 0.0304, 0.0114, 0.0125],\n        [0.0319, 0.0206, 0.0314,  ..., 0.0302, 0.0112, 0.0123],\n        ...,\n        [0.0318, 0.0208, 0.0315,  ..., 0.0305, 0.0112, 0.0124],\n        [0.0317, 0.0206, 0.0314,  ..., 0.0303, 0.0111, 0.0123],\n        [0.0318, 0.0207, 0.0314,  ..., 0.0303, 0.0112, 0.0124]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962902.8947468}]}, "version": 1780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.8957002}]}, "version": 1781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2363, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962902.896868}]}, "version": 1782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.8977904}]}, "version": 1783}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0014, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962902.8992317}]}, "version": 1784}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962902.9000354}]}, "version": 1785}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962902.9013689}]}, "version": 1786}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 9.52850341796875, "step": null, "ts": 1644962902.9911501}]}, "version": 1787}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9612],\n        [0.9617],\n        [0.7599],\n        [0.9571],\n        [0.9581],\n        [0.9616],\n        [0.9177],\n        [0.9594],\n        [0.9598],\n        [0.9602],\n        [0.9601],\n        [0.9235],\n        [0.9621],\n        [0.9619],\n        [0.9609],\n        [0.9619],\n        [0.9615],\n        [0.9620],\n        [0.9620],\n        [0.9592],\n        [1.0000],\n        [0.9619],\n        [0.9618],\n        [0.9562],\n        [0.9603],\n        [0.7469],\n        [0.9603],\n        [0.9620],\n        [0.9609],\n        [0.9617],\n        [1.0000],\n        [0.9606],\n        [0.9437],\n        [0.9547],\n        [0.9608],\n        [0.7452],\n        [0.9619],\n        [0.9613],\n        [0.9345],\n        [0.9609],\n        [0.9564],\n        [0.9321]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.0018842}]}, "version": 1788}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.0107381}]}, "version": 1789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0318, 0.0209, 0.0316,  ..., 0.0306, 0.0113, 0.0125],\n        [0.0318, 0.0208, 0.0316,  ..., 0.0305, 0.0113, 0.0124],\n        [0.0337, 0.0278, 0.0339,  ..., 0.0335, 0.0187, 0.0190],\n        ...,\n        [0.0318, 0.0209, 0.0316,  ..., 0.0305, 0.0113, 0.0125],\n        [0.0319, 0.0211, 0.0317,  ..., 0.0305, 0.0115, 0.0127],\n        [0.0325, 0.0227, 0.0328,  ..., 0.0317, 0.0131, 0.0140]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.0130274}]}, "version": 1790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.0161235}]}, "version": 1791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1060, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962903.0175626}]}, "version": 1792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.0241096}]}, "version": 1793}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962903.025468}]}, "version": 1794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.0261967}]}, "version": 1795}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962903.0271313}]}, "version": 1796}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.626 (0.626)\tDT 0.000 (0.000)\tS@1 0.000 (0.000)\tLoss nan (nan)", "step": null, "ts": 1644962903.2730315}]}, "version": 1797}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.420018}]}, "version": 1798}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.4090421199798584, "step": null, "ts": 1644962903.507525}]}, "version": 1799}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.5570],\n        [0.5612],\n        [1.0000],\n        [0.5520],\n        [0.5356],\n        [0.5548],\n        [0.5630],\n        [0.5645],\n        [0.5479],\n        [0.5645],\n        [0.5512],\n        [0.5597],\n        [0.9990],\n        [0.5442],\n        [0.5534],\n        [0.2910],\n        [0.5494],\n        [0.5637],\n        [0.5437],\n        [0.5639],\n        [0.4160],\n        [0.4733],\n        [0.5627],\n        [0.5561],\n        [0.5577],\n        [0.5566],\n        [0.5644],\n        [1.0000],\n        [0.5581],\n        [0.5625],\n        [0.5637],\n        [0.9744],\n        [0.5523],\n        [0.5253],\n        [0.5469],\n        [0.3580],\n        [0.5464],\n        [0.5620],\n        [0.5571],\n        [0.5643],\n        [0.5646],\n        [0.5646]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.522772}]}, "version": 1800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.5236418}]}, "version": 1801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[2.8267e-02, 1.8869e-02, 3.6126e-02,  ..., 2.7256e-02, 8.6345e-03,\n         9.9904e-03],\n        [2.8256e-02, 1.8846e-02, 3.6078e-02,  ..., 2.7265e-02, 8.6331e-03,\n         9.9668e-03],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        ...,\n        [2.8175e-02, 1.8776e-02, 3.6005e-02,  ..., 2.7183e-02, 8.5616e-03,\n         9.8903e-03],\n        [2.8174e-02, 1.8786e-02, 3.6009e-02,  ..., 2.7183e-02, 8.5666e-03,\n         9.8951e-03],\n        [2.8173e-02, 1.8780e-02, 3.6006e-02,  ..., 2.7181e-02, 8.5610e-03,\n         9.8916e-03]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.5257993}]}, "version": 1802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.5266943}]}, "version": 1803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1767, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962903.5279586}]}, "version": 1804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.5288606}]}, "version": 1805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962903.5299304}]}, "version": 1806}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.5307891}]}, "version": 1807}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 3522.30224609375, "step": null, "ts": 1644962903.5320125}]}, "version": 1808}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 7.451974391937256, "step": null, "ts": 1644962903.6306446}]}, "version": 1809}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.3015],\n        [0.3049],\n        [0.3040],\n        [0.3015],\n        [0.3049],\n        [0.3032],\n        [0.3043],\n        [0.3041],\n        [0.2976],\n        [0.3042],\n        [0.3047],\n        [0.3024],\n        [0.3013],\n        [0.2993],\n        [0.2431],\n        [0.2434],\n        [0.2527],\n        [0.3035],\n        [0.3015],\n        [0.3026],\n        [0.3026],\n        [0.2204],\n        [1.0000],\n        [0.9981],\n        [0.3025],\n        [0.3049],\n        [0.1147],\n        [0.3035],\n        [0.3019],\n        [0.3033],\n        [0.3048],\n        [0.3039],\n        [0.3033],\n        [0.3025],\n        [0.2629],\n        [0.3008],\n        [0.3047],\n        [0.3006],\n        [0.1383],\n        [0.3045],\n        [0.3009],\n        [0.3016]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.636408}]}, "version": 1810}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.6448164}]}, "version": 1811}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0316, 0.0244, 0.0377,  ..., 0.0310, 0.0145, 0.0154],\n        [0.0316, 0.0244, 0.0378,  ..., 0.0310, 0.0145, 0.0154],\n        [0.0316, 0.0244, 0.0378,  ..., 0.0310, 0.0145, 0.0154],\n        ...,\n        [0.0316, 0.0244, 0.0378,  ..., 0.0310, 0.0145, 0.0154],\n        [0.0316, 0.0245, 0.0378,  ..., 0.0310, 0.0145, 0.0155],\n        [0.0316, 0.0244, 0.0378,  ..., 0.0310, 0.0145, 0.0155]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962903.6496987}]}, "version": 1812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.65079}]}, "version": 1813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1577, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962903.6521754}]}, "version": 1814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.6530206}]}, "version": 1815}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962903.654392}]}, "version": 1816}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962903.6552286}]}, "version": 1817}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962903.6564326}]}, "version": 1818}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.0841104984283447, "step": null, "ts": 1644962904.0750456}]}, "version": 1819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.6915],\n        [0.6792],\n        [0.5506],\n        [1.0000],\n        [0.6405],\n        [0.6900],\n        [0.6762],\n        [0.6961],\n        [0.6974],\n        [0.6834],\n        [0.6904],\n        [0.6320],\n        [0.6983],\n        [0.6407],\n        [0.6695],\n        [0.6768],\n        [1.0000],\n        [0.6667],\n        [0.6983],\n        [0.3005],\n        [1.0000],\n        [0.5708],\n        [0.6967],\n        [1.0000],\n        [0.6990],\n        [0.6854],\n        [1.0000],\n        [0.6466],\n        [0.5070],\n        [0.6987],\n        [0.6889],\n        [0.5654],\n        [0.4079],\n        [0.6793],\n        [0.9739],\n        [0.6599],\n        [0.6724],\n        [0.1511],\n        [0.6844],\n        [0.6900],\n        [0.6902],\n        [0.6419]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.0880501}]}, "version": 1820}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.0940235}]}, "version": 1821}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0237, 0.0132, 0.0427,  ..., 0.0227, 0.0051, 0.0073],\n        [0.0237, 0.0132, 0.0427,  ..., 0.0227, 0.0051, 0.0074],\n        [0.0407, 0.0278, 0.0331,  ..., 0.0338, 0.0249, 0.0294],\n        ...,\n        [0.0239, 0.0133, 0.0427,  ..., 0.0228, 0.0051, 0.0074],\n        [0.0236, 0.0133, 0.0427,  ..., 0.0227, 0.0051, 0.0073],\n        [0.0249, 0.0139, 0.0434,  ..., 0.0233, 0.0057, 0.0080]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.0964706}]}, "version": 1822}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.0974493}]}, "version": 1823}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1471, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962904.0986524}]}, "version": 1824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.0996368}]}, "version": 1825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.3881, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962904.1007292}]}, "version": 1826}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.101449}]}, "version": 1827}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962904.1024344}]}, "version": 1828}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 8.815032958984375, "step": null, "ts": 1644962904.1949055}]}, "version": 1829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7700],\n        [0.4187],\n        [0.4409],\n        [0.4405],\n        [0.4320],\n        [0.4419],\n        [0.4397],\n        [0.1688],\n        [0.4232],\n        [0.4415],\n        [0.4306],\n        [0.4366],\n        [0.8839],\n        [1.0000],\n        [0.4404],\n        [0.4417],\n        [0.4408],\n        [0.4259],\n        [0.4272],\n        [0.4306],\n        [0.4418],\n        [0.2756],\n        [0.4264],\n        [0.3457],\n        [0.4390],\n        [0.4384],\n        [1.0000],\n        [0.4191],\n        [0.4418],\n        [0.2020],\n        [0.4414],\n        [0.4358],\n        [0.4340],\n        [0.3982],\n        [0.4240],\n        [0.4195],\n        [0.4307],\n        [0.4416],\n        [1.0000],\n        [0.4369],\n        [0.1151],\n        [0.4252]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.203797}]}, "version": 1830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.2101154}]}, "version": 1831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0485, 0.0237, 0.0323,  ..., 0.0348, 0.0286, 0.0269],\n        [0.0302, 0.0202, 0.0441,  ..., 0.0290, 0.0111, 0.0137],\n        [0.0293, 0.0193, 0.0440,  ..., 0.0283, 0.0101, 0.0128],\n        ...,\n        [0.0293, 0.0194, 0.0441,  ..., 0.0283, 0.0102, 0.0129],\n        [0.0339, 0.0323, 0.0344,  ..., 0.0322, 0.0303, 0.0309],\n        [0.0295, 0.0196, 0.0441,  ..., 0.0284, 0.0104, 0.0130]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.2151563}]}, "version": 1832}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.2185576}]}, "version": 1833}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0919, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962904.2200131}]}, "version": 1834}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.220951}]}, "version": 1835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.1420, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962904.2220535}]}, "version": 1836}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.2229638}]}, "version": 1837}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962904.2242022}]}, "version": 1838}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.304842710494995, "step": null, "ts": 1644962904.667938}]}, "version": 1839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [0.2291],\n        [0.5853],\n        [0.5762],\n        [0.5895],\n        [0.5882],\n        [0.5888],\n        [0.5662],\n        [0.3190],\n        [0.5645],\n        [0.5886],\n        [0.5735],\n        [0.5906],\n        [0.5769],\n        [0.5838],\n        [0.2888],\n        [0.5759],\n        [0.5889],\n        [1.0000],\n        [0.5901],\n        [0.5868],\n        [0.5905],\n        [0.5870],\n        [0.5821],\n        [0.5846],\n        [0.5913],\n        [0.5907],\n        [0.3177],\n        [0.5859],\n        [0.5850],\n        [0.5875],\n        [0.5872],\n        [0.5781],\n        [0.5878],\n        [0.5810],\n        [0.5690],\n        [0.5719],\n        [0.5800],\n        [1.0000],\n        [0.9134],\n        [0.9894],\n        [0.5505]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.676737}]}, "version": 1840}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.6845622}]}, "version": 1841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [3.2122e-02, 2.7165e-02, 4.4884e-02,  ..., 3.3810e-02, 2.0213e-02,\n         2.5058e-02],\n        [2.8771e-02, 1.7931e-02, 5.4949e-02,  ..., 2.9368e-02, 9.6933e-03,\n         1.5630e-02],\n        ...,\n        [4.6549e-02, 1.7089e-02, 3.0058e-02,  ..., 3.1036e-02, 2.1674e-02,\n         2.6802e-02],\n        [4.7669e-02, 1.1067e-02, 2.3915e-02,  ..., 2.5715e-02, 1.5000e-02,\n         2.1289e-02],\n        [2.9441e-02, 1.8995e-02, 5.3758e-02,  ..., 3.0497e-02, 1.0871e-02,\n         1.6996e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.687093}]}, "version": 1842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.6881182}]}, "version": 1843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.8674, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962904.689542}]}, "version": 1844}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.6904006}]}, "version": 1845}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962904.6914105}]}, "version": 1846}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.69215}]}, "version": 1847}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 2380.031982421875, "step": null, "ts": 1644962904.6933014}]}, "version": 1848}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 10.63581371307373, "step": null, "ts": 1644962904.7946634}]}, "version": 1849}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.3973],\n        [0.3987],\n        [0.3937],\n        [0.9967],\n        [0.4067],\n        [0.3980],\n        [0.1371],\n        [0.4029],\n        [0.2193],\n        [0.4090],\n        [0.4086],\n        [0.3167],\n        [0.9994],\n        [0.4092],\n        [0.4096],\n        [0.4085],\n        [0.3992],\n        [0.4018],\n        [0.4071],\n        [0.1818],\n        [0.3980],\n        [0.4074],\n        [0.4070],\n        [0.4100],\n        [0.1758],\n        [0.4015],\n        [0.4098],\n        [1.0000],\n        [0.4037],\n        [0.3839],\n        [0.4069],\n        [0.2742],\n        [0.4098],\n        [0.4091],\n        [0.4009],\n        [0.4089],\n        [0.4097],\n        [0.4097],\n        [0.4081],\n        [0.4095],\n        [0.9933],\n        [0.3610]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.8062024}]}, "version": 1850}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.8123777}]}, "version": 1851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0314, 0.0224, 0.0511,  ..., 0.0320, 0.0142, 0.0199],\n        [0.0314, 0.0224, 0.0511,  ..., 0.0320, 0.0142, 0.0199],\n        [0.0311, 0.0224, 0.0513,  ..., 0.0318, 0.0142, 0.0199],\n        ...,\n        [0.0313, 0.0222, 0.0512,  ..., 0.0320, 0.0140, 0.0197],\n        [0.0442, 0.0085, 0.0226,  ..., 0.0217, 0.0108, 0.0216],\n        [0.0317, 0.0237, 0.0494,  ..., 0.0328, 0.0159, 0.0214]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962904.8148794}]}, "version": 1852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.815911}]}, "version": 1853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962904.817435}]}, "version": 1854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.818421}]}, "version": 1855}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962904.8196557}]}, "version": 1856}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962904.82064}]}, "version": 1857}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962904.8216453}]}, "version": 1858}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.0688164234161377, "step": null, "ts": 1644962905.2716563}]}, "version": 1859}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962905.2727377}]}, "version": 1860}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962905.2734284}]}, "version": 1861}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8894],\n        [0.2947],\n        [0.9934],\n        [0.8860],\n        [0.8883],\n        [0.8910],\n        [0.8493],\n        [0.8900],\n        [0.8802],\n        [0.8851],\n        [0.8577],\n        [0.8843],\n        [0.8840],\n        [0.8909],\n        [0.8838],\n        [0.4205],\n        [0.8841],\n        [0.8798],\n        [0.8822],\n        [0.8876],\n        [0.8907],\n        [0.8850],\n        [0.9155],\n        [0.9989],\n        [1.0000],\n        [0.9991],\n        [0.8910],\n        [0.8079],\n        [0.8874],\n        [0.8871],\n        [0.8877],\n        [0.8884],\n        [0.8903],\n        [0.8838],\n        [0.7812],\n        [0.8791],\n        [0.8807],\n        [0.8848],\n        [0.8451],\n        [1.0000],\n        [0.5921],\n        [0.8899]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962905.276051}]}, "version": 1862}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.276999}]}, "version": 1863}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.0951e-02, 1.8225e-02, 6.3291e-02,  ..., 3.5014e-02, 1.2078e-02,\n         2.5492e-02],\n        [3.7884e-02, 2.8674e-02, 3.4170e-02,  ..., 3.4842e-02, 3.3644e-02,\n         3.0619e-02],\n        [6.0463e-02, 1.1758e-02, 2.4932e-02,  ..., 3.0850e-02, 2.2117e-02,\n         1.9803e-02],\n        ...,\n        [9.9999e-06, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [3.6979e-02, 2.8257e-02, 4.8091e-02,  ..., 3.6989e-02, 2.5895e-02,\n         2.9363e-02],\n        [3.0908e-02, 1.8202e-02, 6.3357e-02,  ..., 3.5003e-02, 1.2062e-02,\n         2.5477e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962905.2795308}]}, "version": 1864}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.2805688}]}, "version": 1865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2946, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962905.2817159}]}, "version": 1866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.28252}]}, "version": 1867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.8105e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962905.2837174}]}, "version": 1868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.284318}]}, "version": 1869}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 1009.2379760742188, "step": null, "ts": 1644962905.2852774}]}, "version": 1870}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 6.376425743103027, "step": null, "ts": 1644962905.3781536}]}, "version": 1871}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.8607],\n        [0.9779],\n        [0.7500],\n        [0.8636],\n        [0.8714],\n        [0.8638],\n        [0.8703],\n        [0.8525],\n        [0.8724],\n        [0.8712],\n        [0.8681],\n        [0.8667],\n        [0.8555],\n        [0.8713],\n        [0.8701],\n        [0.8709],\n        [0.8712],\n        [0.8655],\n        [0.8723],\n        [0.8611],\n        [0.8694],\n        [0.8590],\n        [1.0000],\n        [0.8723],\n        [0.8237],\n        [0.8672],\n        [0.8621],\n        [0.8991],\n        [0.8723],\n        [0.8724],\n        [0.8533],\n        [0.8730],\n        [0.5922],\n        [1.0000],\n        [0.7299],\n        [0.8054],\n        [0.8296],\n        [0.7687],\n        [0.8110],\n        [0.8631],\n        [0.8620],\n        [0.8726]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962905.3892949}]}, "version": 1872}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.392831}]}, "version": 1873}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0324, 0.0199, 0.0616,  ..., 0.0357, 0.0140, 0.0263],\n        [0.0517, 0.0130, 0.0261,  ..., 0.0294, 0.0231, 0.0224],\n        [0.0344, 0.0239, 0.0552,  ..., 0.0367, 0.0189, 0.0284],\n        ...,\n        [0.0324, 0.0198, 0.0616,  ..., 0.0356, 0.0139, 0.0262],\n        [0.0324, 0.0198, 0.0616,  ..., 0.0357, 0.0139, 0.0262],\n        [0.0322, 0.0195, 0.0620,  ..., 0.0357, 0.0136, 0.0260]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962905.4000072}]}, "version": 1874}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.40114}]}, "version": 1875}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.2096, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962905.4024572}]}, "version": 1876}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.4031785}]}, "version": 1877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9990e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962905.4041216}]}, "version": 1878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962905.40479}]}, "version": 1879}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962905.4055882}]}, "version": 1880}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.1495635509490967, "step": null, "ts": 1644962906.104918}]}, "version": 1881}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9781],\n        [1.0000],\n        [0.9773],\n        [0.9777],\n        [0.5789],\n        [0.5231],\n        [0.9786],\n        [0.9777],\n        [0.9786],\n        [0.9753],\n        [0.9764],\n        [0.9629],\n        [0.9786],\n        [0.9763],\n        [0.4312],\n        [0.9758],\n        [0.9769],\n        [0.9784],\n        [0.9762],\n        [0.9763],\n        [0.9743],\n        [0.9773],\n        [0.9725],\n        [0.9777],\n        [0.9783],\n        [1.0000],\n        [0.9763],\n        [0.9406],\n        [0.9778],\n        [0.9786],\n        [0.9782],\n        [0.8311],\n        [1.0000],\n        [0.9766],\n        [0.9822],\n        [0.9780],\n        [0.9753],\n        [0.9786],\n        [0.9629],\n        [0.9782],\n        [0.9754],\n        [0.9750]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.1196594}]}, "version": 1882}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.1266894}]}, "version": 1883}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.4321e-02, 2.0759e-02, 6.6835e-02,  ..., 3.9573e-02, 1.6135e-02,\n         3.7413e-02],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [3.4645e-02, 2.0829e-02, 6.6357e-02,  ..., 3.9624e-02, 1.6483e-02,\n         3.7330e-02],\n        ...,\n        [3.4595e-02, 2.0623e-02, 6.6784e-02,  ..., 3.9579e-02, 1.6252e-02,\n         3.7299e-02],\n        [3.5193e-02, 2.1240e-02, 6.5535e-02,  ..., 3.9691e-02, 1.7212e-02,\n         3.7102e-02],\n        [3.5281e-02, 2.1267e-02, 6.5439e-02,  ..., 3.9649e-02, 1.7195e-02,\n         3.7059e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.1338975}]}, "version": 1884}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.1349072}]}, "version": 1885}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1483, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962906.1363494}]}, "version": 1886}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.1372786}]}, "version": 1887}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0090, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962906.1386669}]}, "version": 1888}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.1395657}]}, "version": 1889}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962906.1405628}]}, "version": 1890}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 10.792607307434082, "step": null, "ts": 1644962906.2428012}]}, "version": 1891}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9864],\n        [0.9775],\n        [0.3995],\n        [0.9862],\n        [0.9846],\n        [0.9853],\n        [0.9861],\n        [0.9864],\n        [0.9845],\n        [0.9850],\n        [0.9864],\n        [0.9857],\n        [0.9863],\n        [0.9854],\n        [1.0000],\n        [0.9864],\n        [0.8790],\n        [0.9843],\n        [0.9859],\n        [0.9847],\n        [0.5209],\n        [0.9826],\n        [0.9848],\n        [0.0979],\n        [0.9842],\n        [0.9850],\n        [0.9857],\n        [0.9846],\n        [0.9818],\n        [0.9851],\n        [0.9864],\n        [0.9864],\n        [0.9627],\n        [0.9857],\n        [1.0000],\n        [0.7543],\n        [0.9856],\n        [0.9848],\n        [0.9864],\n        [0.9864],\n        [1.0000],\n        [0.9819]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.248871}]}, "version": 1892}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.2584147}]}, "version": 1893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[3.3216e-02, 1.8939e-02, 7.0281e-02,  ..., 3.9227e-02, 1.4184e-02,\n         3.7246e-02],\n        [3.5040e-02, 2.1143e-02, 6.6148e-02,  ..., 3.9643e-02, 1.6995e-02,\n         3.7073e-02],\n        [3.9619e-02, 2.8419e-02, 3.5524e-02,  ..., 3.6122e-02, 3.4800e-02,\n         3.0661e-02],\n        ...,\n        [3.3222e-02, 1.8960e-02, 7.0276e-02,  ..., 3.9183e-02, 1.4173e-02,\n         3.7247e-02],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [3.3536e-02, 1.9695e-02, 6.9097e-02,  ..., 3.9111e-02, 1.4875e-02,\n         3.7589e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.263417}]}, "version": 1894}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.264321}]}, "version": 1895}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1384, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962906.2655408}]}, "version": 1896}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.2664497}]}, "version": 1897}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962906.2675755}]}, "version": 1898}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.26837}]}, "version": 1899}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962906.2693205}]}, "version": 1900}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.058961868286133, "step": null, "ts": 1644962906.6989934}]}, "version": 1901}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.6037],\n        [0.9877],\n        [0.9878],\n        [0.9878],\n        [0.9877],\n        [0.9865],\n        [1.0000],\n        [0.9861],\n        [0.9878],\n        [0.9870],\n        [0.9876],\n        [0.9877],\n        [0.9818],\n        [0.9800],\n        [0.9864],\n        [1.0000],\n        [0.9876],\n        [0.9875],\n        [0.9874],\n        [0.9874],\n        [0.9578],\n        [0.3975],\n        [0.9871],\n        [0.9875],\n        [0.9878],\n        [0.9876],\n        [0.9873],\n        [0.9763],\n        [0.9828],\n        [0.9876],\n        [0.9825],\n        [0.9874],\n        [0.9874],\n        [0.9865],\n        [0.9839],\n        [0.9788],\n        [0.9869],\n        [0.9877],\n        [0.7656],\n        [0.9878],\n        [0.9876],\n        [0.9875]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.711362}]}, "version": 1902}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.7207222}]}, "version": 1903}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0345, 0.0346, 0.0404,  ..., 0.0355, 0.0347, 0.0387],\n        [0.0392, 0.0280, 0.0584,  ..., 0.0401, 0.0256, 0.0479],\n        [0.0392, 0.0279, 0.0585,  ..., 0.0401, 0.0255, 0.0479],\n        ...,\n        [0.0392, 0.0279, 0.0585,  ..., 0.0401, 0.0255, 0.0479],\n        [0.0392, 0.0280, 0.0585,  ..., 0.0400, 0.0255, 0.0479],\n        [0.0392, 0.0280, 0.0584,  ..., 0.0400, 0.0256, 0.0479]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.7232618}]}, "version": 1904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.724271}]}, "version": 1905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1007, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962906.7255082}]}, "version": 1906}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.7264528}]}, "version": 1907}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(9.9999e-06, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962906.7277138}]}, "version": 1908}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.7286375}]}, "version": 1909}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 2676.90576171875, "step": null, "ts": 1644962906.7296126}]}, "version": 1910}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 10.467198371887207, "step": null, "ts": 1644962906.8281505}]}, "version": 1911}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9951],\n        [0.9943],\n        [0.9953],\n        [0.9936],\n        [0.9989],\n        [0.9954],\n        [1.0000],\n        [0.9639],\n        [0.9950],\n        [0.9952],\n        [0.9946],\n        [0.9950],\n        [0.9951],\n        [0.9953],\n        [0.9953],\n        [0.8128],\n        [0.9953],\n        [0.6984],\n        [0.9949],\n        [0.9947],\n        [0.9949],\n        [0.9953],\n        [1.0000],\n        [0.9926],\n        [0.9950],\n        [0.9953],\n        [0.8583],\n        [0.9949],\n        [0.9949],\n        [0.9947],\n        [0.9534],\n        [0.9954],\n        [0.9954],\n        [0.9950],\n        [0.9951],\n        [0.9954],\n        [0.9953],\n        [0.9952],\n        [0.9950],\n        [1.0000],\n        [0.9950],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.8368194}]}, "version": 1912}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962906.8451605}]}, "version": 1913}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.0126953125, "step": null, "ts": 1644962906.8451605}]}, "version": 1914}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962906.8451605}]}, "version": 1915}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0460205078125, "step": null, "ts": 1644962906.8451605}]}, "version": 1916}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.8498604}]}, "version": 1917}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[ 3.8865e-02,  2.5325e-02,  6.3766e-02,  ...,  4.0177e-02,\n          2.2034e-02,  5.1021e-02],\n        [ 3.9095e-02,  2.5684e-02,  6.3171e-02,  ...,  4.0064e-02,\n          2.2468e-02,  5.0457e-02],\n        [ 3.8838e-02,  2.5249e-02,  6.3881e-02,  ...,  4.0216e-02,\n          2.1968e-02,  5.1074e-02],\n        ...,\n        [-4.1497e-03, -7.8520e-05, -9.4389e-04,  ..., -8.7397e-04,\n         -8.7839e-04, -5.3640e-04],\n        [ 3.8890e-02,  2.5399e-02,  6.3662e-02,  ...,  4.0178e-02,\n          2.2098e-02,  5.0950e-02],\n        [ 1.0000e-05,  1.0000e-05,  1.0000e-05,  ...,  1.0000e-05,\n          1.0000e-05,  1.0000e-05]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962906.8521187}]}, "version": 1918}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.852906}]}, "version": 1919}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(16.2731, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962906.85419}]}, "version": 1920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.8549452}]}, "version": 1921}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.3685, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962906.8562117}]}, "version": 1922}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962906.85693}]}, "version": 1923}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962906.8578336}]}, "version": 1924}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.2948315143585205, "step": null, "ts": 1644962907.3241832}]}, "version": 1925}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9944],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9728],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9244],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.2027],\n        [1.0000],\n        [0.9839],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.3337848}]}, "version": 1926}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.3403263}]}, "version": 1927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.4075e-02, 3.1394e-02, 7.7180e-02,  ..., 4.5426e-02, 2.4760e-02,\n         1.0001e-01],\n        [9.8659e-06, 9.9996e-06, 9.9864e-06,  ..., 9.9866e-06, 9.9746e-06,\n         9.9952e-06],\n        [4.5298e-02, 3.2233e-02, 8.0015e-02,  ..., 4.7062e-02, 2.5384e-02,\n         1.0411e-01],\n        ...,\n        [4.3908e-02, 3.1279e-02, 7.6720e-02,  ..., 4.5154e-02, 2.4682e-02,\n         9.9125e-02],\n        [4.5094e-02, 3.2081e-02, 7.9656e-02,  ..., 4.6720e-02, 2.5183e-02,\n         1.0372e-01],\n        [4.4155e-02, 3.1393e-02, 7.7239e-02,  ..., 4.5412e-02, 2.4733e-02,\n         1.0006e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.3428025}]}, "version": 1928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.3436983}]}, "version": 1929}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.4925, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962907.3448093}]}, "version": 1930}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.3452764}]}, "version": 1931}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0022, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962907.3462567}]}, "version": 1932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.3468218}]}, "version": 1933}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962907.3476217}]}, "version": 1934}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 11.03161907196045, "step": null, "ts": 1644962907.4483526}]}, "version": 1935}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [1.0000],\n        [0.9624],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9961],\n        [1.0000],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.3984],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [0.9998],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [0.9998],\n        [0.1814],\n        [0.9998],\n        [0.9421],\n        [0.9998],\n        [0.9948],\n        [0.9998],\n        [0.7816],\n        [0.9993]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.4572659}]}, "version": 1936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.4609923}]}, "version": 1937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0390, 0.0303, 0.0644,  ..., 0.0399, 0.0255, 0.0761],\n        [0.0389, 0.0304, 0.0638,  ..., 0.0396, 0.0256, 0.0749],\n        [0.0389, 0.0304, 0.0639,  ..., 0.0397, 0.0255, 0.0753],\n        ...,\n        [0.0389, 0.0306, 0.0633,  ..., 0.0398, 0.0260, 0.0739],\n        [0.0381, 0.0311, 0.0375,  ..., 0.0382, 0.0388, 0.0332],\n        [0.0376, 0.0316, 0.0582,  ..., 0.0386, 0.0272, 0.0689]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.465791}]}, "version": 1938}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.468825}]}, "version": 1939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1783, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962907.4702873}]}, "version": 1940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.4711962}]}, "version": 1941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0794, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962907.472494}]}, "version": 1942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.4733973}]}, "version": 1943}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962907.47438}]}, "version": 1944}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.33296799659729, "step": null, "ts": 1644962907.9120796}]}, "version": 1945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9962],\n        [0.9962],\n        [0.9963],\n        [0.9963],\n        [0.9913],\n        [0.9963],\n        [0.9954],\n        [0.9345],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9942],\n        [0.9962],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9962],\n        [0.9963],\n        [0.9961],\n        [0.9962],\n        [0.9963],\n        [0.9962],\n        [0.9962],\n        [0.9962],\n        [0.9963],\n        [0.9962],\n        [0.9955],\n        [0.9962],\n        [0.9962],\n        [1.0000],\n        [0.9962],\n        [0.9963],\n        [0.9963],\n        [0.9963],\n        [0.9975],\n        [0.9093],\n        [0.6456],\n        [0.9929],\n        [0.9963],\n        [0.9962]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.9233003}]}, "version": 1946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.930437}]}, "version": 1947}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0402, 0.0408, 0.0415,  ..., 0.0374, 0.0400, 0.0560],\n        [0.0402, 0.0408, 0.0415,  ..., 0.0374, 0.0400, 0.0560],\n        [0.0402, 0.0408, 0.0415,  ..., 0.0374, 0.0400, 0.0561],\n        ...,\n        [0.0394, 0.0404, 0.0409,  ..., 0.0370, 0.0404, 0.0521],\n        [0.0402, 0.0408, 0.0415,  ..., 0.0374, 0.0400, 0.0560],\n        [0.0402, 0.0408, 0.0415,  ..., 0.0374, 0.0400, 0.0560]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962907.9326613}]}, "version": 1948}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.9335737}]}, "version": 1949}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.3026, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962907.9349465}]}, "version": 1950}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.9360235}]}, "version": 1951}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962907.9374506}]}, "version": 1952}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962907.9383411}]}, "version": 1953}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 360.50872802734375, "step": null, "ts": 1644962907.9395025}]}, "version": 1954}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 11.673151969909668, "step": null, "ts": 1644962908.0360594}]}, "version": 1955}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9993],\n        [0.9997],\n        [0.9997],\n        [1.0000],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [1.0000],\n        [0.9997],\n        [0.2100],\n        [0.9997],\n        [0.9992],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.9849],\n        [0.9996],\n        [0.9997],\n        [0.9997],\n        [1.0000],\n        [0.9997],\n        [0.9245],\n        [0.9997],\n        [0.9997],\n        [0.9997],\n        [0.3688],\n        [0.9997],\n        [0.9997],\n        [0.9919],\n        [0.9997]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.0499442}]}, "version": 1956}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.0586681}]}, "version": 1957}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0433, 0.0413, 0.0456,  ..., 0.0394, 0.0383, 0.0735],\n        [0.0435, 0.0414, 0.0458,  ..., 0.0396, 0.0381, 0.0748],\n        [0.0434, 0.0414, 0.0457,  ..., 0.0395, 0.0382, 0.0744],\n        ...,\n        [0.0435, 0.0414, 0.0457,  ..., 0.0395, 0.0381, 0.0745],\n        [0.0392, 0.0398, 0.0412,  ..., 0.0370, 0.0407, 0.0494],\n        [0.0435, 0.0414, 0.0457,  ..., 0.0395, 0.0382, 0.0743]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.0634952}]}, "version": 1958}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.0643148}]}, "version": 1959}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.0985, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962908.0654294}]}, "version": 1960}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.0662508}]}, "version": 1961}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.0167, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962908.0673652}]}, "version": 1962}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.0712502}]}, "version": 1963}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962908.0722432}]}, "version": 1964}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.47291898727417, "step": null, "ts": 1644962908.5115976}]}, "version": 1965}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9996],\n        [0.9996],\n        [0.9995],\n        [0.9996],\n        [1.0000],\n        [0.9778],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.7934],\n        [0.9995],\n        [0.9995],\n        [0.9967],\n        [1.0000],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9995],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9996],\n        [0.9723],\n        [0.9996],\n        [0.9996]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.5178623}]}, "version": 1966}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.5237339}]}, "version": 1967}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.0434, 0.0469, 0.0373,  ..., 0.0372, 0.0453, 0.0671],\n        [0.0434, 0.0469, 0.0373,  ..., 0.0372, 0.0453, 0.0671],\n        [0.0431, 0.0465, 0.0373,  ..., 0.0370, 0.0452, 0.0654],\n        ...,\n        [0.0438, 0.0172, 0.0347,  ..., 0.0309, 0.0460, 0.0235],\n        [0.0434, 0.0469, 0.0373,  ..., 0.0372, 0.0453, 0.0671],\n        [0.0435, 0.0469, 0.0373,  ..., 0.0372, 0.0453, 0.0671]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.5259502}]}, "version": 1968}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.5268362}]}, "version": 1969}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.1746, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962908.528235}]}, "version": 1970}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.5292583}]}, "version": 1971}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-10.8349, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962908.5304332}]}, "version": 1972}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.5314107}]}, "version": 1973}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962908.5324008}]}, "version": 1974}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 13.379217147827148, "step": null, "ts": 1644962908.6193495}]}, "version": 1975}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9994],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9998],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9744],\n        [1.0000],\n        [0.2103],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9942],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.6382847}]}, "version": 1976}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.6413233}]}, "version": 1977}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-3.0777e-03, -2.9862e-03, -2.2763e-03,  ..., -2.3011e-03,\n         -2.5307e-03, -7.8761e-03],\n        [-3.3591e-04,  1.7989e-06, -1.0556e-04,  ..., -7.3591e-05,\n         -2.6113e-04, -3.3387e-05],\n        [-3.0849e-03, -2.9981e-03, -2.2839e-03,  ..., -2.3081e-03,\n         -2.5344e-03, -7.9194e-03],\n        ...,\n        [ 1.0000e-05,  1.0000e-05,  1.0000e-05,  ...,  1.0000e-05,\n          1.0000e-05,  1.0000e-05],\n        [-2.7998e-03, -2.7192e-03, -2.0678e-03,  ..., -2.0909e-03,\n         -2.2937e-03, -7.2361e-03],\n        [-2.7744e-03, -2.6932e-03, -2.0472e-03,  ..., -2.0725e-03,\n         -2.2745e-03, -7.1705e-03]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962908.6511874}]}, "version": 1978}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.6548004}]}, "version": 1979}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(0.7868, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962908.656209}]}, "version": 1980}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.6570323}]}, "version": 1981}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.2514, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962908.6583614}]}, "version": 1982}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962908.6592956}]}, "version": 1983}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962908.6603463}]}, "version": 1984}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.7096312046051025, "step": null, "ts": 1644962909.1122525}]}, "version": 1985}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.7227],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9627],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [0.9700],\n        [0.4516],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000],\n        [1.0000]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.1224937}]}, "version": 1986}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.1319768}]}, "version": 1987}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0005e-05, 1.0000e-05, 1.0001e-05,  ..., 1.0000e-05, 1.0004e-05,\n         1.0000e-05],\n        [7.3944e-02, 8.5159e-02, 5.6350e-02,  ..., 5.9777e-02, 7.9686e-02,\n         1.1842e-01],\n        [7.3965e-02, 8.5189e-02, 5.6369e-02,  ..., 5.9797e-02, 7.9711e-02,\n         1.1846e-01],\n        ...,\n        [7.3927e-02, 8.5146e-02, 5.6342e-02,  ..., 5.9771e-02, 7.9676e-02,\n         1.1841e-01],\n        [7.3923e-02, 8.5134e-02, 5.6334e-02,  ..., 5.9763e-02, 7.9670e-02,\n         1.1839e-01],\n        [7.3956e-02, 8.5171e-02, 5.6360e-02,  ..., 5.9789e-02, 7.9705e-02,\n         1.1844e-01]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.1342134}]}, "version": 1988}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.1350813}]}, "version": 1989}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962909.1365287}]}, "version": 1990}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.1374476}]}, "version": 1991}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962909.1386673}]}, "version": 1992}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.1395564}]}, "version": 1993}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": 228.33628845214844, "step": null, "ts": 1644962909.1405904}]}, "version": 1994}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 8.380617141723633, "step": null, "ts": 1644962909.2290688}]}, "version": 1995}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[0.9988],\n        [0.9147],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9889],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9988],\n        [0.9977],\n        [0.9988],\n        [0.9988],\n        [0.6945],\n        [0.9988],\n        [0.9987]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.2401435}]}, "version": 1996}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.249825}]}, "version": 1997}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[4.0779e-02, 4.6981e-02, 3.5089e-02,  ..., 3.5971e-02, 4.6552e-02,\n         5.5208e-02],\n        [1.0000e-05, 1.0000e-05, 1.0000e-05,  ..., 1.0000e-05, 1.0000e-05,\n         1.0000e-05],\n        [4.0782e-02, 4.6985e-02, 3.5092e-02,  ..., 3.5974e-02, 4.6555e-02,\n         5.5213e-02],\n        ...,\n        [3.3742e-02, 3.6591e-02, 3.3312e-02,  ..., 3.2950e-02, 4.1112e-02,\n         3.5361e-02],\n        [4.0780e-02, 4.6982e-02, 3.5090e-02,  ..., 3.5973e-02, 4.6554e-02,\n         5.5209e-02],\n        [4.0594e-02, 4.6809e-02, 3.5081e-02,  ..., 3.5951e-02, 4.6478e-02,\n         5.4708e-02]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.2550576}]}, "version": 1998}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.255971}]}, "version": 1999}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0001, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962909.257452}]}, "version": 2000}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.2583785}]}, "version": 2001}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000e-05, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962909.2595263}]}, "version": 2002}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.260404}]}, "version": 2003}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": 9.186786651611328, "step": null, "ts": 1644962909.2614565}]}, "version": 2004}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.596 (0.596)\tDT 0.000 (0.000)\tS@1 7.143 (7.143)\tLoss 6.3693 (6.3693)", "step": null, "ts": 1644962909.505095}]}, "version": 2005}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.5061512}]}, "version": 2006}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": 2.1742682456970215, "step": null, "ts": 1644962909.7169223}]}, "version": 2007}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000e+00],\n        [1.0000e+00],\n        [5.2139e-01],\n        [9.9958e-01],\n        [1.0000e+00],\n        [1.0000e-05],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0068e-05],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [2.1275e-03],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [9.9999e-01],\n        [4.3785e-05],\n        [1.0000e+00],\n        [1.0000e+00],\n        [2.8574e-02],\n        [1.0000e+00],\n        [1.0000e+00],\n        [9.9999e-01],\n        [1.0000e+00]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.7356431}]}, "version": 2008}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.7436202}]}, "version": 2009}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.0005, -0.0006, -0.0003,  ..., -0.0004, -0.0006, -0.0010],\n        [-0.0005, -0.0007, -0.0003,  ..., -0.0004, -0.0006, -0.0011],\n        [ 0.0346,  0.0357,  0.0332,  ...,  0.0328,  0.0406,  0.0383],\n        ...,\n        [-0.0005, -0.0007, -0.0003,  ..., -0.0004, -0.0006, -0.0011],\n        [ 0.0742,  0.0938,  0.0577,  ...,  0.0623,  0.0917,  0.1032],\n        [-0.0005, -0.0007, -0.0003,  ..., -0.0004, -0.0006, -0.0011]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.7457771}]}, "version": 2010}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.7464232}]}, "version": 2011}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962909.7474966}]}, "version": 2012}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.7482061}]}, "version": 2013}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-0.1257, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962909.7493446}]}, "version": 2014}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.750734}]}, "version": 2015}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962909.7516665}]}, "version": 2016}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": 10.340961456298828, "step": null, "ts": 1644962909.8411758}]}, "version": 2017}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0004e-05],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [9.9996e-01],\n        [1.0000e+00],\n        [9.9639e-01],\n        [1.0000e-05],\n        [1.0000e+00],\n        [2.3175e-01],\n        [1.0000e+00],\n        [1.0000e+00],\n        [8.3507e-01],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00],\n        [1.0000e+00]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.8497803}]}, "version": 2018}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.8532062}]}, "version": 2019}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[-0.8717, -1.1018, -0.6096,  ..., -0.6955, -1.0239, -1.3860],\n        [-0.8722, -1.1027, -0.6101,  ..., -0.6960, -1.0246, -1.3871],\n        [-3.5128, -4.4407, -2.4584,  ..., -2.8042, -4.1282, -5.5831],\n        ...,\n        [-0.8730, -1.1038, -0.6107,  ..., -0.6967, -1.0255, -1.3885],\n        [-0.8712, -1.1012, -0.6092,  ..., -0.6951, -1.0232, -1.3853],\n        [-0.8723, -1.1028, -0.6102,  ..., -0.6961, -1.0247, -1.3872]],\n       device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962909.8622417}]}, "version": 2020}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.8631508}]}, "version": 2021}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(inf, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962909.8644133}]}, "version": 2022}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.8654947}]}, "version": 2023}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(-8.0703, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962909.8666606}]}, "version": 2024}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962909.8676982}]}, "version": 2025}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962909.8687057}]}, "version": 2026}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.336583}]}, "version": 2027}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.342991}]}, "version": 2028}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.3439548}]}, "version": 2029}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.345721}]}, "version": 2030}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.3501463}]}, "version": 2031}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962910.3515766}]}, "version": 2032}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.3569195}]}, "version": 2033}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962910.3578777}]}, "version": 2034}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.3587098}]}, "version": 2035}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.3597894}]}, "version": 2036}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.4498224}]}, "version": 2037}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.4636576}]}, "version": 2038}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.4647398}]}, "version": 2039}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.4662123}]}, "version": 2040}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.4672005}]}, "version": 2041}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962910.4681854}]}, "version": 2042}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.4691732}]}, "version": 2043}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962910.4703062}]}, "version": 2044}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.4711747}]}, "version": 2045}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.4721704}]}, "version": 2046}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962910.7210166}]}, "version": 2047}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962910.7219605}]}, "version": 2048}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.9535336}]}, "version": 2049}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.9609625}]}, "version": 2050}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.9630601}]}, "version": 2051}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962910.9648178}]}, "version": 2052}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.9657354}]}, "version": 2053}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962910.9669673}]}, "version": 2054}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.9679239}]}, "version": 2055}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962910.9691205}]}, "version": 2056}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962910.9700875}]}, "version": 2057}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962910.9714785}]}, "version": 2058}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.0713308}]}, "version": 2059}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.0795555}]}, "version": 2060}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.08323}]}, "version": 2061}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.0874817}]}, "version": 2062}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.0938206}]}, "version": 2063}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962911.095024}]}, "version": 2064}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.0959926}]}, "version": 2065}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962911.0971746}]}, "version": 2066}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.098085}]}, "version": 2067}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.099304}]}, "version": 2068}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.5310984}]}, "version": 2069}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.5436661}]}, "version": 2070}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.544467}]}, "version": 2071}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.545827}]}, "version": 2072}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.546376}]}, "version": 2073}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962911.547106}]}, "version": 2074}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.5479274}]}, "version": 2075}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962911.5487306}]}, "version": 2076}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.5496428}]}, "version": 2077}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.5505803}]}, "version": 2078}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.6458104}]}, "version": 2079}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.657162}]}, "version": 2080}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.6629863}]}, "version": 2081}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962911.664706}]}, "version": 2082}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.6659355}]}, "version": 2083}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962911.6671658}]}, "version": 2084}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.6679513}]}, "version": 2085}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962911.6690207}]}, "version": 2086}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962911.6695735}]}, "version": 2087}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962911.670347}]}, "version": 2088}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.1318018}]}, "version": 2089}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.1441238}]}, "version": 2090}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.1451504}]}, "version": 2091}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.1470666}]}, "version": 2092}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.148018}]}, "version": 2093}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962912.1492488}]}, "version": 2094}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.1502593}]}, "version": 2095}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962912.1515205}]}, "version": 2096}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.1523507}]}, "version": 2097}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.153491}]}, "version": 2098}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.240131}]}, "version": 2099}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.2539072}]}, "version": 2100}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.2597842}]}, "version": 2101}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.2637753}]}, "version": 2102}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.2647052}]}, "version": 2103}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962912.2657936}]}, "version": 2104}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.266378}]}, "version": 2105}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962912.267242}]}, "version": 2106}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.2688246}]}, "version": 2107}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.2697814}]}, "version": 2108}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.7137842}]}, "version": 2109}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.729829}]}, "version": 2110}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.7306993}]}, "version": 2111}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.7324758}]}, "version": 2112}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.733484}]}, "version": 2113}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962912.734481}]}, "version": 2114}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.735158}]}, "version": 2115}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962912.7362738}]}, "version": 2116}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.737209}]}, "version": 2117}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.7382956}]}, "version": 2118}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.8217344}]}, "version": 2119}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.83376}]}, "version": 2120}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.8407912}]}, "version": 2121}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962912.8448975}]}, "version": 2122}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.8457584}]}, "version": 2123}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962912.8467956}]}, "version": 2124}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.8472784}]}, "version": 2125}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962912.8480496}]}, "version": 2126}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962912.848929}]}, "version": 2127}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962912.850242}]}, "version": 2128}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.2994444}]}, "version": 2129}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.3082192}]}, "version": 2130}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.3091786}]}, "version": 2131}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.310939}]}, "version": 2132}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.3119068}]}, "version": 2133}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962913.3128738}]}, "version": 2134}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.3136718}]}, "version": 2135}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962913.3145475}]}, "version": 2136}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.3151863}]}, "version": 2137}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.316141}]}, "version": 2138}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.4152637}]}, "version": 2139}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.4230163}]}, "version": 2140}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.4296942}]}, "version": 2141}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.4396205}]}, "version": 2142}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.4401548}]}, "version": 2143}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962913.440874}]}, "version": 2144}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.4414065}]}, "version": 2145}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962913.442098}]}, "version": 2146}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.4427428}]}, "version": 2147}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.4435303}]}, "version": 2148}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.921708}]}, "version": 2149}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.9342778}]}, "version": 2150}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.941498}]}, "version": 2151}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962913.942907}]}, "version": 2152}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.943512}]}, "version": 2153}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962913.9441898}]}, "version": 2154}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.9449663}]}, "version": 2155}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962913.9459622}]}, "version": 2156}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962913.9465082}]}, "version": 2157}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962913.9473016}]}, "version": 2158}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.0339603}]}, "version": 2159}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.0472543}]}, "version": 2160}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.0558162}]}, "version": 2161}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.0600326}]}, "version": 2162}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.06091}]}, "version": 2163}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962914.0620427}]}, "version": 2164}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.0629075}]}, "version": 2165}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962914.0641177}]}, "version": 2166}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.0650077}]}, "version": 2167}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.066008}]}, "version": 2168}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.5389838}]}, "version": 2169}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.547327}]}, "version": 2170}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.5514305}]}, "version": 2171}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.559632}]}, "version": 2172}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.560538}]}, "version": 2173}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962914.5615282}]}, "version": 2174}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.5621266}]}, "version": 2175}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962914.563248}]}, "version": 2176}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.564186}]}, "version": 2177}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.5653546}]}, "version": 2178}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.651071}]}, "version": 2179}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.667299}]}, "version": 2180}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.6703925}]}, "version": 2181}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962914.6779382}]}, "version": 2182}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.6809394}]}, "version": 2183}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962914.6821165}]}, "version": 2184}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.6831672}]}, "version": 2185}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962914.6843154}]}, "version": 2186}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962914.6852114}]}, "version": 2187}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962914.6864128}]}, "version": 2188}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.1471255}]}, "version": 2189}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.1549962}]}, "version": 2190}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.158541}]}, "version": 2191}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.1599078}]}, "version": 2192}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.1607985}]}, "version": 2193}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962915.161741}]}, "version": 2194}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.1622815}]}, "version": 2195}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962915.1630673}]}, "version": 2196}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.1637564}]}, "version": 2197}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.1647124}]}, "version": 2198}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.2635417}]}, "version": 2199}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.2759972}]}, "version": 2200}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.284846}]}, "version": 2201}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.2895539}]}, "version": 2202}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.29053}]}, "version": 2203}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962915.2914324}]}, "version": 2204}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.292289}]}, "version": 2205}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962915.2932012}]}, "version": 2206}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.2940357}]}, "version": 2207}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.2952743}]}, "version": 2208}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.606 (0.606)\tDT 0.000 (0.000)\tS@1 0.000 (0.000)\tLoss nan (nan)", "step": null, "ts": 1644962915.5390723}]}, "version": 2209}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.5398188}]}, "version": 2210}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.7371173}]}, "version": 2211}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.7463503}]}, "version": 2212}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.7474947}]}, "version": 2213}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.7492383}]}, "version": 2214}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.7503152}]}, "version": 2215}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962915.7512956}]}, "version": 2216}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.7521064}]}, "version": 2217}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962915.753236}]}, "version": 2218}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.7541063}]}, "version": 2219}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.7553892}]}, "version": 2220}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.8500128}]}, "version": 2221}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.8577895}]}, "version": 2222}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.864022}]}, "version": 2223}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962915.8700294}]}, "version": 2224}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.8708897}]}, "version": 2225}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962915.8720224}]}, "version": 2226}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.872837}]}, "version": 2227}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962915.8739176}]}, "version": 2228}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962915.8747666}]}, "version": 2229}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962915.875679}]}, "version": 2230}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644962915.9895678}]}, "version": 2231}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962915.9906719}]}, "version": 2232}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644962915.9916255}]}, "version": 2233}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962915.9922752}]}, "version": 2234}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962916.3464}]}, "version": 2235}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962916.3491035}]}, "version": 2236}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.3500824}]}, "version": 2237}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962916.3520901}]}, "version": 2238}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.353039}]}, "version": 2239}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962916.3543124}]}, "version": 2240}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.3553407}]}, "version": 2241}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962916.3566453}]}, "version": 2242}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.3574324}]}, "version": 2243}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962916.3584783}]}, "version": 2244}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962916.451616}]}, "version": 2245}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962916.459362}]}, "version": 2246}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.4654806}]}, "version": 2247}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962916.4669485}]}, "version": 2248}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.469114}]}, "version": 2249}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962916.470301}]}, "version": 2250}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.4711576}]}, "version": 2251}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962916.4722424}]}, "version": 2252}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962916.4730237}]}, "version": 2253}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962916.4742174}]}, "version": 2254}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962916.8499315}]}, "version": 2255}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 5.939296722412109, "step": null, "ts": 1644962916.8499315}]}, "version": 2256}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 99.0, "step": null, "ts": 1644962916.8499315}]}, "version": 2257}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0460205078125, "step": null, "ts": 1644962916.8499315}]}, "version": 2258}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.1967008}]}, "version": 2259}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.2081096}]}, "version": 2260}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.2114286}]}, "version": 2261}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.2130654}]}, "version": 2262}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.2140648}]}, "version": 2263}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962917.2157974}]}, "version": 2264}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.2168355}]}, "version": 2265}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962917.2180192}]}, "version": 2266}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.2190053}]}, "version": 2267}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.220233}]}, "version": 2268}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.3136635}]}, "version": 2269}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.321315}]}, "version": 2270}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.3246162}]}, "version": 2271}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.3289}]}, "version": 2272}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.3323815}]}, "version": 2273}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962917.3332648}]}, "version": 2274}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.334224}]}, "version": 2275}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962917.335399}]}, "version": 2276}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.336288}]}, "version": 2277}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.3373232}]}, "version": 2278}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.761571}]}, "version": 2279}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.770549}]}, "version": 2280}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.7716503}]}, "version": 2281}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.773254}]}, "version": 2282}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.7742345}]}, "version": 2283}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962917.7751715}]}, "version": 2284}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.7760746}]}, "version": 2285}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962917.7773433}]}, "version": 2286}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.778104}]}, "version": 2287}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.7793992}]}, "version": 2288}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.876502}]}, "version": 2289}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.890179}]}, "version": 2290}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.8963108}]}, "version": 2291}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962917.8980508}]}, "version": 2292}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.8990228}]}, "version": 2293}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962917.9002006}]}, "version": 2294}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.9011304}]}, "version": 2295}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962917.9023192}]}, "version": 2296}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962917.9032502}]}, "version": 2297}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962917.9043345}]}, "version": 2298}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.3608665}]}, "version": 2299}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.3693476}]}, "version": 2300}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.374632}]}, "version": 2301}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.3760147}]}, "version": 2302}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.3770611}]}, "version": 2303}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962918.3783476}]}, "version": 2304}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.3793254}]}, "version": 2305}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962918.3803997}]}, "version": 2306}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.3813238}]}, "version": 2307}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.3823361}]}, "version": 2308}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.4720237}]}, "version": 2309}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.4776163}]}, "version": 2310}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.484933}]}, "version": 2311}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.4892557}]}, "version": 2312}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.4929411}]}, "version": 2313}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962918.494123}]}, "version": 2314}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.495082}]}, "version": 2315}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962918.4962583}]}, "version": 2316}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.4971013}]}, "version": 2317}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.4983158}]}, "version": 2318}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.9613926}]}, "version": 2319}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.9704506}]}, "version": 2320}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.9714417}]}, "version": 2321}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962918.972945}]}, "version": 2322}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.9739032}]}, "version": 2323}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962918.975039}]}, "version": 2324}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.9758358}]}, "version": 2325}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962918.9769092}]}, "version": 2326}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962918.9774442}]}, "version": 2327}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962918.9782388}]}, "version": 2328}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.0780141}]}, "version": 2329}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.0855582}]}, "version": 2330}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.0893703}]}, "version": 2331}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.0940661}]}, "version": 2332}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.1001315}]}, "version": 2333}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962919.1012871}]}, "version": 2334}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.1020749}]}, "version": 2335}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962919.1031725}]}, "version": 2336}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.1040416}]}, "version": 2337}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.105133}]}, "version": 2338}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.543602}]}, "version": 2339}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.5586424}]}, "version": 2340}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.5596807}]}, "version": 2341}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.5614095}]}, "version": 2342}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.5622215}]}, "version": 2343}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962919.5632124}]}, "version": 2344}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.5641544}]}, "version": 2345}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962919.565367}]}, "version": 2346}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.566196}]}, "version": 2347}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.567244}]}, "version": 2348}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.6638665}]}, "version": 2349}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.6773942}]}, "version": 2350}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.6833274}]}, "version": 2351}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962919.687612}]}, "version": 2352}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.6882784}]}, "version": 2353}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962919.689091}]}, "version": 2354}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.6897972}]}, "version": 2355}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962919.6906598}]}, "version": 2356}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962919.6911643}]}, "version": 2357}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962919.692051}]}, "version": 2358}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.1569977}]}, "version": 2359}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.1652403}]}, "version": 2360}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.1662705}]}, "version": 2361}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.167918}]}, "version": 2362}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.1685443}]}, "version": 2363}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962920.1694038}]}, "version": 2364}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.170297}]}, "version": 2365}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962920.171132}]}, "version": 2366}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.1720357}]}, "version": 2367}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.173276}]}, "version": 2368}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.271038}]}, "version": 2369}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.2761767}]}, "version": 2370}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.2817576}]}, "version": 2371}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.2901008}]}, "version": 2372}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.2934186}]}, "version": 2373}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962920.2944198}]}, "version": 2374}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.2951655}]}, "version": 2375}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962920.2961166}]}, "version": 2376}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.296966}]}, "version": 2377}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.2981799}]}, "version": 2378}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.7349617}]}, "version": 2379}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.7504728}]}, "version": 2380}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.7521567}]}, "version": 2381}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.7586744}]}, "version": 2382}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.7691777}]}, "version": 2383}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962920.7704144}]}, "version": 2384}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.7712934}]}, "version": 2385}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962920.7721136}]}, "version": 2386}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.7729857}]}, "version": 2387}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.774173}]}, "version": 2388}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.8574572}]}, "version": 2389}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.8702645}]}, "version": 2390}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.8759582}]}, "version": 2391}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962920.8803012}]}, "version": 2392}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.883812}]}, "version": 2393}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962920.8873634}]}, "version": 2394}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.8882847}]}, "version": 2395}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962920.8892891}]}, "version": 2396}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962920.890187}]}, "version": 2397}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962920.891218}]}, "version": 2398}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.3511937}]}, "version": 2399}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962921.3643231}]}, "version": 2400}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644962921.3649755}]}, "version": 2401}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644962921.365567}]}, "version": 2402}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962921.3661742}]}, "version": 2403}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.367586}]}, "version": 2404}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.3733666}]}, "version": 2405}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.3747323}]}, "version": 2406}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.3755648}]}, "version": 2407}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962921.3764474}]}, "version": 2408}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.3773139}]}, "version": 2409}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962921.378145}]}, "version": 2410}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.378745}]}, "version": 2411}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.3796492}]}, "version": 2412}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.472347}]}, "version": 2413}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.4864676}]}, "version": 2414}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.489884}]}, "version": 2415}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.4912884}]}, "version": 2416}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.4947662}]}, "version": 2417}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962921.4956074}]}, "version": 2418}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.4961758}]}, "version": 2419}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962921.497167}]}, "version": 2420}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.497801}]}, "version": 2421}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.4988034}]}, "version": 2422}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.607 (0.607)\tDT 0.000 (0.000)\tS@1 4.762 (4.762)\tLoss nan (nan)", "step": null, "ts": 1644962921.7440479}]}, "version": 2423}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.7448878}]}, "version": 2424}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.9587107}]}, "version": 2425}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.9686968}]}, "version": 2426}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.9756618}]}, "version": 2427}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962921.9770348}]}, "version": 2428}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.9778426}]}, "version": 2429}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962921.9786894}]}, "version": 2430}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.9792132}]}, "version": 2431}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962921.9798625}]}, "version": 2432}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962921.9803932}]}, "version": 2433}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962921.981153}]}, "version": 2434}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.0748172}]}, "version": 2435}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.0853734}]}, "version": 2436}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.0888715}]}, "version": 2437}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.0933156}]}, "version": 2438}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.0941558}]}, "version": 2439}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962922.095163}]}, "version": 2440}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.0959692}]}, "version": 2441}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962922.0968196}]}, "version": 2442}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.097397}]}, "version": 2443}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.0981789}]}, "version": 2444}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.558089}]}, "version": 2445}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.567245}]}, "version": 2446}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.5774956}]}, "version": 2447}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.5790756}]}, "version": 2448}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.5799708}]}, "version": 2449}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962922.581095}]}, "version": 2450}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.5819492}]}, "version": 2451}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962922.5829015}]}, "version": 2452}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.583459}]}, "version": 2453}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.584284}]}, "version": 2454}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.674099}]}, "version": 2455}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.6835911}]}, "version": 2456}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.691832}]}, "version": 2457}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962922.6963084}]}, "version": 2458}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.6997418}]}, "version": 2459}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962922.7006574}]}, "version": 2460}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.7012777}]}, "version": 2461}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962922.7019691}]}, "version": 2462}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962922.7026982}]}, "version": 2463}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962922.703699}]}, "version": 2464}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.1710625}]}, "version": 2465}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.1827338}]}, "version": 2466}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.1901171}]}, "version": 2467}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.191748}]}, "version": 2468}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.1927974}]}, "version": 2469}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962923.1939712}]}, "version": 2470}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.1948361}]}, "version": 2471}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962923.1957457}]}, "version": 2472}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.1966505}]}, "version": 2473}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.1975753}]}, "version": 2474}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.2876835}]}, "version": 2475}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.3027072}]}, "version": 2476}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.3120296}]}, "version": 2477}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.316351}]}, "version": 2478}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.3171163}]}, "version": 2479}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962923.318323}]}, "version": 2480}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.319278}]}, "version": 2481}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962923.3201842}]}, "version": 2482}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.3210275}]}, "version": 2483}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.3222222}]}, "version": 2484}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.77055}]}, "version": 2485}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.7794132}]}, "version": 2486}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.7805934}]}, "version": 2487}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.7821913}]}, "version": 2488}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.7830613}]}, "version": 2489}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962923.784152}]}, "version": 2490}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.7850602}]}, "version": 2491}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962923.7861173}]}, "version": 2492}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.786989}]}, "version": 2493}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.7882981}]}, "version": 2494}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.875089}]}, "version": 2495}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.8882475}]}, "version": 2496}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.8944516}]}, "version": 2497}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962923.9028037}]}, "version": 2498}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.9060755}]}, "version": 2499}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962923.9071229}]}, "version": 2500}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.9080265}]}, "version": 2501}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962923.9091775}]}, "version": 2502}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962923.9099529}]}, "version": 2503}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962923.9110098}]}, "version": 2504}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962924.3947918}]}, "version": 2505}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962924.407838}]}, "version": 2506}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.4087334}]}, "version": 2507}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962924.410289}]}, "version": 2508}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.4112206}]}, "version": 2509}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962924.4123046}]}, "version": 2510}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.4132338}]}, "version": 2511}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962924.4142919}]}, "version": 2512}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.4152505}]}, "version": 2513}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962924.4163094}]}, "version": 2514}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962924.506444}]}, "version": 2515}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962924.5179837}]}, "version": 2516}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.5244908}]}, "version": 2517}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962924.528599}]}, "version": 2518}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.5294664}]}, "version": 2519}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962924.5303724}]}, "version": 2520}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.5312095}]}, "version": 2521}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962924.5321643}]}, "version": 2522}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962924.5330207}]}, "version": 2523}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962924.5342116}]}, "version": 2524}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.0020692}]}, "version": 2525}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.0143042}]}, "version": 2526}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.015239}]}, "version": 2527}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.0168328}]}, "version": 2528}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.0176704}]}, "version": 2529}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962925.0186512}]}, "version": 2530}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.0192213}]}, "version": 2531}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962925.0200922}]}, "version": 2532}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.0208933}]}, "version": 2533}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.0220973}]}, "version": 2534}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.1127784}]}, "version": 2535}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.1187994}]}, "version": 2536}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.126719}]}, "version": 2537}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.1337132}]}, "version": 2538}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.1347225}]}, "version": 2539}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962925.135626}]}, "version": 2540}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.1362383}]}, "version": 2541}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962925.136964}]}, "version": 2542}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.1377885}]}, "version": 2543}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.1387632}]}, "version": 2544}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.6102557}]}, "version": 2545}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.6197927}]}, "version": 2546}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.6208372}]}, "version": 2547}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.6225626}]}, "version": 2548}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.6234703}]}, "version": 2549}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962925.6245234}]}, "version": 2550}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.6253307}]}, "version": 2551}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962925.6263366}]}, "version": 2552}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.6272805}]}, "version": 2553}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.6283598}]}, "version": 2554}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.711593}]}, "version": 2555}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.7195523}]}, "version": 2556}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.7234294}]}, "version": 2557}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962925.727713}]}, "version": 2558}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.7311873}]}, "version": 2559}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962925.7324924}]}, "version": 2560}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.7336757}]}, "version": 2561}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962925.7346768}]}, "version": 2562}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962925.735192}]}, "version": 2563}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962925.7361183}]}, "version": 2564}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.2099578}]}, "version": 2565}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.21831}]}, "version": 2566}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.219178}]}, "version": 2567}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.2206488}]}, "version": 2568}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.221653}]}, "version": 2569}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962926.2225177}]}, "version": 2570}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.223299}]}, "version": 2571}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962926.2242684}]}, "version": 2572}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.2250698}]}, "version": 2573}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.226364}]}, "version": 2574}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.3209586}]}, "version": 2575}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.3324962}]}, "version": 2576}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.3385572}]}, "version": 2577}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.340202}]}, "version": 2578}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.343367}]}, "version": 2579}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962926.3442824}]}, "version": 2580}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.3449318}]}, "version": 2581}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962926.34574}]}, "version": 2582}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.3463552}]}, "version": 2583}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.3471396}]}, "version": 2584}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644962926.6471524}]}, "version": 2585}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644962926.648326}]}, "version": 2586}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962926.6490662}]}, "version": 2587}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962926.6502519}]}, "version": 2588}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.833622}]}, "version": 2589}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.8425148}]}, "version": 2590}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.8435562}]}, "version": 2591}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.8451536}]}, "version": 2592}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.846195}]}, "version": 2593}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962926.8475022}]}, "version": 2594}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.8483806}]}, "version": 2595}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962926.8493712}]}, "version": 2596}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.850403}]}, "version": 2597}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.851501}]}, "version": 2598}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962926.8545327}]}, "version": 2599}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.014163970947266, "step": null, "ts": 1644962926.8545327}]}, "version": 2600}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 71.0, "step": null, "ts": 1644962926.8545327}]}, "version": 2601}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0460205078125, "step": null, "ts": 1644962926.8545327}]}, "version": 2602}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.9378886}]}, "version": 2603}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.951499}]}, "version": 2604}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.960732}]}, "version": 2605}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962926.9649265}]}, "version": 2606}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.965715}]}, "version": 2607}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962926.966892}]}, "version": 2608}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.967482}]}, "version": 2609}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962926.9684012}]}, "version": 2610}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962926.9692361}]}, "version": 2611}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962926.9701996}]}, "version": 2612}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962927.4215832}]}, "version": 2613}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962927.4242616}]}, "version": 2614}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.4252243}]}, "version": 2615}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962927.4269748}]}, "version": 2616}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.4279022}]}, "version": 2617}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962927.4289167}]}, "version": 2618}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.4297833}]}, "version": 2619}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962927.4308512}]}, "version": 2620}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.4314628}]}, "version": 2621}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962927.4322352}]}, "version": 2622}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962927.529137}]}, "version": 2623}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962927.5369315}]}, "version": 2624}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.5402956}]}, "version": 2625}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962927.541635}]}, "version": 2626}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.5424318}]}, "version": 2627}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962927.543371}]}, "version": 2628}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.5441024}]}, "version": 2629}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962927.5449083}]}, "version": 2630}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.545586}]}, "version": 2631}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962927.5465467}]}, "version": 2632}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.573 (0.573)\tDT 0.000 (0.000)\tS@1 0.000 (0.000)\tLoss nan (nan)", "step": null, "ts": 1644962927.7888393}]}, "version": 2633}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962927.7898457}]}, "version": 2634}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.237525}]}, "version": 2635}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.246345}]}, "version": 2636}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.2534804}]}, "version": 2637}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.254946}]}, "version": 2638}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.2558277}]}, "version": 2639}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962928.2571764}]}, "version": 2640}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.2578347}]}, "version": 2641}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962928.2590294}]}, "version": 2642}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.2599676}]}, "version": 2643}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.261223}]}, "version": 2644}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.352034}]}, "version": 2645}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.3614502}]}, "version": 2646}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.3676884}]}, "version": 2647}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.369161}]}, "version": 2648}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.372441}]}, "version": 2649}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962928.3733099}]}, "version": 2650}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.3741984}]}, "version": 2651}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962928.3750124}]}, "version": 2652}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.375659}]}, "version": 2653}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.3766198}]}, "version": 2654}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.8273792}]}, "version": 2655}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.8344693}]}, "version": 2656}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.8374891}]}, "version": 2657}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.838843}]}, "version": 2658}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.8396628}]}, "version": 2659}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962928.8406475}]}, "version": 2660}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.841176}]}, "version": 2661}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962928.841824}]}, "version": 2662}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.8424594}]}, "version": 2663}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.8434072}]}, "version": 2664}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.936228}]}, "version": 2665}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.9495552}]}, "version": 2666}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.9531262}]}, "version": 2667}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962928.957285}]}, "version": 2668}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.9581301}]}, "version": 2669}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962928.9592638}]}, "version": 2670}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.9601936}]}, "version": 2671}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962928.9610555}]}, "version": 2672}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962928.9619143}]}, "version": 2673}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962928.9630222}]}, "version": 2674}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962929.4153943}]}, "version": 2675}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962929.4306087}]}, "version": 2676}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.4315603}]}, "version": 2677}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962929.4330842}]}, "version": 2678}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.4339914}]}, "version": 2679}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962929.4350853}]}, "version": 2680}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.4360225}]}, "version": 2681}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962929.4371}]}, "version": 2682}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.4379303}]}, "version": 2683}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962929.4387915}]}, "version": 2684}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962929.5294352}]}, "version": 2685}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962929.539305}]}, "version": 2686}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.542569}]}, "version": 2687}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962929.546562}]}, "version": 2688}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.5497625}]}, "version": 2689}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962929.5506358}]}, "version": 2690}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.5512767}]}, "version": 2691}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962929.5521283}]}, "version": 2692}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962929.552997}]}, "version": 2693}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962929.554225}]}, "version": 2694}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.0033264}]}, "version": 2695}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.0147462}]}, "version": 2696}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.0156746}]}, "version": 2697}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.0171723}]}, "version": 2698}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.0181246}]}, "version": 2699}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962930.0192792}]}, "version": 2700}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.0200267}]}, "version": 2701}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962930.020988}]}, "version": 2702}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.0215104}]}, "version": 2703}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.0223281}]}, "version": 2704}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.120097}]}, "version": 2705}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.1276777}]}, "version": 2706}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.1314683}]}, "version": 2707}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.1357985}]}, "version": 2708}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.1391876}]}, "version": 2709}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962930.140037}]}, "version": 2710}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.1410766}]}, "version": 2711}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962930.14213}]}, "version": 2712}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.1431108}]}, "version": 2713}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.144394}]}, "version": 2714}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.604887}]}, "version": 2715}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.616547}]}, "version": 2716}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.6253617}]}, "version": 2717}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.6267445}]}, "version": 2718}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.630679}]}, "version": 2719}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962930.6317883}]}, "version": 2720}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.6326768}]}, "version": 2721}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962930.6335435}]}, "version": 2722}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.634149}]}, "version": 2723}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.635182}]}, "version": 2724}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.721678}]}, "version": 2725}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.7325253}]}, "version": 2726}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.7358804}]}, "version": 2727}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962930.7399824}]}, "version": 2728}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.7456665}]}, "version": 2729}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962930.7466419}]}, "version": 2730}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.7471645}]}, "version": 2731}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962930.7479613}]}, "version": 2732}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962930.7485147}]}, "version": 2733}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962930.7494028}]}, "version": 2734}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.2215276}]}, "version": 2735}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.2299485}]}, "version": 2736}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.2308729}]}, "version": 2737}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.2323213}]}, "version": 2738}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.2332225}]}, "version": 2739}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962931.2342546}]}, "version": 2740}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.2351296}]}, "version": 2741}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962931.2363365}]}, "version": 2742}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.2370315}]}, "version": 2743}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.2381182}]}, "version": 2744}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.3280847}]}, "version": 2745}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.3394392}]}, "version": 2746}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.3430982}]}, "version": 2747}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.34756}]}, "version": 2748}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.35322}]}, "version": 2749}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962931.3543715}]}, "version": 2750}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.3552582}]}, "version": 2751}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962931.356164}]}, "version": 2752}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.3570814}]}, "version": 2753}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.3583014}]}, "version": 2754}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.843182}]}, "version": 2755}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.8551235}]}, "version": 2756}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.857096}]}, "version": 2757}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.8586333}]}, "version": 2758}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.8593824}]}, "version": 2759}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962931.8602662}]}, "version": 2760}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.8610535}]}, "version": 2761}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962931.8621972}]}, "version": 2762}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.8629534}]}, "version": 2763}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.8640604}]}, "version": 2764}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.951419}]}, "version": 2765}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.9655156}]}, "version": 2766}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.968604}]}, "version": 2767}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962931.9712563}]}, "version": 2768}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.9747968}]}, "version": 2769}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962931.9760163}]}, "version": 2770}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.9767833}]}, "version": 2771}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962931.9777813}]}, "version": 2772}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962931.9783962}]}, "version": 2773}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962931.9792633}]}, "version": 2774}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644962932.0176725}]}, "version": 2775}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962932.0184374}]}, "version": 2776}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644962932.019002}]}, "version": 2777}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962932.0196984}]}, "version": 2778}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962932.4447796}]}, "version": 2779}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962932.4488938}]}, "version": 2780}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.4539714}]}, "version": 2781}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962932.455747}]}, "version": 2782}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.456691}]}, "version": 2783}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962932.4576645}]}, "version": 2784}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.4588377}]}, "version": 2785}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962932.4597576}]}, "version": 2786}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.4605718}]}, "version": 2787}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962932.4616663}]}, "version": 2788}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962932.548329}]}, "version": 2789}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962932.5636926}]}, "version": 2790}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.5757353}]}, "version": 2791}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962932.5771935}]}, "version": 2792}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.5780904}]}, "version": 2793}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962932.5792444}]}, "version": 2794}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.580186}]}, "version": 2795}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962932.581445}]}, "version": 2796}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962932.5821733}]}, "version": 2797}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962932.5831695}]}, "version": 2798}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.0516996}]}, "version": 2799}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.0645063}]}, "version": 2800}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.069227}]}, "version": 2801}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.0709944}]}, "version": 2802}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.071975}]}, "version": 2803}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962933.0731924}]}, "version": 2804}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.0739207}]}, "version": 2805}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962933.0749128}]}, "version": 2806}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.0755389}]}, "version": 2807}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.076503}]}, "version": 2808}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.163812}]}, "version": 2809}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.184273}]}, "version": 2810}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.1930282}]}, "version": 2811}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.1980295}]}, "version": 2812}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.2012901}]}, "version": 2813}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962933.2048}]}, "version": 2814}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.2053993}]}, "version": 2815}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962933.206046}]}, "version": 2816}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.2066598}]}, "version": 2817}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.2074058}]}, "version": 2818}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.6771095}]}, "version": 2819}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.6853545}]}, "version": 2820}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.686352}]}, "version": 2821}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.687801}]}, "version": 2822}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.68874}]}, "version": 2823}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962933.689897}]}, "version": 2824}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.6906729}]}, "version": 2825}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962933.6914644}]}, "version": 2826}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.6920183}]}, "version": 2827}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.6931717}]}, "version": 2828}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.7829137}]}, "version": 2829}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.7882314}]}, "version": 2830}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.8000283}]}, "version": 2831}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962933.804125}]}, "version": 2832}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.8075762}]}, "version": 2833}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962933.808804}]}, "version": 2834}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.8096435}]}, "version": 2835}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962933.8105133}]}, "version": 2836}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962933.8112035}]}, "version": 2837}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962933.8121715}]}, "version": 2838}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Train - epoch [1/200]\tBT 0.598 (0.598)\tDT 0.000 (0.000)\tS@1 7.143 (7.143)\tLoss nan (nan)", "step": null, "ts": 1644962934.0551112}]}, "version": 2839}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.056044}]}, "version": 2840}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.2657247}]}, "version": 2841}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.2754185}]}, "version": 2842}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.2761233}]}, "version": 2843}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.2777064}]}, "version": 2844}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.2782946}]}, "version": 2845}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962934.2789483}]}, "version": 2846}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.2796953}]}, "version": 2847}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962934.2804592}]}, "version": 2848}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.280889}]}, "version": 2849}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.281806}]}, "version": 2850}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.3822176}]}, "version": 2851}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.3896854}]}, "version": 2852}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.396856}]}, "version": 2853}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.3982031}]}, "version": 2854}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.4014535}]}, "version": 2855}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962934.4022558}]}, "version": 2856}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.4031506}]}, "version": 2857}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962934.4043303}]}, "version": 2858}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.4051983}]}, "version": 2859}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.4063635}]}, "version": 2860}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.8615932}]}, "version": 2861}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.8704746}]}, "version": 2862}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.8716958}]}, "version": 2863}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.873209}]}, "version": 2864}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.874181}]}, "version": 2865}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962934.8751626}]}, "version": 2866}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.8760033}]}, "version": 2867}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962934.8771286}]}, "version": 2868}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.8778708}]}, "version": 2869}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.879033}]}, "version": 2870}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.9630802}]}, "version": 2871}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.9697938}]}, "version": 2872}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.976062}]}, "version": 2873}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962934.977776}]}, "version": 2874}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.9787276}]}, "version": 2875}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962934.9799223}]}, "version": 2876}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.980851}]}, "version": 2877}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962934.9819763}]}, "version": 2878}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962934.9828613}]}, "version": 2879}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962934.98407}]}, "version": 2880}
{"obj": {"type": "LogFloats", "path": ["metrics", "tardis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962935.41197}]}, "version": 2881}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962935.4245615}]}, "version": 2882}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.426709}]}, "version": 2883}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962935.4285676}]}, "version": 2884}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.4294784}]}, "version": 2885}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962935.4303997}]}, "version": 2886}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.431207}]}, "version": 2887}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962935.432321}]}, "version": 2888}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.433173}]}, "version": 2889}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_t_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962935.4343016}]}, "version": 2890}
{"obj": {"type": "LogFloats", "path": ["metrics", "src_dis_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962935.5261273}]}, "version": 2891}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan],\n        [nan]], device='cuda:0', grad_fn=<AddBackward0>)", "step": null, "ts": 1644962935.5386665}]}, "version": 2892}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.539707}]}, "version": 2893}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor([[nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        ...,\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan],\n        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',\n       grad_fn=<AddBackward0>)", "step": null, "ts": 1644962935.5410268}]}, "version": 2894}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.5419085}]}, "version": 2895}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MaxBackward1>)", "step": null, "ts": 1644962935.542976}]}, "version": 2896}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.5437882}]}, "version": 2897}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "tensor(nan, device='cuda:0', grad_fn=<MinBackward1>)", "step": null, "ts": 1644962935.5448542}]}, "version": 2898}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962935.5456724}]}, "version": 2899}
{"obj": {"type": "LogFloats", "path": ["metrics", "d_s_loss"], "values": [{"value": NaN, "step": null, "ts": 1644962935.54657}]}, "version": 2900}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.6, "step": null, "ts": 1644962936.864578}]}, "version": 2901}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.106864929199219, "step": null, "ts": 1644962936.864578}]}, "version": 2902}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 63.0, "step": null, "ts": 1644962936.864578}]}, "version": 2903}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0831298828125, "step": null, "ts": 1644962936.864578}]}, "version": 2904}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/tardis_loss\n", "step": null, "ts": 1644962937.3758705}]}, "version": 2905}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_t_loss\n", "step": null, "ts": 1644962937.3768208}]}, "version": 2906}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/src_dis_loss\n", "step": null, "ts": 1644962937.3774235}]}, "version": 2907}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Error occurred during asynchronous operation processing: Cannot log infinite or NaN value to attribute metrics/d_s_loss\n", "step": null, "ts": 1644962937.3780704}]}, "version": 2908}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962946.8696558}]}, "version": 2909}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.110466003417969, "step": null, "ts": 1644962946.8696558}]}, "version": 2910}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu"], "values": [{"value": 14.0, "step": null, "ts": 1644962946.8696558}]}, "version": 2911}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0831298828125, "step": null, "ts": 1644962946.8696558}]}, "version": 2912}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [1][0/13]\tT 0.657 (0.657)\tD 0.533 (0.533)\tT@1 33.333 (33.333)\tT@5 100.000 (100.000)\tL nan (nan)", "step": null, "ts": 1644962949.7879405}]}, "version": 2913}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962949.8017476}]}, "version": 2914}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Test on T training set - [1][10/13]\tT 0.462 (0.472)\tD 0.338 (0.353)\tT@1 0.000 (3.030)\tT@5 0.000 (15.296)\tL nan (nan)", "step": null, "ts": 1644962954.3190513}]}, "version": 2915}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "\n", "step": null, "ts": 1644962954.3251357}]}, "version": 2916}
{"obj": {"type": "LogImages", "path": ["fig", "Target True VS Target Pred"], "values": [{"value": {"data": "", "name": null, "description": null}, "step": null, "ts": 1644962959.685226}]}, "version": 2917}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 3.5, "step": null, "ts": 1644962956.8733087}]}, "version": 2918}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 6.036045074462891, "step": null, "ts": 1644962956.8733087}]}, "version": 2919}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 9.0831298828125, "step": null, "ts": 1644962956.8733087}]}, "version": 2920}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "An uncaught exception occurred while run was active on worker compute130.", "step": null, "ts": 1644962959.6943302}, {"value": "Marking run as failed", "step": null, "ts": 1644962959.6943302}, {"value": "Traceback:", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"main.py\", line 281, in <module>\n    main()\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"main.py\", line 135, in main\n    target_features, target_features_2, target_targets, pseudo_labels = validate_compute_cen(val_loader_target, val_loader_source, model, criterion, epoch, args, run)\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/SRDC_CVPR2020/trainer.py\", line 414, in validate_compute_cen\n    tsne_proj = tsne.fit_transform(target_features.cpu().data.numpy())\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 932, in fit_transform\n    embedding = self._fit(X)\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 702, in _fit\n    X = self._validate_data(X, accept_sparse=['csr'],\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/base.py\", line 421, in _validate_data\n    X = check_array(X, **check_params)\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 63, in inner_f\n    return f(*args, **kwargs)\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 663, in check_array\n    _assert_all_finite(array,\n", "step": null, "ts": 1644962959.6943302}, {"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 103, in _assert_all_finite\n    raise ValueError(\n", "step": null, "ts": 1644962959.6943302}, {"value": "Input contains NaN, infinity or a value too large for dtype('float32').", "step": null, "ts": 1644962959.6943302}]}, "version": 2921}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": true}, "version": 2922}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Traceback (most recent call last):\n", "step": null, "ts": 1644962959.6966956}]}, "version": 2923}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.6975844}]}, "version": 2924}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"main.py\", line 281, in <module>\n    main()\n", "step": null, "ts": 1644962959.698155}]}, "version": 2925}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.698664}]}, "version": 2926}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"main.py\", line 135, in main\n    target_features, target_features_2, target_targets, pseudo_labels = validate_compute_cen(val_loader_target, val_loader_source, model, criterion, epoch, args, run)\n", "step": null, "ts": 1644962959.699063}]}, "version": 2927}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.6999834}]}, "version": 2928}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/SRDC_CVPR2020/trainer.py\", line 414, in validate_compute_cen\n    tsne_proj = tsne.fit_transform(target_features.cpu().data.numpy())\n", "step": null, "ts": 1644962959.7008507}]}, "version": 2929}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.701333}]}, "version": 2930}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 932, in fit_transform\n    embedding = self._fit(X)\n", "step": null, "ts": 1644962959.7017062}]}, "version": 2931}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7021923}]}, "version": 2932}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/manifold/_t_sne.py\", line 702, in _fit\n    X = self._validate_data(X, accept_sparse=['csr'],\n", "step": null, "ts": 1644962959.7025173}]}, "version": 2933}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7028582}]}, "version": 2934}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/base.py\", line 421, in _validate_data\n    X = check_array(X, **check_params)\n", "step": null, "ts": 1644962959.7032955}]}, "version": 2935}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7036512}]}, "version": 2936}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 63, in inner_f\n    return f(*args, **kwargs)\n", "step": null, "ts": 1644962959.7040188}]}, "version": 2937}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7048278}]}, "version": 2938}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 663, in check_array\n    _assert_all_finite(array,\n", "step": null, "ts": 1644962959.7053468}]}, "version": 2939}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7056847}]}, "version": 2940}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"/data/home/jkataok1/.conda/envs/cyclegan/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 103, in _assert_all_finite\n    raise ValueError(\n", "step": null, "ts": 1644962959.7060144}]}, "version": 2941}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.706386}]}, "version": 2942}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "ValueError: Input contains NaN, infinity or a value too large for dtype('float32').\n", "step": null, "ts": 1644962959.7067113}]}, "version": 2943}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "", "step": null, "ts": 1644962959.7070339}]}, "version": 2944}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\nIf you suspect this is an IPython 7.29.0 bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@python.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n", "step": null, "ts": 1644962959.7074804}]}, "version": 2945}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1644962959.707911}]}, "version": 2946}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stdout"], "values": [{"value": "Shutting down background jobs, please wait a moment...\n", "step": null, "ts": 1644962959.7084367}]}, "version": 2947}
